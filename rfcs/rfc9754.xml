<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" docName="draft-ietf-nfsv4-delstid-08" number="9754" ipr="trust200902" obsoletes="" updates="" sortRefs="true" submissionType="IETF" consensus="true" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en" prepTime="2025-03-26T16:27:14" indexInclude="true" scripts="Common,Latin">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-nfsv4-delstid-08" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9754" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="Delegation of Stateids">Extensions for Opening and Delegating Files in NFSv4.2</title>
    <seriesInfo name="RFC" value="9754" stream="IETF"/>
    <author fullname="Thomas Haynes" initials="T." surname="Haynes">
      <organization abbrev="Hammerspace" showOnFrontPage="true">Hammerspace</organization>
      <address>
        <email>loghyr@hammerspace.com</email>
      </address>
    </author>
    <author fullname="Trond Myklebust" initials="T." surname="Myklebust">
      <organization abbrev="Hammerspace" showOnFrontPage="true">Hammerspace</organization>
      <address>
        <email>trondmy@hammerspace.com</email>
      </address>
    </author>
    <date month="03" year="2025"/>
    <area>WIT</area>
    <workgroup>nfsv4</workgroup>
    <keyword>NFSv4</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">
      The Network File System v4 (NFSv4) allows a client to both open a
      file and be granted a delegation of that file.  This delegation
      provides the client the right to authoritatively cache metadata
      on the file locally.  This document presents several extensions
      for both opening the file and delegating it to
      the client. This document extends NFSv4.2 (see RFC 7863).
      </t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9754" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2025 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-definitions">Definitions</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-requirements-language">Requirements Language</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-offline-files">Offline Files</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
              <li pn="section-toc.1-1.2.2.1">
                <t indent="0" pn="section-toc.1-1.2.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xdr-for-the-offline-attribu">XDR for the Offline Attribute</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-determining-open-feature-su">Determining OPEN Feature Support</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t indent="0" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xdr-for-open-arguments">XDR for Open Arguments</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-open-grants-either-an-open-">OPEN Grants Either an Open or a Delegation Stateid</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t indent="0" pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-implementation-experience">Implementation Experience</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-proxying-of-times">Proxying of Times</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t indent="0" pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-use-case-for-nfsv3-client-p">Use Case for NFSv3 Client Proxy</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t indent="0" pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xdr-for-proxying-of-times">XDR for Proxying of Times</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-extraction-of-xdr">Extraction of XDR</xref></t>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.a"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgments">Acknowledgments</xref></t>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="sec_intro" numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">
    In the Network File System version 4 (NFSv4), a client may be granted a
    delegation for a file (see <xref target="RFC8881" section="1.8.4" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-1.8.4" derivedContent="RFC8881"/>). This allows the client to act as the authority for
    the file's data and metadata. This document presents a number of
    extensions that enhance the functionality of opens and delegations. These
    allow the client to:
      </t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-1-2">
        <li pn="section-1-2.1">detect an offline file, which may require significant effort to obtain;</li>
        <li pn="section-1-2.2">determine which extensions of OPEN flags are supported by the server;</li>
        <li pn="section-1-2.3">retrieve either the open or delegation stateid, but not
    both simultaneously, during the OPEN procedure; and</li>
        <li pn="section-1-2.4">cache both the access and modify timestamps, thereby reducing the
    frequency with which the client must query the server for this
    information.
    </li>
      </ul>
      <t indent="0" pn="section-1-3">
    Using the process detailed in <xref target="RFC8178" format="default" sectionFormat="of" derivedContent="RFC8178"/>, the revisions in this document become an extension
    of NFSv4.2 <xref target="RFC7862" format="default" sectionFormat="of" derivedContent="RFC7862"/>. They are built on top of the External Data
    Representation (XDR) <xref target="RFC4506" format="default" sectionFormat="of" derivedContent="RFC4506"/> generated from <xref target="RFC7863" format="default" sectionFormat="of" derivedContent="RFC7863"/>.
      </t>
      <section anchor="sec_defs" numbered="true" toc="include" removeInRFC="false" pn="section-1.1">
        <name slugifiedName="name-definitions">Definitions</name>
        <t indent="0" pn="section-1.1-1">This document uses the following terminology:</t>
        <dl newline="false" spacing="normal" indent="3" pn="section-1.1-2">
          <dt pn="section-1.1-2.1">offline file:</dt>
          <dd pn="section-1.1-2.2">
        A file that exists on a device that is not connected to the
        server. There is typically a cost associated with bringing the
        file to an online status. Historically, this would be a file on
        tape media, and the cost would have been finding and loading the
        tape. A more modern interpretation is that the file is in the
        cloud, and the cost is a monetary one in downloading the file.
      </dd>
          <dt pn="section-1.1-2.3">proxy:</dt>
          <dd pn="section-1.1-2.4">
        The proxying of attributes occurs when a client has the authority, as
        granted by the appropriate delegation, to represent the attributes
        normally maintained by the server.  For read attributes, this
        occurs when the client has either a read or write delegation
        for the file. For write attributes, this occurs when the client
        has a write delegation for the file.  The client having this
        authority is the "proxy" for those attributes.
      </dd>
        </dl>
        <t indent="0" pn="section-1.1-3">Further, the definitions of the following terms are referenced
      as follows:</t>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-1.1-4">
          <li pn="section-1.1-4.1">CB_GETATTR (<xref target="RFC8881" section="20.1" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-20.1" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.2">change (<xref target="RFC8881" section="5.8.1.4" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.1.4" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.3">CLOSE (<xref target="RFC8881" section="18.2" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.2" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.4">compound (<xref target="RFC8881" section="2.3" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-2.3" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.5">DELEGRETURN (<xref target="RFC8881" section="18.6" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.6" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.6">GETATTR (<xref target="RFC8881" section="18.7" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.7" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.7">LAYOUTGET (<xref target="RFC8881" section="18.43" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.43" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.8">LOCK (<xref target="RFC8881" section="18.10" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.10" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.9">NFS4ERR_DELAY (<xref target="RFC8881" section="15.1.1.3" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-15.1.1.3" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.10">OPEN (<xref target="RFC8881" section="18.16" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.16" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.11">open_delegation_type4 (<xref target="RFC8881" section="18.16.1" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.16.1" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.12">READ (<xref target="RFC8881" section="18.22" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.22" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.13">READDIR (<xref target="RFC8881" section="18.23" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.23" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.14">SETATTR (<xref target="RFC8881" section="18.30" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.30" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.15">stateid (<xref target="RFC8881" section="8.2" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-8.2" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.16">time_access (<xref target="RFC8881" section="5.8.2.37" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.2.37" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.17">time_metadata (<xref target="RFC8881" section="5.8.2.42" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.2.42" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.18">time_modify (<xref target="RFC8881" section="5.8.2.43" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.2.43" derivedContent="RFC8881"/>)</li>
          <li pn="section-1.1-4.19">WRITE (<xref target="RFC8881" section="18.32" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.32" derivedContent="RFC8881"/>)</li>
        </ul>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.2">
        <name slugifiedName="name-requirements-language">Requirements Language</name>
        <t indent="0" pn="section-1.2-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>
      </section>
    </section>
    <section anchor="sec_offline" numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-offline-files">Offline Files</name>
      <t indent="0" pn="section-2-1">
    If a file is offline, then the server has immediate high-performance
    access to the file's attributes, but not to the file's content.
    The action of retrieving the data content is expensive, to the extent
    that the content should only be retrieved if it is going to be used.
    For example, a graphical file manager (such as Finder in Mac OS X) may
    want to access the beginning of the file to preview it for a user
    who is hovering their pointer over the file name and not accessing
    it otherwise.  If the file is retrieved, it will most likely be either
    immediately thrown away or returned.
      </t>
      <t indent="0" pn="section-2-2">
    A compound with a GETATTR  or READDIR  can report the file's attributes
    without bringing the file online.  However, either an OPEN or a LAYOUTGET
    might cause the file server to retrieve the archived data contents, bringing the
    file online.  For non-parallel NFS systems (see <xref target="RFC8881" section="12" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-12" derivedContent="RFC8881"/>), the OPEN operation
    requires a filehandle to retrieve the data content. For parallel NFS (pNFS) systems, the
    filehandle retrieved from an OPEN need not cause the data content to be
    retrieved. However, when the LAYOUTGET operation is processed, a layout-type-specific mapping
     will cause the data content to be retrieved from offline
    storage.
      </t>
      <t indent="0" pn="section-2-3">
    If the client is not aware that the file is offline, it might
    inadvertently open the file to determine what type of file it
    is accessing.  By interrogating the new attribute fattr4_offline,
    a client can predetermine the availability of the file, avoiding the
    need to open it at all. Being offline might also involve situations
    in which the file is archived in the cloud, i.e., there can be an
    expense in both retrieving the file to bring it online and in sending
    the file back to offline status.
      </t>
      <section anchor="ssec_offline_attr" numbered="true" toc="include" removeInRFC="false" pn="section-2.1">
        <name slugifiedName="name-xdr-for-the-offline-attribu">XDR for the Offline Attribute</name>
        <sourcecode name="" type="xdr" markers="true" pn="section-2.1-1">
///
/// typedef bool            fattr4_offline;
///
///
/// const FATTR4_OFFLINE            = 83;
///
</sourcecode>
      </section>
    </section>
    <section anchor="ssec_open_xor_xdr" numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-determining-open-feature-su">Determining OPEN Feature Support</name>
      <t indent="0" pn="section-3-1">
    <xref target="RFC8178" section="4.4.2" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8178#section-4.4.2" derivedContent="RFC8178"/> allows for
    extending a particular minor version of the NFSv4 protocol without
    requiring the definition of a new minor version.  The client can probe the
    capabilities of the server and, based on the result, determine if both it
    and the server support optional features not previously specified as part
    of the minor version.
      </t>
      <t indent="0" pn="section-3-2">
    The fattr4_open_arguments attribute is a new XDR extension that
    provides helpful support when the OPEN procedure is extended in
    such a fashion. It models all of the parameters via bitmap4 data
    structures, which allows for the addition of a new flag to any of
    the OPEN arguments. The scope of this attribute
    applies to all objects with a matching fsid.
      </t>
      <t indent="0" pn="section-3-3">
    Two new flags are provided:
      </t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-3-4">
        <li pn="section-3-4.1">
      OPEN4_SHARE_ACCESS_WANT_OPEN_XOR_DELEGATION
      (see <xref target="sec_open_xor" format="default" sectionFormat="of" derivedContent="Section 4"/>)
    </li>
        <li pn="section-3-4.2">
      OPEN4_SHARE_ACCESS_WANT_DELEG_TIMESTAMPS
      (see <xref target="sec_proxy" format="default" sectionFormat="of" derivedContent="Section 5"/>)
    </li>
      </ul>
      <t indent="0" pn="section-3-5">
    Subsequent extensions can use this framework when introducing new
    <bcp14>OPTIONAL</bcp14> functionality to OPEN by creating a new
    flag for each <bcp14>OPTIONAL</bcp14> parameter.
      </t>
      <t indent="0" pn="section-3-6">
    Since fattr4_open_arguments is a <bcp14>RECOMMENDED</bcp14> attribute, if the
    server informs the client via NFS4ERR_ATTRNOTSUPP that it does not support this new
    attribute, the client <bcp14>MUST</bcp14> take this to mean that
    the additional new <bcp14>OPTIONAL</bcp14> functionality to OPEN
    is also not supported.
      </t>
      <t indent="0" pn="section-3-7">
    Some other concerns are how to process both currently
    <bcp14>REQUIRED</bcp14> flags and <bcp14>OPTIONAL</bcp14> flags that
    become <bcp14>REQUIRED</bcp14> in the future.  The server
    <bcp14>MUST</bcp14> mark <bcp14>REQUIRED</bcp14> flags as being supported.
    Note that these flags <bcp14>MUST</bcp14> only change from
    <bcp14>OPTIONAL</bcp14> to <bcp14>REQUIRED</bcp14> when the NFSv4 minor
    version is incremented.
      </t>
      <section anchor="ssec_open_xdr" numbered="true" toc="include" removeInRFC="false" pn="section-3.1">
        <name slugifiedName="name-xdr-for-open-arguments">XDR for Open Arguments</name>
        <sourcecode name="" type="xdr" markers="true" pn="section-3.1-1">
///
/// struct open_arguments4 {
///   bitmap4  oa_share_access;
///   bitmap4  oa_share_deny;
///   bitmap4  oa_share_access_want;
///   bitmap4  oa_open_claim;
///   bitmap4  oa_create_mode;
/// };
///
///
/// enum open_args_share_access4 {
///    OPEN_ARGS_SHARE_ACCESS_READ  = 1,
///    OPEN_ARGS_SHARE_ACCESS_WRITE = 2,
///    OPEN_ARGS_SHARE_ACCESS_BOTH  = 3
/// };
///
///
/// enum open_args_share_deny4 {
///    OPEN_ARGS_SHARE_DENY_NONE  = 0,
///    OPEN_ARGS_SHARE_DENY_READ  = 1,
///    OPEN_ARGS_SHARE_DENY_WRITE = 2,
///    OPEN_ARGS_SHARE_DENY_BOTH  = 3
/// };
///
///
/// enum open_args_share_access_want4 {
///    OPEN_ARGS_SHARE_ACCESS_WANT_ANY_DELEG           = 3,
///    OPEN_ARGS_SHARE_ACCESS_WANT_NO_DELEG            = 4,
///    OPEN_ARGS_SHARE_ACCESS_WANT_CANCEL              = 5,
///    OPEN_ARGS_SHARE_ACCESS_WANT_SIGNAL_DELEG_WHEN_RESRC_AVAIL
///                                                    = 17,
///    OPEN_ARGS_SHARE_ACCESS_WANT_PUSH_DELEG_WHEN_UNCONTENDED
///                                                    = 18,
///    OPEN_ARGS_SHARE_ACCESS_WANT_DELEG_TIMESTAMPS    = 20,
///    OPEN_ARGS_SHARE_ACCESS_WANT_OPEN_XOR_DELEGATION = 21
/// };
///
///
/// enum open_args_open_claim4 {
///    OPEN_ARGS_OPEN_CLAIM_NULL          = 0,
///    OPEN_ARGS_OPEN_CLAIM_PREVIOUS      = 1,
///    OPEN_ARGS_OPEN_CLAIM_DELEGATE_CUR  = 2,
///    OPEN_ARGS_OPEN_CLAIM_DELEGATE_PREV = 3,
///    OPEN_ARGS_OPEN_CLAIM_FH            = 4,
///    OPEN_ARGS_OPEN_CLAIM_DELEG_CUR_FH  = 5,
///    OPEN_ARGS_OPEN_CLAIM_DELEG_PREV_FH = 6
/// };
///
///
/// enum open_args_createmode4 {
///    OPEN_ARGS_CREATEMODE_UNCHECKED4     = 0,
///    OPEN_ARGS_CREATE_MODE_GUARDED       = 1,
///    OPEN_ARGS_CREATEMODE_EXCLUSIVE4     = 2,
///    OPEN_ARGS_CREATE_MODE_EXCLUSIVE4_1  = 3
/// };
///
///
/// typedef open_arguments4 fattr4_open_arguments;
///
///
/// %/*
/// % * Determine what OPEN supports.
/// % */
/// const FATTR4_OPEN_ARGUMENTS     = 86;
///
///
/// const OPEN4_SHARE_ACCESS_WANT_OPEN_XOR_DELEGATION = 0x200000;
///
///
/// const OPEN4_RESULT_NO_OPEN_STATEID = 0x00000010;
///
</sourcecode>
      </section>
    </section>
    <section anchor="sec_open_xor" numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-open-grants-either-an-open-">OPEN Grants Either an Open or a Delegation Stateid</name>
      <t indent="0" pn="section-4-1">
    The OPEN 
    procedure returns an open stateid to the client to reference the state of
    the file.  The client could also request a delegation stateid in the OPEN
    arguments.  The file can be considered open for the client as long as the
    count of open and delegated stateids is greater than 0.  Either type of
    stateid is sufficient to enable the server to treat the file as if it were
    open, which allows READ, WRITE, LOCK, and LAYOUTGET  operations to proceed. If the client
    gets both an open and a delegation stateid as part of the OPEN, then it
    has to return them both to the server.  A further consideration is that
    during each operation, the client can send a costly GETATTR.
      </t>
      <t indent="0" pn="section-4-2">
    If the client knows that the server supports the
    OPEN4_SHARE_ACCESS_WANT_OPEN_XOR_DELEGATION flag (as determined by an
    earlier GETATTR operation that queried for the fattr4_open_arguments
    attribute), then the client can supply that flag during the OPEN and
    get either an open or a delegation stateid.
      </t>
      <t indent="0" pn="section-4-3">
    The client is already prepared to not get a delegation
    stateid, even if requested. In order to not send an open
    stateid, the server <bcp14>MUST</bcp14> indicate that fact with the result
    flag of OPEN4_RESULT_NO_OPEN_STATEID. The open stateid field,
    OPEN4resok.stateid, <bcp14>MUST</bcp14> be set to the
    special all-zero stateid in this case.
      </t>
      <t indent="0" pn="section-4-4">
    Note that the OPEN4_SHARE_ACCESS_WANT_OPEN_XOR_DELEGATION flag is a
    hint. The server might return both stateids. Consider the scenario in
    which the client opens a file for read-only (with
    OPEN4_SHARE_ACCESS_WANT_OPEN_XOR_DELEGATION set) and only gets an open
    stateid. If the client then opens the file for read-write (with
    OPEN4_SHARE_ACCESS_WANT_OPEN_XOR_DELEGATION set), the server can return
    one of the following three options:
      </t>
      <ol indent="adaptive" spacing="normal" start="1" type="1" pn="section-4-5">
    <li pn="section-4-5.1" derivedCounter="1.">Only an open stateid with the correct seqid.</li>
        <li pn="section-4-5.2" derivedCounter="2.">Only a delegation stateid with the open stateid now having an incorrect seqid as it needs to be upgraded.</li>
        <li pn="section-4-5.3" derivedCounter="3.">Both an open stateid (which will be upgraded) and a delegation stateid.</li>
      </ol>
      <t indent="0" pn="section-4-6">
    In this scenario, returning just a delegation stateid would hide
    information from the client. If the client already has an open stateid,
    then the server <bcp14>SHOULD</bcp14> ignore the
    OPEN4_SHARE_ACCESS_WANT_OPEN_XOR_DELEGATION flag and return both the open
    and delegation stateids.
      </t>
      <section anchor="delstid_analysis" numbered="true" toc="include" removeInRFC="false" pn="section-4.1">
        <name slugifiedName="name-implementation-experience">Implementation Experience</name>
        <t indent="0" pn="section-4.1-1">
      The CLOSE operation neither explicitly nor implicitly releases any
      delegation stateids. This is not symmetrical with the OPEN operation,
      which can grant both an open and a delegation stateid.  This specification
      could have tried to extend the CLOSE operation to release both
      stateids, but implementation experience shows that is more costly
      than the approach that has been proposed.
        </t>
        <t indent="0" pn="section-4.1-2">
      Consider a small workload of creating a file with content. This involves
      three synchronous operations and one asynchronous operation with
      existing implementations:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-4.1-3">
          <li pn="section-4.1-3.1">The first synchronous operation has to OPEN the file.</li>
          <li pn="section-4.1-3.2">The second synchronous operation performs the WRITE to the file.</li>
          <li pn="section-4.1-3.3">The third synchronous operation has to CLOSE the file.</li>
          <li pn="section-4.1-3.4">The asynchronous operation uses DELEGRETURN to return the delegation stateid.</li>
        </ul>
        <sourcecode name="" type="pseudocode" markers="true" pn="section-4.1-4">
      SEQ PUTFH OPEN GETFH GETATTR
      SEQ PUTFH WRITE GETATTR
      SEQ PUTFH CLOSE
      ...
      SEQ PUTFH DELEGRETURN
</sourcecode>
        <t indent="0" pn="section-4.1-5">
      With the proposed approach of setting the
      OPEN_ARGS_SHARE_ACCESS_WANT_OPEN_XOR_DELEGATION flag during
      the OPEN, the number of operations is always three.  The first two
      compounds are still synchronous, but the last is asynchronous. That is,
      since the client no longer has to send a CLOSE operation, it can
      delay the DELEGRETURN until either the server requests it back
      via delegation recall or garbage collection causes the client to
      return the stateid.
        </t>
        <sourcecode name="" type="pseudocode" markers="true" pn="section-4.1-6">
      SEQ PUTFH OPEN(OPEN_ARGS_SHARE_ACCESS_WANT_OPEN_XOR_DELEGATION)
          GETFH GETATTR
      SEQ PUTFH WRITE GETATTR
      ...
      SEQ PUTFH DELEGRETURN
</sourcecode>
        <t indent="0" pn="section-4.1-7">
      This approach reduces the cost of synchronous operations by 33%
      and the total number of operations by 25%. Contrast that with
      the alternative proposal of having CLOSE return both stateids,
      which would not reduce the number of synchronous operations.
        </t>
      </section>
    </section>
    <section anchor="sec_proxy" numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-proxying-of-times">Proxying of Times</name>
      <t indent="0" pn="section-5-1">
    When a client is granted a write delegation on a file, it becomes the
    authority for the file contents and associated attributes.  If the server
    queries the client as to the state of the file via a CB_GETATTR, then according to
    the unextended NFSv4 protocol, it can only determine the size of the file
    and the change attribute. In the case of the client holding the
    delegation, it has the current values of the access and modify times.
    There is no way that other clients can have access to these values.  To
    notify the server of the proxied values, the client could send a compound
    of the form SEQ, PUTFH, SETATTR (time_modify | time_access), DELEGRETURN;
    however, the SETATTR operation would cause either or both of the change attribute
    or time_metadata attribute to be modified to the current time on the server.

    There is no current provision to obtain these values before
    delegation return using CB_GETATTR. As a result, it cannot pass on these
    times to an application expecting POSIX compliance, as is often
    necessary for correct operation.
      </t>
      <t indent="0" pn="section-5-2">
    With the addition of the new 
    OPEN4_SHARE_ACCESS_WANT_DELEG_TIMESTAMPS flag, the client and server can
    negotiate that the client will be the authority for these values, and upon
    return of the delegation stateid via a DELEGRETURN, the times will be
    passed back to the server. If the server is queried by another client for
    either the size or the times, it will need to use a CB_GETATTR to query
    the client that holds the delegation.
      </t>
      <t indent="0" pn="section-5-3">
    If a server informs the client via the fattr4_open_arguments attribute
    that it supports OPEN_ARGS_SHARE_ACCESS_WANT_DELEG_TIMESTAMPS and it
    returns a valid delegation stateid for an OPEN operation that sets the
    OPEN4_SHARE_ACCESS_WANT_DELEG_TIMESTAMPS flag, then it <bcp14>MUST</bcp14>
    query the client via a CB_GETATTR for the fattr4_time_deleg_access
    attribute (see <xref target="ssec_proxy_xdr" format="default" sectionFormat="of" derivedContent="Section 5.2"/>) and the
    fattr4_time_deleg_modify attribute (see <xref target="ssec_proxy_xdr" format="default" sectionFormat="of" derivedContent="Section 5.2"/>). (Note that the change time can be derived from
    the modify time.) Further, when a server gets a SETATTR with those attributes
    set, then it <bcp14>MUST</bcp14> accept those changes in the
    fattr4_time_deleg_access and fattr4_time_deleg_modify
    attributes and derive the change time, or it <bcp14>MUST</bcp14> reject the changes with
    NFS4ERR_DELAY.
      </t>
      <t indent="0" pn="section-5-4">
    When the server grants a delegation stateid, it
    <bcp14>MUST</bcp14> inform the client by setting the appropriate
    flag in the open_delegation_type4 response.
    The server <bcp14>MUST</bcp14> set OPEN_DELEGATE_READ_ATTRS_DELEG when it
    grants a read attribute delegation and <bcp14>MUST</bcp14> set
    OPEN_DELEGATE_WRITE_ATTRS_DELEG when it grants a write attribute
    delegation.
      </t>
      <t indent="0" pn="section-5-5">
    These new attributes are invalid to be used with GETATTR, VERIFY, and NVERIFY, and they
    can only be used with CB_GETATTR and SETATTR by a  client holding an
    appropriate delegation.  The SETATTR <bcp14>SHOULD</bcp14> be either 
    1) in a separate compound before the one containing the DELEGRETURN or
    2) in the same compound as an operation before the DELEGRETURN.
    Failure to properly sequence the operations may lead to race conditions.
      </t>
      <t indent="0" pn="section-5-6">
    A key prerequisite of this approach is that the server and client are in
    time synchronization with each other.  Note that while the base NFSv4.2
    does not require such synchronization, the use of RPCSEC_GSS typically
    makes such a requirement. When the client presents either the
    fattr4_time_deleg_access or the fattr4_time_deleg_modify attribute to the
    server, the server <bcp14>MUST</bcp14> decide for both of them whether the time presented is:</t>
      <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-5-7">
        <li pn="section-5-7.1">before the corresponding time_access attribute or time_modify
      attribute on the file, or</li>
        <li pn="section-5-7.2">past the current server time.</li>
      </ul>
      <t indent="0" pn="section-5-8">When the time
    presented is before the original time, then the update is ignored. When
    the time presented is in the future, the server can either clamp the new
    time to the current time or return NFS4ERR_DELAY to the client,
    allowing it to retry.  Note that if the clock skew is large, the delay
    approach would result in access to the file being denied until the clock
    skew is exceeded.
      </t>
      <t indent="0" pn="section-5-9">
    A change in the access time <bcp14>MUST NOT</bcp14> advance the change
    time, also known as the time_metadata attribute. However, a
    change in the modify time might advance the change time (and in turn, the
    change attribute).  If the modify time is greater than the change time
    and before the current time, then the change time is adjusted to the
    modify time and not the current time (as is most likely done on most
    SETATTR calls that change the metadata). If the modify time is in the
    future, it will be clamped to the current time.
      </t>
      <t indent="0" pn="section-5-10">
    Note that each of the possible times (access, modify, and change) are
    compared to the current time. They should all be compared against
    the same time value for the current time (i.e., they do not retrieve
    a different value of the current time for each calculation).
      </t>
      <t indent="0" pn="section-5-11">
    If the client sets the OPEN4_SHARE_ACCESS_WANT_DELEG_TIMESTAMPS
    flag in an OPEN operation, then it <bcp14>MUST</bcp14> support
    the fattr4_time_deleg_access
    and fattr4_time_deleg_modify attributes in both the CB_GETATTR
    and SETATTR operations.
      </t>
      <section anchor="ssec_proxy_use" numbered="true" toc="include" removeInRFC="false" pn="section-5.1">
        <name slugifiedName="name-use-case-for-nfsv3-client-p">Use Case for NFSv3 Client Proxy</name>
        <t indent="0" pn="section-5.1-1">
      Consider an NFSv3 client that wants to access data on a server
      that only supports NFSv4.2.  An implementation may introduce an
      NFSv3 server that functions as an NFSv4.2 client, serving as a
      gateway between the two otherwise incompatible systems.  As NFSv3
      is a stateless protocol, the state is not kept on the client, but rather
      on the NFSv3 server. As the NFSv3 server is already managing the
      state, it can proxy file delegations to avoid spurious GETATTRs. That is, as the client queries the NFSv3 server for the attributes,
      they can be served without the NFSv3 server sending a GETATTR to
      the NFSv4.2 server.
        </t>
      </section>
      <section anchor="ssec_proxy_xdr" numbered="true" toc="include" removeInRFC="false" pn="section-5.2">
        <name slugifiedName="name-xdr-for-proxying-of-times">XDR for Proxying of Times</name>
        <sourcecode name="" type="xdr" markers="true" pn="section-5.2-1">
///
/// /*
///  * attributes for the delegation times being
///  * cached and served by the "client"
///  */
/// typedef nfstime4        fattr4_time_deleg_access;
/// typedef nfstime4        fattr4_time_deleg_modify;
///
///
/// %/*
/// % * New RECOMMENDED Attribute for
/// % * delegation caching of times
/// % */
/// const FATTR4_TIME_DELEG_ACCESS  = 84;
/// const FATTR4_TIME_DELEG_MODIFY  = 85;
///
///
/// const OPEN4_SHARE_ACCESS_WANT_DELEG_TIMESTAMPS = 0x100000;
///
/// enum open_delegation_type4 {
///        OPEN_DELEGATE_NONE                  = 0,
///        OPEN_DELEGATE_READ                  = 1,
///        OPEN_DELEGATE_WRITE                 = 2,
///        OPEN_DELEGATE_NONE_EXT              = 3, /* new to v4.1 */
///        OPEN_DELEGATE_READ_ATTRS_DELEG      = 4,
///        OPEN_DELEGATE_WRITE_ATTRS_DELEG     = 5
/// };
</sourcecode>
      </section>
    </section>
    <section anchor="xdr_desc" numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-extraction-of-xdr">Extraction of XDR</name>
      <t indent="0" pn="section-6-1">
    This document contains the XDR <xref target="RFC4506" format="default" sectionFormat="of" derivedContent="RFC4506"/> description of the
    new open flags for delegating the file to the client.  The XDR description
    is embedded in this document in a way that makes it simple for the reader
    to extract into a ready-to-compile form.  The reader can feed this
    document into the following shell script to produce the machine-readable
    XDR description of the new flags:
      </t>
      <sourcecode name="" type="shell" markers="true" pn="section-6-2">
#!/bin/sh
grep '^ *///' $* | sed 's?^ */// ??' | sed 's?^ *///$??'
</sourcecode>
      <t indent="0" pn="section-6-3">
    That is, if the above script is stored in a file called "extract.sh" and
    this document is in a file called "spec.txt", then the reader can do the
    following:
      </t>
      <sourcecode name="" type="shell" markers="true" pn="section-6-4">
sh extract.sh &lt; spec.txt &gt; delstid_prot.x
</sourcecode>
      <t indent="0" pn="section-6-5">
    The effect of the script is to remove leading blank space from each
    line, plus a sentinel sequence of "///".  XDR descriptions with the
    sentinel sequence are embedded throughout the document.
      </t>
      <t indent="0" pn="section-6-6">
    Note that the XDR code contained in this document depends on types
    from the NFSv4.2 nfs4_prot.x file (generated from <xref target="RFC7863" format="default" sectionFormat="of" derivedContent="RFC7863"/>).  This includes both nfs types that
    end with a 4 (such as offset4 and length4) as well as more generic
    types (such as uint32_t and uint64_t).
      </t>
      <t indent="0" pn="section-6-7">
    While the XDR can be appended to that from
    <xref target="RFC7863" format="default" sectionFormat="of" derivedContent="RFC7863"/>,
    the various code snippets belong in their respective areas of
    that XDR.
      </t>
    </section>
    <section anchor="sec_security" numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-7-1">
    While this document extends some capabilities for client delegation, there are
    no new security concerns.  The client cannot be queried by other clients
    as to the cached attributes. The client could report false data for the
    cached attributes, but it already has this ability via a SETATTR operation.
      </t>
    </section>
    <section anchor="sec_iana" numbered="true" toc="include" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t indent="0" pn="section-8-1">This document has no IANA actions.</t>
    </section>
  </middle>
  <back>
    <references pn="section-9">
      <name slugifiedName="name-normative-references">Normative References</name>
      <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
        <front>
          <title>Key words for use in RFCs to Indicate Requirement Levels</title>
          <author fullname="S. Bradner" initials="S." surname="Bradner"/>
          <date month="March" year="1997"/>
          <abstract>
            <t indent="0">In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
          </abstract>
        </front>
        <seriesInfo name="BCP" value="14"/>
        <seriesInfo name="RFC" value="2119"/>
        <seriesInfo name="DOI" value="10.17487/RFC2119"/>
      </reference>
      <reference anchor="RFC4506" target="https://www.rfc-editor.org/info/rfc4506" quoteTitle="true" derivedAnchor="RFC4506">
        <front>
          <title>XDR: External Data Representation Standard</title>
          <author fullname="M. Eisler" initials="M." role="editor" surname="Eisler"/>
          <date month="May" year="2006"/>
          <abstract>
            <t indent="0">This document describes the External Data Representation Standard (XDR) protocol as it is currently deployed and accepted. This document obsoletes RFC 1832. [STANDARDS-TRACK]</t>
          </abstract>
        </front>
        <seriesInfo name="STD" value="67"/>
        <seriesInfo name="RFC" value="4506"/>
        <seriesInfo name="DOI" value="10.17487/RFC4506"/>
      </reference>
      <reference anchor="RFC7862" target="https://www.rfc-editor.org/info/rfc7862" quoteTitle="true" derivedAnchor="RFC7862">
        <front>
          <title>Network File System (NFS) Version 4 Minor Version 2 Protocol</title>
          <author fullname="T. Haynes" initials="T." surname="Haynes"/>
          <date month="November" year="2016"/>
          <abstract>
            <t indent="0">This document describes NFS version 4 minor version 2; it describes the protocol extensions made from NFS version 4 minor version 1. Major extensions introduced in NFS version 4 minor version 2 include the following: Server-Side Copy, Application Input/Output (I/O) Advise, Space Reservations, Sparse Files, Application Data Blocks, and Labeled NFS.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="7862"/>
        <seriesInfo name="DOI" value="10.17487/RFC7862"/>
      </reference>
      <reference anchor="RFC7863" target="https://www.rfc-editor.org/info/rfc7863" quoteTitle="true" derivedAnchor="RFC7863">
        <front>
          <title>Network File System (NFS) Version 4 Minor Version 2 External Data Representation Standard (XDR) Description</title>
          <author fullname="T. Haynes" initials="T." surname="Haynes"/>
          <date month="November" year="2016"/>
          <abstract>
            <t indent="0">This document provides the External Data Representation (XDR) description for NFS version 4 minor version 2.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="7863"/>
        <seriesInfo name="DOI" value="10.17487/RFC7863"/>
      </reference>
      <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
        <front>
          <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
          <author fullname="B. Leiba" initials="B." surname="Leiba"/>
          <date month="May" year="2017"/>
          <abstract>
            <t indent="0">RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
          </abstract>
        </front>
        <seriesInfo name="BCP" value="14"/>
        <seriesInfo name="RFC" value="8174"/>
        <seriesInfo name="DOI" value="10.17487/RFC8174"/>
      </reference>
      <reference anchor="RFC8178" target="https://www.rfc-editor.org/info/rfc8178" quoteTitle="true" derivedAnchor="RFC8178">
        <front>
          <title>Rules for NFSv4 Extensions and Minor Versions</title>
          <author fullname="D. Noveck" initials="D." surname="Noveck"/>
          <date month="July" year="2017"/>
          <abstract>
            <t indent="0">This document describes the rules relating to the extension of the NFSv4 family of protocols. It covers the creation of minor versions, the addition of optional features to existing minor versions, and the correction of flaws in features already published as Proposed Standards. The rules relating to the construction of minor versions and the interaction of minor version implementations that appear in this document supersede the minor versioning rules in RFC 5661 and other RFCs defining minor versions.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="8178"/>
        <seriesInfo name="DOI" value="10.17487/RFC8178"/>
      </reference>
      <reference anchor="RFC8881" target="https://www.rfc-editor.org/info/rfc8881" quoteTitle="true" derivedAnchor="RFC8881">
        <front>
          <title>Network File System (NFS) Version 4 Minor Version 1 Protocol</title>
          <author fullname="D. Noveck" initials="D." role="editor" surname="Noveck"/>
          <author fullname="C. Lever" initials="C." surname="Lever"/>
          <date month="August" year="2020"/>
          <abstract>
            <t indent="0">This document describes the Network File System (NFS) version 4 minor version 1, including features retained from the base protocol (NFS version 4 minor version 0, which is specified in RFC 7530) and protocol extensions made subsequently. The later minor version has no dependencies on NFS version 4 minor version 0, and is considered a separate protocol.</t>
            <t indent="0">This document obsoletes RFC 5661. It substantially revises the treatment of features relating to multi-server namespace, superseding the description of those features appearing in RFC 5661.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="8881"/>
        <seriesInfo name="DOI" value="10.17487/RFC8881"/>
      </reference>
    </references>
    <section numbered="false" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgments">Acknowledgments</name>
      <t indent="0" pn="section-appendix.a-1"><contact fullname="Trond Myklebust"/>, <contact fullname="Tom       Haynes"/>, and <contact fullname="David Flynn"/> all worked on the
      prototype at Hammerspace.</t>
      <t indent="0" pn="section-appendix.a-2"><contact fullname="Dave Noveck"/>, <contact fullname="Chuck Lever"/>,
      <contact fullname="Rick Macklem"/>, and <contact fullname="Zaheduzzaman       Sarker"/> provided reviews of the document.</t>
      <t indent="0" pn="section-appendix.a-3"><contact fullname="Jeff Layton"/> provided experience from an
      implementation he authored.</t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author fullname="Thomas Haynes" initials="T." surname="Haynes">
        <organization abbrev="Hammerspace" showOnFrontPage="true">Hammerspace</organization>
        <address>
          <email>loghyr@hammerspace.com</email>
        </address>
      </author>
      <author fullname="Trond Myklebust" initials="T." surname="Myklebust">
        <organization abbrev="Hammerspace" showOnFrontPage="true">Hammerspace</organization>
        <address>
          <email>trondmy@hammerspace.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
