<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" docName="draft-ietf-nfsv4-layoutwcc-07" number="9766" ipr="trust200902" obsoletes="" updates="" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="3" tocInclude="true" consensus="true" xml:lang="en" prepTime="2025-04-23T11:48:03" indexInclude="true" scripts="Common,Latin">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-nfsv4-layoutwcc-07" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9766" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="WCC in NFSv4.2's Flexible File Layout">Extensions for Weak Cache Consistency in NFSv4.2's Flexible File Layout</title>
    <seriesInfo name="RFC" value="9766" stream="IETF"/>
    <author fullname="Thomas Haynes" initials="T." surname="Haynes">
      <organization abbrev="Hammerspace" showOnFrontPage="true">Hammerspace</organization>
      <address>
        <email>loghyr@gmail.com</email>
      </address>
    </author>
    <author fullname="Trond Myklebust" initials="T." surname="Myklebust">
      <organization abbrev="Hammerspace" showOnFrontPage="true">Hammerspace</organization>
      <address>
        <email>trondmy@hammerspace.com</email>
      </address>
    </author>
    <date month="04" year="2025"/>
    <area>WIT</area>
    <workgroup>nfsv4</workgroup>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">
      This document specifies extensions to NFSv4.2 for improving Weak Cache
      Consistency (WCC).  These extensions introduce mechanisms that ensure
      partial writes performed under a Parallel NFS (pNFS) layout remain
      coherent and correctly tracked. The solution addresses concurrency and
      data integrity concerns that may arise when multiple clients write to
      the same file through separate data servers. By defining additional
      interactions among clients, metadata servers, and data servers, this
      specification enhances the reliability of NFSv4 in parallel-access
      environments and ensures consistency across diverse deployment
      scenarios.
      </t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9766" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2025 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-definitions">Definitions</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-requirements-language">Requirements Language</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-weak-cache-consistency-wcc">Weak Cache Consistency (WCC)</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-operation-77-layout_wcc-lay">Operation 77: LAYOUT_WCC - Layout Weak Cache Consistency</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t indent="0" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-argument">ARGUMENT</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.2">
                <t indent="0" pn="section-toc.1-1.3.2.2.1"><xref derivedContent="3.2" format="counter" sectionFormat="of" target="section-3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-result">RESULT</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.3">
                <t indent="0" pn="section-toc.1-1.3.2.3.1"><xref derivedContent="3.3" format="counter" sectionFormat="of" target="section-3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-description">DESCRIPTION</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.4">
                <t indent="0" pn="section-toc.1-1.3.2.4.1"><xref derivedContent="3.4" format="counter" sectionFormat="of" target="section-3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-implementation">Implementation</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.4.2">
                  <li pn="section-toc.1-1.3.2.4.2.1">
                    <t indent="0" pn="section-toc.1-1.3.2.4.2.1.1"><xref derivedContent="3.4.1" format="counter" sectionFormat="of" target="section-3.4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-examples-of-when-to-use-lay">Examples of When to Use LAYOUT_WCC</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.4.2.2">
                    <t indent="0" pn="section-toc.1-1.3.2.4.2.2.1"><xref derivedContent="3.4.2" format="counter" sectionFormat="of" target="section-3.4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-examples-of-what-to-send-in">Examples of What to Send in LAYOUT_WCC</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.3.2.5">
                <t indent="0" pn="section-toc.1-1.3.2.5.1"><xref derivedContent="3.5" format="counter" sectionFormat="of" target="section-3.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-allowed-errors">Allowed Errors</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.6">
                <t indent="0" pn="section-toc.1-1.3.2.6.1"><xref derivedContent="3.6" format="counter" sectionFormat="of" target="section-3.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-extension-of-existing-imple">Extension of Existing Implementations</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.7">
                <t indent="0" pn="section-toc.1-1.3.2.7.1"><xref derivedContent="3.7" format="counter" sectionFormat="of" target="section-3.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-flexible-file-layout-type">Flexible File Layout Type</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-extraction-of-xdr">Extraction of XDR</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t indent="0" pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.2">
                <t indent="0" pn="section-toc.1-1.7.2.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.a"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgments">Acknowledgments</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="sec_intro" numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">
    In the Parallel NFS (pNFS)
    flexible file layout (see <xref target="RFC8435" format="default" sectionFormat="of" derivedContent="RFC8435"/>), there is no mechanism for the data servers to
    update the metadata servers when the data portion of the file is
    modified.  The metadata server needs this knowledge to correspondingly
    update the metadata portion of the file. If the client is using NFSv3 as
    the protocol with the data server, it can leverage Weak Cache Consistency
    (WCC) to update the metadata server of the attribute changes.  In this
    document, we introduce a new operation called LAYOUT_WCC to NFSv4.2, which
    allows the client to periodically report the attributes of the data files
    to the metadata server.
      </t>
      <t indent="0" pn="section-1-2">
    Using the process detailed in <xref target="RFC8178" format="default" sectionFormat="of" derivedContent="RFC8178"/>, the revisions in this document become an
    extension of NFSv4.2 <xref target="RFC7862" format="default" sectionFormat="of" derivedContent="RFC7862"/>. They are built on top of the External Data
    Representation (XDR) <xref target="RFC4506" format="default" sectionFormat="of" derivedContent="RFC4506"/> generated from <xref target="RFC7863" format="default" sectionFormat="of" derivedContent="RFC7863"/>.
      </t>
      <section anchor="sec_defs" numbered="true" toc="include" removeInRFC="false" pn="section-1.1">
        <name slugifiedName="name-definitions">Definitions</name>
        <t indent="0" pn="section-1.1-1">
      For a more comprehensive set of definitions, see <xref target="RFC8435" sectionFormat="of" section="1.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8435#section-1.1" derivedContent="RFC8435"/>.
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-1.1-2">
          <dt pn="section-1.1-2.1">(file) data:</dt>
          <dd pn="section-1.1-2.2">
        that part of the file system object that contains the
        data to be read or written.  It is the contents of the object
        rather than the attributes of the object.
      </dd>
          <dt pn="section-1.1-2.3">data server (DS):</dt>
          <dd pn="section-1.1-2.4">
        a pNFS server that provides the file's data when
        the file system object is accessed over a file-based protocol.
      </dd>
          <dt pn="section-1.1-2.5">(file) metadata:</dt>
          <dd pn="section-1.1-2.6">
        the part of the file system object that contains
        various descriptive data relevant to the file object, as opposed
        to the file data itself.  This could include the time of last
        modification, access time, EOF position, etc.
      </dd>
          <dt pn="section-1.1-2.7">metadata server (MDS):</dt>
          <dd pn="section-1.1-2.8">
        the pNFS server that provides metadata
        information for a file system object.
      </dd>
          <dt pn="section-1.1-2.9">storage device:</dt>
          <dd pn="section-1.1-2.10">
        the target to which clients may direct I/O requests
        when they hold an appropriate layout.  Note that each data server
        is a storage device but that some storage device are not data
        servers. (See <xref target="RFC8434" sectionFormat="of" section="2.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8434#section-2.1" derivedContent="RFC8434"/>
        for a discussion on the difference between a data server
        and a storage device.)
      </dd>
          <dt pn="section-1.1-2.11">weak cache consistency (WCC):</dt>
          <dd pn="section-1.1-2.12">
        the mechanism in NFSv3 that allows the client to check for file attribute changes
        before and after an operation (see <xref target="RFC1813" sectionFormat="of" section="2.6" format="default" derivedLink="https://rfc-editor.org/rfc/rfc1813#section-2.6" derivedContent="RFC1813"/>).
      </dd>
        </dl>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.2">
        <name slugifiedName="name-requirements-language">Requirements Language</name>
        <t indent="0" pn="section-1.2-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
    </section>
    <section anchor="wcc" numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-weak-cache-consistency-wcc">Weak Cache Consistency (WCC)</name>
      <t indent="0" pn="section-2-1">
       A pNFS layout type enables the metadata server to inform the client of
       both the storage protocol and the locations of the data that the client
       should use when communicating with the storage devices. The flexible
       file layout type, as specified in <xref target="RFC8435" format="default" sectionFormat="of" derivedContent="RFC8435"/>, describes
       how data servers using NFSv3 can be accessed. The client is restricted
       to performing the following NFSv3 operations on the filehandles
       provided in the layout: READ, WRITE, and COMMIT (see Sections <xref target="RFC1813" sectionFormat="bare" section="3.3.6" format="default" derivedLink="https://rfc-editor.org/rfc/rfc1813#section-3.3.6" derivedContent="RFC1813"/>, <xref target="RFC1813" sectionFormat="bare" section="3.3.7" format="default" derivedLink="https://rfc-editor.org/rfc/rfc1813#section-3.3.7" derivedContent="RFC1813"/>, and <xref target="RFC1813" sectionFormat="bare" section="3.3.21" format="default" derivedLink="https://rfc-editor.org/rfc/rfc1813#section-3.3.21" derivedContent="RFC1813"/> of <xref target="RFC1813" format="default" sectionFormat="of" derivedContent="RFC1813"/>, respectively). In other words, the client may only use NFSv3
       operations that act directly on the data portion of the file.
      </t>
      <t indent="0" pn="section-2-2">
       Because there is no control protocol (see <xref target="RFC8434" format="default" sectionFormat="of" derivedContent="RFC8434"/>) possible with all data servers,
       NFSv3 is used as the control protocol.  As such, the following NFSv3
       operations are commonly used by the metadata server: CREATE, GETATTR,
       and SETATTR (see Sections <xref target="RFC1813" section="3.3.8" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc1813#section-3.3.8" derivedContent="RFC1813"/>, <xref target="RFC1813" section="3.3.1" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc1813#section-3.3.1" derivedContent="RFC1813"/>, and <xref target="RFC1813" section="3.3.2" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc1813#section-3.3.2" derivedContent="RFC1813"/> of <xref target="RFC1813" format="default" sectionFormat="of" derivedContent="RFC1813"/>, respectively). That
       is, the metadata server is only allowed to use NFSv3 operations that
       directly act on the metadata portion of the data file.  GETATTR allows
       the metadata server to mainly retrieve the mtime (modify time), ctime
       (change time), and atime (access time). The metadata server can use
       this information to determine if the client modified the file whilst it
       held an iomode of LAYOUTIOMODE4_RW (see <xref target="RFC8881" section="3.3.20" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-3.3.20" derivedContent="RFC8881"/>). Then it can determine the
       following for the metadata file: time_modify, time_metadata, and
       time_access (see Sections <xref target="RFC8881" section="5.8.2.43" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.2.43" derivedContent="RFC8881"/>, <xref target="RFC8881" section="5.8.2.42" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.2.42" derivedContent="RFC8881"/>, and <xref target="RFC8881" section="5.8.2.37" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.2.37" derivedContent="RFC8881"/> of <xref target="RFC8881" format="default" sectionFormat="of" derivedContent="RFC8881"/>, respectively). That
       is, it can determine the information to return to clients in an NFSv4.2
       GETATTR response.
      </t>
      <t indent="0" pn="section-2-3">
       For example, the metadata server might issue an NFSv3 GETATTR operation
       to the data server, which is typically triggered by a client's NFSv4
       GETATTR request to the metadata server. In addition to the cost of each
       individual GETATTR operation, the data server can be overwhelmed by a
       large volume of such requests. NFSv3 addressed a similar challenge by
       including a post-operation attribute in the READ and WRITE operations
       to report WCC data (see <xref target="RFC1813" sectionFormat="of" section="2.6" format="default" derivedLink="https://rfc-editor.org/rfc/rfc1813#section-2.6" derivedContent="RFC1813"/>).
      </t>
      <t indent="0" pn="section-2-4">
       Each NFSv3 operation entails a single round trip between the
       client and server.  Consequently, issuing a WRITE followed by
       a GETATTR would require two round trips. In that situation, the
       retrieved attribute information is regarded as having strict server-client
       consistency. By contrast, NFSv4 enables a WRITE and GETATTR to
       be combined within a compound operation, which requires only
       one round trip. This combined approach is likewise considered to have
       strict server-client consistency. Essentially, NFSv4 READ and
       WRITE operations omit post-operation attributes, allowing the
       client to determine whether it requires that information.
      </t>
      <t indent="0" pn="section-2-5">
       Whilst NFSv4 got rid of the requirement for WCC information to
       be supplied by the WRITE or READ operations, the introduction
       of pNFS reintroduces the same problem. The metadata server
       has to communicate with the data server in order to get
       the data that could be provided by a WCC model.
      </t>
      <t indent="0" pn="section-2-6">
       With the flexible file layout type, the client can leverage
       the NFSv3 WCC to service the proxying of times (see <xref target="RFC9754" section="5" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9754#section-5" derivedContent="RFC9754"/>),
       but the granularity of this data is limited. With client-side
       mirroring (see <xref target="RFC8435" section="8" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8435#section-8" derivedContent="RFC8435"/>), the client has to aggregate the N mirrored
       files in order to send one piece of information instead of N
       pieces of information. Also, the client is limited to sending
       that information only when it returns the delegation.
      </t>
      <t indent="0" pn="section-2-7">
       This document introduces a new NFSv4.2 operation, LAYOUT_WCC,
       which enables the client to provide the metadata server with
       information obtained from the data server. The client is
       responsible for gathering the NFSv3 WCC data, returned by the
       three permissible NFSv3 operations, and conveying it back to
       the metadata server as part of NFSv4.2 attributes. The metadata
       server <bcp14>MAY</bcp14> therefore avoid issuing costly NFSv3
       GETATTR calls to the data servers. Because this approach relies
       on a weak model, the metadata server <bcp14>MAY</bcp14> still
       perform these calls if it chooses to strengthen the model.
      </t>
    </section>
    <section anchor="op_LAYOUT_WCC" numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-operation-77-layout_wcc-lay">Operation 77: LAYOUT_WCC - Layout Weak Cache Consistency</name>
      <section toc="include" anchor="ss_op_LAYOUT_WCC_A" numbered="true" removeInRFC="false" pn="section-3.1">
        <name slugifiedName="name-argument">ARGUMENT</name>
        <sourcecode name="" type="xdr" markers="true" pn="section-3.1-1">
/// struct LAYOUT_WCC4args {
///         stateid4        lowa_stateid;
///         layouttype4     lowa_type;
///         opaque          lowa_body&lt;&gt;;
/// };
</sourcecode>
        <t indent="0" pn="section-3.1-2">
     stateid4 is defined in <xref target="RFC8881" section="3.3.12" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-3.3.12" derivedContent="RFC8881"/>.  layouttype4 is defined in <xref target="RFC8881" section="3.3.13" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-3.3.13" derivedContent="RFC8881"/>.
        </t>
      </section>
      <section toc="include" anchor="ss_op_LAYOUT_WCC_R" numbered="true" removeInRFC="false" pn="section-3.2">
        <name slugifiedName="name-result">RESULT</name>
        <sourcecode name="" type="xdr" markers="true" pn="section-3.2-1">
/// struct LAYOUT_WCC4res {
///         nfsstat4                lowr_status;
/// };
</sourcecode>
        <t indent="0" pn="section-3.2-2">
     nfsstat4 is defined in <xref target="RFC8881" section="3.2" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-3.2" derivedContent="RFC8881"/>.
        </t>
      </section>
      <section toc="include" anchor="ss_op_LAYOUT_WCC_D" numbered="true" removeInRFC="false" pn="section-3.3">
        <name slugifiedName="name-description">DESCRIPTION</name>
        <t indent="0" pn="section-3.3-1">
       The current filehandle and the lowa_stateid identify the specific
       layout for the LAYOUT_WCC operation. The lowa_type indicates how
       to interpret the layout-type-specific payload contained in the
       lowa_body field. The lowa_type is the corresponding value
       from the "pNFS Layout Types" IANA registry for the layout
       type being used.
        </t>
        <t indent="0" pn="section-3.3-2">
       The lowa_body contains the data file attributes. The client is
       responsible for mapping NFSv3 post-operation attributes to the
       fattr4 representation. Similar to the behavior of post-operation
       attributes, the client may ignore these attributes, and the
       server may also choose to ignore any attributes included in
       LAYOUT_WCC. However, the server can use these attributes to avoid
       querying the data server for data file attributes. Because these
       attributes are optional and the client has no recourse if the
       server opts to disregard them, there is no requirement to return
       a bitmap4 indicating which attributes have been accepted in the
       LAYOUT_WCC result.
        </t>
      </section>
      <section anchor="ss_op_LAYOUT_WCC_impl" numbered="true" toc="include" removeInRFC="false" pn="section-3.4">
        <name slugifiedName="name-implementation">Implementation</name>
        <section anchor="ss_op_LAYOUT_WCC_examples" numbered="true" toc="include" removeInRFC="false" pn="section-3.4.1">
          <name slugifiedName="name-examples-of-when-to-use-lay">Examples of When to Use LAYOUT_WCC</name>
          <t indent="0" pn="section-3.4.1-1">
         The only way for the metadata server to detect modifications
         to the data file is to probe the data servers via a GETATTR. It
         can compare the mtime results across multiple calls to detect an
         NFSv3 WRITE operation by the client. Likewise, the atime results
         indicate the client having issued an NFSv3 READ operation. As such,
         the client can leverage the LAYOUT_WCC operation whenever it
         has the belief that the metadata server would need to refresh
         the attributes of the data files.  While the client can send a
         LAYOUT_WCC at any time, there are times it will want to do this
         operation in order to avoid having the metadata server issue
         NFSv3 GETATTR requests to the data servers:
          </t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-3.4.1-2">
            <li pn="section-3.4.1-2.1">
              <t indent="0" pn="section-3.4.1-2.1.1">Whenever it sends a GETATTR for any of the following attributes:</t>
              <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-3.4.1-2.1.2">
                <li pn="section-3.4.1-2.1.2.1">size (see <xref target="RFC8881" sectionFormat="of" section="5.8.1.5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.1.5" derivedContent="RFC8881"/>)</li>
                <li pn="section-3.4.1-2.1.2.2">space_used (see <xref target="RFC8881" sectionFormat="of" section="5.8.2.35" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.2.35" derivedContent="RFC8881"/>)</li>
                <li pn="section-3.4.1-2.1.2.3">change (see <xref target="RFC8881" sectionFormat="of" section="5.8.1.4" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.1.4" derivedContent="RFC8881"/>)</li>
                <li pn="section-3.4.1-2.1.2.4">time_access (see <xref target="RFC8881" sectionFormat="of" section="5.8.2.37" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.2.37" derivedContent="RFC8881"/>)</li>
                <li pn="section-3.4.1-2.1.2.5">time_metadata (see <xref target="RFC8881" sectionFormat="of" section="5.8.2.42" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.2.42" derivedContent="RFC8881"/>)</li>
                <li pn="section-3.4.1-2.1.2.6">time_modify (see
           <xref target="RFC8881" sectionFormat="of" section="5.8.2.43" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-5.8.2.43" derivedContent="RFC8881"/>)</li>
              </ul>
            </li>
            <li pn="section-3.4.1-2.2">
           Whenever it sends an NFS4ERR_ACCESS error via LAYOUTRETURN or LAYOUTERROR. It could
           have already gotten the NFSv3 uid and gid values back in the WCC of the WRITE,
           READ, or COMMIT operation that got the error. Thus, it could report that information
           back to the metadata server, saving it from querying that information via an NFSv3 GETATTR.
         </li>
            <li pn="section-3.4.1-2.3">
           Whenever it sends a SETATTR to refresh the proxied times (see <xref target="RFC9754" section="5" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9754#section-5" derivedContent="RFC9754"/>). The metadata server will
           correlate these times in order to detect later modification to
           the data file.
         </li>
          </ul>
        </section>
        <section anchor="ss_op_LAYOUT_WCC_payload" numbered="true" toc="include" removeInRFC="false" pn="section-3.4.2">
          <name slugifiedName="name-examples-of-what-to-send-in">Examples of What to Send in LAYOUT_WCC</name>
          <t indent="0" pn="section-3.4.2-1">
         The NFSv3 attributes returned in the WCC of WRITE, READ, and COMMIT operations are a smaller subset
         of what can be transmitted as an NFSv4 attribute. The mapping of NFSv3 to NFSv4 attributes
         is shown in <xref target="table_mappings" format="default" sectionFormat="of" derivedContent="Table 1"/>.
         The LAYOUT_WCC <bcp14>MUST</bcp14> provide all of these attributes to the metadata server.
         Both the uid and gid are stringified into their respective attributes of owner and owner_group.
         In the case of NFS4ERR_ACCESS, the reason to provide these two attributes is that the metadata
         server can compare what it expects the values of the uid and gid of the data file
         to be versus the actual values. It can then repair the permissions as needed or
         modify the expected values it has cached.
          </t>
          <table anchor="table_mappings" align="center" pn="table-1">
            <name slugifiedName="name-nfsv3-to-nfsv42-attribute-m">NFSv3 to NFSv4.2 Attribute Mappings</name>
            <thead>
              <tr>
                <th align="left" colspan="1" rowspan="1">NFSv3 Attribute</th>
                <th align="left" colspan="1" rowspan="1">NFSv4.2 Attribute</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" colspan="1" rowspan="1">size</td>
                <td align="left" colspan="1" rowspan="1">size</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">used</td>
                <td align="left" colspan="1" rowspan="1">space_used</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">mode</td>
                <td align="left" colspan="1" rowspan="1">mode</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">uid</td>
                <td align="left" colspan="1" rowspan="1">owner</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">gid</td>
                <td align="left" colspan="1" rowspan="1">owner_group</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">atime</td>
                <td align="left" colspan="1" rowspan="1">time_access</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">mtime</td>
                <td align="left" colspan="1" rowspan="1">time_modify</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">ctime</td>
                <td align="left" colspan="1" rowspan="1">time_metadata</td>
              </tr>
            </tbody>
          </table>
        </section>
      </section>
      <section anchor="ss_op_LAYOUT_WCC_errs" numbered="true" toc="include" removeInRFC="false" pn="section-3.5">
        <name slugifiedName="name-allowed-errors">Allowed Errors</name>
        <t indent="0" pn="section-3.5-1">
      The LAYOUT_WCC operation can raise the errors listed in <xref target="tbl_op_error_returns" format="default" sectionFormat="of" derivedContent="Table 2"/>.  When an error is
      encountered, the metadata server can decide to ignore the entire
      operation, or depending on the layout-type-specific payload, it could
      decide to apply a portion of the payload.  Note that there are no new
      errors introduced for the LAYOUT_WCC operation and the errors in <xref target="tbl_op_error_returns" format="default" sectionFormat="of" derivedContent="Table 2"/> are each defined in
      <xref target="RFC8881" section="15.1" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-15.1" derivedContent="RFC8881"/>. <xref target="tbl_op_error_returns" format="default" sectionFormat="of" derivedContent="Table 2"/> can be considered as an
      extension of <xref target="RFC8881" section="15.2" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-15.2" derivedContent="RFC8881"/>.
        </t>
        <table anchor="tbl_op_error_returns" align="center" pn="table-2">
          <name slugifiedName="name-operations-and-their-valid-">Operations and Their Valid Errors</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Operation</th>
              <th align="left" colspan="1" rowspan="1">Errors</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">
        LAYOUT_WCC
           </td>
              <td align="left" colspan="1" rowspan="1">
        NFS4ERR_ADMIN_REVOKED,
        NFS4ERR_BADXDR,
        NFS4ERR_BAD_STATEID,
        NFS4ERR_DEADSESSION,
        NFS4ERR_DELAY,
        NFS4ERR_DELEG_REVOKED,
        NFS4ERR_EXPIRED,
        NFS4ERR_FHEXPIRED,
        NFS4ERR_GRACE,
        NFS4ERR_INVAL,
        NFS4ERR_ISDIR,
        NFS4ERR_MOVED,
        NFS4ERR_NOFILEHANDLE,
        NFS4ERR_NOTSUPP,
        NFS4ERR_NO_GRACE,
        NFS4ERR_OLD_STATEID,
        NFS4ERR_OP_NOT_IN_SESSION,
        NFS4ERR_REP_TOO_BIG,
        NFS4ERR_REP_TOO_BIG_TO_CACHE,
        NFS4ERR_REQ_TOO_BIG,
        NFS4ERR_RETRY_UNCACHED_REP,
        NFS4ERR_SERVERFAULT,
        NFS4ERR_STALE,
        NFS4ERR_TOO_MANY_OPS,
        NFS4ERR_UNKNOWN_LAYOUTTYPE,
        NFS4ERR_WRONG_CRED,
        NFS4ERR_WRONG_TYPE
          </td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="ss_op_LAYOUT_WCC_opt" numbered="true" toc="include" removeInRFC="false" pn="section-3.6">
        <name slugifiedName="name-extension-of-existing-imple">Extension of Existing Implementations</name>
        <t indent="0" pn="section-3.6-1">
      The new LAYOUT_WCC operation is <bcp14>OPTIONAL</bcp14> for both
      NFSv4.2 <xref target="RFC7863" format="default" sectionFormat="of" derivedContent="RFC7863"/>
      and the flexible file layout type <xref target="RFC8435" format="default" sectionFormat="of" derivedContent="RFC8435"/>.
        </t>
      </section>
      <section anchor="ss_op_LAYOUT_WCC_ff" numbered="true" toc="include" removeInRFC="false" pn="section-3.7">
        <name slugifiedName="name-flexible-file-layout-type">Flexible File Layout Type</name>
        <sourcecode name="" type="xdr" markers="true" pn="section-3.7-1">
/// struct ff_data_server_wcc4 {
///             deviceid4            ffdsw_deviceid;
///             stateid4             ffdsw_stateid;
///             nfs_fh4              ffdsw_fh_vers&lt;&gt;;
///             fattr4               ffdsw_attributes;
/// };
///
/// struct ff_mirror_wcc4 {
///             ff_data_server_wcc4  ffmw_data_servers&lt;&gt;;
/// };
///
/// struct ff_layout_wcc4 {
///             ff_mirror_wcc4       fflw_mirrors&lt;&gt;;
/// };
</sourcecode>
        <t indent="0" pn="section-3.7-2">
      The results specific to the flexible file layout type <bcp14>MUST</bcp14>
      correspond to the ff_layout4 data structure as defined in <xref target="RFC8435" section="5.1" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8435#section-5.1" derivedContent="RFC8435"/>.  There
      <bcp14>MUST</bcp14> be a one-to-one correspondence between the following:
        </t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-3.7-3">
          <li pn="section-3.7-3.1">
        ff_data_server4 -&gt; ff_data_server_wcc4
      </li>
          <li pn="section-3.7-3.2">
        ff_mirror4 -&gt; ff_mirror_wcc4
      </li>
          <li pn="section-3.7-3.3">
        ff_layout4 -&gt; ff_layout_wcc4
      </li>
        </ul>
        <t indent="0" pn="section-3.7-4">
      Each ff_layout4 has an array of ff_mirror4, which has an array of ff_data_server4.
      Based on the current filehandle and the lowa_stateid, the server can match the
      reported attributes.
        </t>
        <t indent="0" pn="section-3.7-5">
      But the positional correspondence between the elements is not
      sufficient to determine the attributes to update. Consider the
      case where a layout has three mirrors and two of them have updated
      attributes but the third does not. A client could decide to present
      all three mirrors, with one mirror having an attribute mask with
      no attributes present. Or it could decide to present only the
      two mirrors that had been changed.
        </t>
        <t indent="0" pn="section-3.7-6">
      In either case, the combination of ffdsw_deviceid, ffdsw_stateid, and
      ffdsw_fh_vers will uniquely identify the attributes to be updated.
      All three arguments are required. A layout might have multiple data
      files on the same storage device, in which case the ffdsw_deviceid and
      ffdsw_stateid would match, but the ffdsw_fh_vers would not.
        </t>
        <t indent="0" pn="section-3.7-7">


      The ffdsw_attributes are processed similar to the obj_attributes in
      the SETATTR arguments (see <xref target="RFC8881" section="18.30" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8881#section-18.30" derivedContent="RFC8881"/>).
        </t>
      </section>
    </section>
    <section anchor="xdr_desc" numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-extraction-of-xdr">Extraction of XDR</name>
      <t indent="0" pn="section-4-1">
    This document contains the XDR
    <xref target="RFC4506" format="default" sectionFormat="of" derivedContent="RFC4506"/> description of the new NFSv4.2 operation LAYOUT_WCC.
    The XDR description is embedded in this
    document in a way that makes it simple for the reader to extract
    into a ready-to-compile form.  The reader can feed this document
    into the following shell script to produce the machine-readable
    XDR description of the new NFSv4.2 operation LAYOUT_WCC.
      </t>
      <sourcecode name="" type="shell" markers="true" pn="section-4-2">
#!/bin/sh
grep '^ *///' $* | sed 's?^ */// ??' | sed 's?^ *///$??'
</sourcecode>
      <t indent="0" pn="section-4-3">
    That is, if the above script is stored in a file called 'extract.sh', and
    this document is in a file called 'spec.txt', then the reader can do:
      </t>
      <sourcecode name="" type="shell" markers="true" pn="section-4-4">
sh extract.sh &lt; spec.txt &gt; layout_wcc.x
</sourcecode>
      <t indent="0" pn="section-4-5">
    The effect of the script is to remove leading blank space from each
    line, plus a sentinel sequence of '///'.  XDR descriptions with the
    sentinel sequence are embedded throughout the document.
      </t>
      <t indent="0" pn="section-4-6">
    Note that the XDR code contained in this document depends on types
    from the NFSv4.2 nfs4_prot.x file (generated from <xref target="RFC7863" format="default" sectionFormat="of" derivedContent="RFC7863"/>).
    This includes both nfs types that end with a 4 (such as offset4 and
    length4) as well as more generic types (such as uint32_t and
    uint64_t).
      </t>
      <t indent="0" pn="section-4-7">
    While the XDR can be appended to that from <xref target="RFC7863" format="default" sectionFormat="of" derivedContent="RFC7863"/>,
    the various code snippets belong in their respective areas of
    that XDR.
      </t>
    </section>
    <section anchor="sec_security" numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-5-1">
    There are no new security considerations beyond those in
    <xref target="RFC8435" format="default" sectionFormat="of" derivedContent="RFC8435"/>.
      </t>
    </section>
    <section anchor="sec_iana" numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t indent="0" pn="section-6-1">This document has no IANA actions.
      </t>
    </section>
  </middle>
  <back>
    <references pn="section-7">
      <name slugifiedName="name-references">References</name>
      <references pn="section-7.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC4506" target="https://www.rfc-editor.org/info/rfc4506" quoteTitle="true" derivedAnchor="RFC4506">
          <front>
            <title>XDR: External Data Representation Standard</title>
            <author fullname="M. Eisler" initials="M." role="editor" surname="Eisler"/>
            <date month="May" year="2006"/>
            <abstract>
              <t indent="0">This document describes the External Data Representation Standard (XDR) protocol as it is currently deployed and accepted. This document obsoletes RFC 1832. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="67"/>
          <seriesInfo name="RFC" value="4506"/>
          <seriesInfo name="DOI" value="10.17487/RFC4506"/>
        </reference>
        <reference anchor="RFC7862" target="https://www.rfc-editor.org/info/rfc7862" quoteTitle="true" derivedAnchor="RFC7862">
          <front>
            <title>Network File System (NFS) Version 4 Minor Version 2 Protocol</title>
            <author fullname="T. Haynes" initials="T." surname="Haynes"/>
            <date month="November" year="2016"/>
            <abstract>
              <t indent="0">This document describes NFS version 4 minor version 2; it describes the protocol extensions made from NFS version 4 minor version 1. Major extensions introduced in NFS version 4 minor version 2 include the following: Server-Side Copy, Application Input/Output (I/O) Advise, Space Reservations, Sparse Files, Application Data Blocks, and Labeled NFS.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7862"/>
          <seriesInfo name="DOI" value="10.17487/RFC7862"/>
        </reference>
        <reference anchor="RFC7863" target="https://www.rfc-editor.org/info/rfc7863" quoteTitle="true" derivedAnchor="RFC7863">
          <front>
            <title>Network File System (NFS) Version 4 Minor Version 2 External Data Representation Standard (XDR) Description</title>
            <author fullname="T. Haynes" initials="T." surname="Haynes"/>
            <date month="November" year="2016"/>
            <abstract>
              <t indent="0">This document provides the External Data Representation (XDR) description for NFS version 4 minor version 2.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7863"/>
          <seriesInfo name="DOI" value="10.17487/RFC7863"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8178" target="https://www.rfc-editor.org/info/rfc8178" quoteTitle="true" derivedAnchor="RFC8178">
          <front>
            <title>Rules for NFSv4 Extensions and Minor Versions</title>
            <author fullname="D. Noveck" initials="D." surname="Noveck"/>
            <date month="July" year="2017"/>
            <abstract>
              <t indent="0">This document describes the rules relating to the extension of the NFSv4 family of protocols. It covers the creation of minor versions, the addition of optional features to existing minor versions, and the correction of flaws in features already published as Proposed Standards. The rules relating to the construction of minor versions and the interaction of minor version implementations that appear in this document supersede the minor versioning rules in RFC 5661 and other RFCs defining minor versions.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8178"/>
          <seriesInfo name="DOI" value="10.17487/RFC8178"/>
        </reference>
        <reference anchor="RFC8434" target="https://www.rfc-editor.org/info/rfc8434" quoteTitle="true" derivedAnchor="RFC8434">
          <front>
            <title>Requirements for Parallel NFS (pNFS) Layout Types</title>
            <author fullname="T. Haynes" initials="T." surname="Haynes"/>
            <date month="August" year="2018"/>
            <abstract>
              <t indent="0">This document defines the requirements that individual Parallel NFS (pNFS) layout types need to meet in order to work within the pNFS framework as defined in RFC 5661. In so doing, this document aims to clearly distinguish between requirements for pNFS as a whole and those specifically directed to the pNFS file layout. The lack of a clear separation between the two sets of requirements has been troublesome for those specifying and evaluating new layout types. In this regard, this document updates RFC 5661.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8434"/>
          <seriesInfo name="DOI" value="10.17487/RFC8434"/>
        </reference>
        <reference anchor="RFC8435" target="https://www.rfc-editor.org/info/rfc8435" quoteTitle="true" derivedAnchor="RFC8435">
          <front>
            <title>Parallel NFS (pNFS) Flexible File Layout</title>
            <author fullname="B. Halevy" initials="B." surname="Halevy"/>
            <author fullname="T. Haynes" initials="T." surname="Haynes"/>
            <date month="August" year="2018"/>
            <abstract>
              <t indent="0">Parallel NFS (pNFS) allows a separation between the metadata (onto a metadata server) and data (onto a storage device) for a file. The flexible file layout type is defined in this document as an extension to pNFS that allows the use of storage devices that require only a limited degree of interaction with the metadata server and use already-existing protocols. Client-side mirroring is also added to provide replication of files.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8435"/>
          <seriesInfo name="DOI" value="10.17487/RFC8435"/>
        </reference>
        <reference anchor="RFC8881" target="https://www.rfc-editor.org/info/rfc8881" quoteTitle="true" derivedAnchor="RFC8881">
          <front>
            <title>Network File System (NFS) Version 4 Minor Version 1 Protocol</title>
            <author fullname="D. Noveck" initials="D." role="editor" surname="Noveck"/>
            <author fullname="C. Lever" initials="C." surname="Lever"/>
            <date month="August" year="2020"/>
            <abstract>
              <t indent="0">This document describes the Network File System (NFS) version 4 minor version 1, including features retained from the base protocol (NFS version 4 minor version 0, which is specified in RFC 7530) and protocol extensions made subsequently. The later minor version has no dependencies on NFS version 4 minor version 0, and is considered a separate protocol.</t>
              <t indent="0">This document obsoletes RFC 5661. It substantially revises the treatment of features relating to multi-server namespace, superseding the description of those features appearing in RFC 5661.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8881"/>
          <seriesInfo name="DOI" value="10.17487/RFC8881"/>
        </reference>
        <reference anchor="RFC9754" target="https://www.rfc-editor.org/info/rfc9754" quoteTitle="true" derivedAnchor="RFC9754">
          <front>
            <title>Extensions for Opening and Delegating Files in NFSv4.2</title>
            <author fullname="T. Haynes" initials="T." surname="Haynes"/>
            <author fullname="T. Myklebust" initials="T." surname="Myklebust"/>
            <date month="March" year="2025"/>
            <abstract>
              <t indent="0">The Network File System v4 (NFSv4) allows a client to both open a file and be granted a delegation of that file. This delegation provides the client the right to authoritatively cache metadata on the file locally. This document presents several extensions for both opening the file and delegating it to the client. This document extends NFSv4.2 (see RFC 7863).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9754"/>
          <seriesInfo name="DOI" value="10.17487/RFC9754"/>
        </reference>
      </references>
      <references pn="section-7.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="RFC1813" target="https://www.rfc-editor.org/info/rfc1813" quoteTitle="true" derivedAnchor="RFC1813">
          <front>
            <title>NFS Version 3 Protocol Specification</title>
            <author fullname="B. Callaghan" initials="B." surname="Callaghan"/>
            <author fullname="B. Pawlowski" initials="B." surname="Pawlowski"/>
            <author fullname="P. Staubach" initials="P." surname="Staubach"/>
            <date month="June" year="1995"/>
            <abstract>
              <t indent="0">This paper describes the NFS version 3 protocol. This paper is provided so that people can write compatible implementations. This memo provides information for the Internet community. This memo does not specify an Internet standard of any kind.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="1813"/>
          <seriesInfo name="DOI" value="10.17487/RFC1813"/>
        </reference>
      </references>
    </references>
    <section numbered="false" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgments">Acknowledgments</name>
      <t indent="0" pn="section-appendix.a-1"><contact fullname="Dave Noveck"/>, <contact fullname="Tigran       Mkrtchyan"/>, and <contact fullname="Rick Macklem"/> provided reviews of
      the document.</t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author fullname="Thomas Haynes" initials="T." surname="Haynes">
        <organization abbrev="Hammerspace" showOnFrontPage="true">Hammerspace</organization>
        <address>
          <email>loghyr@gmail.com</email>
        </address>
      </author>
      <author fullname="Trond Myklebust" initials="T." surname="Myklebust">
        <organization abbrev="Hammerspace" showOnFrontPage="true">Hammerspace</organization>
        <address>
          <email>trondmy@hammerspace.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
