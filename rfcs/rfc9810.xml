<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" ipr="trust200902" docName="draft-ietf-lamps-rfc4210bis-18" number="9810" category="std" consensus="true" submissionType="IETF" xml:lang="en" obsoletes="4210, 9480" updates="5912" tocDepth="4" tocInclude="true" sortRefs="true" symRefs="true" prepTime="2025-07-29T09:53:37" indexInclude="true" scripts="Common,Latin">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-lamps-rfc4210bis-18" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9810" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="CMP">Internet X.509 Public Key Infrastructure -- Certificate Management Protocol (CMP)</title>
    <seriesInfo name="RFC" value="9810" stream="IETF"/>
    <author initials="H." surname="Brockhaus" fullname="Hendrik Brockhaus">
      <organization abbrev="Siemens" showOnFrontPage="true">Siemens</organization>
      <address>
        <postal>
          <street>Werner-von-Siemens-Strasse 1</street>
          <city>Munich</city>
          <code>80333</code>
          <country>Germany</country>
        </postal>
        <email>hendrik.brockhaus@siemens.com</email>
        <uri>https://www.siemens.com</uri>
      </address>
    </author>
    <author initials="D." surname="von Oheimb" fullname="David von Oheimb">
      <organization abbrev="Siemens" showOnFrontPage="true">Siemens</organization>
      <address>
        <postal>
          <street>Werner-von-Siemens-Strasse 1</street>
          <city>Munich</city>
          <code>80333</code>
          <country>Germany</country>
        </postal>
        <email>david.von.oheimb@siemens.com</email>
        <uri>https://www.siemens.com</uri>
      </address>
    </author>
    <author initials="M." surname="Ounsworth" fullname="Mike Ounsworth">
      <organization abbrev="Entrust" showOnFrontPage="true">Entrust</organization>
      <address>
        <postal>
          <street>1187 Park Place</street>
          <city>Minneapolis</city>
          <region>MN</region>
          <code>55379</code>
          <country>United States of America</country>
        </postal>
        <email>mike.ounsworth@entrust.com</email>
        <uri>https://www.entrust.com</uri>
      </address>
    </author>
    <author initials="J." surname="Gray" fullname="John Gray">
      <organization abbrev="Entrust" showOnFrontPage="true">Entrust</organization>
      <address>
        <postal>
          <street>1187 Park Place</street>
          <city>Minneapolis</city>
          <region>MN</region>
          <code>55379</code>
          <country>United States of America</country>
        </postal>
        <email>john.gray@entrust.com</email>
        <uri>https://www.entrust.com</uri>
      </address>
    </author>
    <date month="07" year="2025"/>
    <area>SEC</area>
    <workgroup>lamps</workgroup>
    <keyword>CMP</keyword>
    <keyword>Certificate Management</keyword>
    <keyword>PKI</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">This document describes the Internet X.509 Public Key Infrastructure (PKI)
Certificate Management Protocol (CMP).  Protocol messages are defined for
X.509v3 certificate creation and management. CMP provides interactions between
client systems and PKI components such as a Registration Authority (RA) and
a Certification Authority (CA).</t>
      <t indent="0" pn="section-abstract-2">This document adds support for management of certificates containing a Key Encapsulation Mechanism (KEM) public key and uses
EnvelopedData instead of EncryptedValue. This document also includes the
updates specified in Section 2 and Appendix A.2 of RFC 9480.</t>
      <t indent="0" pn="section-abstract-3">This document obsoletes RFC 4210, and together with RFC 9811, it also obsoletes RFC 9480. Appendix F of this document updates
Section 9 of RFC 5912.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9810" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2025 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-changes-made-by-rfc-4210">Changes Made by RFC 4210</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-updates-made-by-rfc-9480">Updates Made by RFC 9480</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.3">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.3.1"><xref derivedContent="1.3" format="counter" sectionFormat="of" target="section-1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-changes-made-by-this-docume">Changes Made by This Document</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology-and-abbreviatio">Terminology and Abbreviations</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-management-overview">PKI Management Overview</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t indent="0" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-management-model">PKI Management Model</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.1.2">
                  <li pn="section-toc.1-1.3.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.3.2.1.2.1.1"><xref derivedContent="3.1.1" format="counter" sectionFormat="of" target="section-3.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-definitions-of-pki-entities">Definitions of PKI Entities</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.1.2.1.2">
                      <li pn="section-toc.1-1.3.2.1.2.1.2.1">
                        <t indent="0" pn="section-toc.1-1.3.2.1.2.1.2.1.1"><xref derivedContent="3.1.1.1" format="counter" sectionFormat="of" target="section-3.1.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-subjects-and-end-entities">Subjects and End Entities</xref></t>
                      </li>
                      <li pn="section-toc.1-1.3.2.1.2.1.2.2">
                        <t indent="0" pn="section-toc.1-1.3.2.1.2.1.2.2.1"><xref derivedContent="3.1.1.2" format="counter" sectionFormat="of" target="section-3.1.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certification-authority">Certification Authority</xref></t>
                      </li>
                      <li pn="section-toc.1-1.3.2.1.2.1.2.3">
                        <t indent="0" pn="section-toc.1-1.3.2.1.2.1.2.3.1"><xref derivedContent="3.1.1.3" format="counter" sectionFormat="of" target="section-3.1.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registration-authority">Registration Authority</xref></t>
                      </li>
                      <li pn="section-toc.1-1.3.2.1.2.1.2.4">
                        <t indent="0" pn="section-toc.1-1.3.2.1.2.1.2.4.1"><xref derivedContent="3.1.1.4" format="counter" sectionFormat="of" target="section-3.1.1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-generation-authority">Key Generation Authority</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.3.2.1.2.2">
                    <t indent="0" pn="section-toc.1-1.3.2.1.2.2.1"><xref derivedContent="3.1.2" format="counter" sectionFormat="of" target="section-3.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-management-requirements">PKI Management Requirements</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.1.2.3">
                    <t indent="0" pn="section-toc.1-1.3.2.1.2.3.1"><xref derivedContent="3.1.3" format="counter" sectionFormat="of" target="section-3.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-management-operations">PKI Management Operations</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-assumptions-and-restriction">Assumptions and Restrictions</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t indent="0" pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-end-entity-initialization">End Entity Initialization</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.2">
                <t indent="0" pn="section-toc.1-1.4.2.2.1"><xref derivedContent="4.2" format="counter" sectionFormat="of" target="section-4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-initial-registration-certif">Initial Registration/Certification</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.2.2">
                  <li pn="section-toc.1-1.4.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.4.2.2.2.1.1"><xref derivedContent="4.2.1" format="counter" sectionFormat="of" target="section-4.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-criteria-used">Criteria Used</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.2.2.1.2">
                      <li pn="section-toc.1-1.4.2.2.2.1.2.1">
                        <t indent="0" pn="section-toc.1-1.4.2.2.2.1.2.1.1"><xref derivedContent="4.2.1.1" format="counter" sectionFormat="of" target="section-4.2.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-initiation-of-registration-">Initiation of Registration/Certification</xref></t>
                      </li>
                      <li pn="section-toc.1-1.4.2.2.2.1.2.2">
                        <t indent="0" pn="section-toc.1-1.4.2.2.2.1.2.2.1"><xref derivedContent="4.2.1.2" format="counter" sectionFormat="of" target="section-4.2.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-end-entity-message-origin-a">End Entity Message Origin Authentication</xref></t>
                      </li>
                      <li pn="section-toc.1-1.4.2.2.2.1.2.3">
                        <t indent="0" pn="section-toc.1-1.4.2.2.2.1.2.3.1"><xref derivedContent="4.2.1.3" format="counter" sectionFormat="of" target="section-4.2.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-location-of-key-generation">Location of Key Generation</xref></t>
                      </li>
                      <li pn="section-toc.1-1.4.2.2.2.1.2.4">
                        <t indent="0" pn="section-toc.1-1.4.2.2.2.1.2.4.1"><xref derivedContent="4.2.1.4" format="counter" sectionFormat="of" target="section-4.2.1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-confirmation-of-successful-">Confirmation of Successful Certification</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.4.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.4.2.2.2.2.1"><xref derivedContent="4.2.2" format="counter" sectionFormat="of" target="section-4.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-initial-registration-certifi">Initial Registration/Certification Schemes</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.2.2.2.2">
                      <li pn="section-toc.1-1.4.2.2.2.2.2.1">
                        <t indent="0" pn="section-toc.1-1.4.2.2.2.2.2.1.1"><xref derivedContent="4.2.2.1" format="counter" sectionFormat="of" target="section-4.2.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-centralized-scheme">Centralized Scheme</xref></t>
                      </li>
                      <li pn="section-toc.1-1.4.2.2.2.2.2.2">
                        <t indent="0" pn="section-toc.1-1.4.2.2.2.2.2.2.1"><xref derivedContent="4.2.2.2" format="counter" sectionFormat="of" target="section-4.2.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-basic-authenticated-scheme">Basic Authenticated Scheme</xref></t>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.4.2.3">
                <t indent="0" pn="section-toc.1-1.4.2.3.1"><xref derivedContent="4.3" format="counter" sectionFormat="of" target="section-4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pop-of-private-key">POP of Private Key</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.3.2">
                  <li pn="section-toc.1-1.4.2.3.2.1">
                    <t indent="0" pn="section-toc.1-1.4.2.3.2.1.1"><xref derivedContent="4.3.1" format="counter" sectionFormat="of" target="section-4.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signature-keys">Signature Keys</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.3.2.2">
                    <t indent="0" pn="section-toc.1-1.4.2.3.2.2.1"><xref derivedContent="4.3.2" format="counter" sectionFormat="of" target="section-4.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-encryption-keys">Encryption Keys</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.3.2.3">
                    <t indent="0" pn="section-toc.1-1.4.2.3.2.3.1"><xref derivedContent="4.3.3" format="counter" sectionFormat="of" target="section-4.3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-agreement-keys">Key Agreement Keys</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.3.2.4">
                    <t indent="0" pn="section-toc.1-1.4.2.3.2.4.1"><xref derivedContent="4.3.4" format="counter" sectionFormat="of" target="section-4.3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-kem-keys">KEM Keys</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.4.2.4">
                <t indent="0" pn="section-toc.1-1.4.2.4.1"><xref derivedContent="4.4" format="counter" sectionFormat="of" target="section-4.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-root-ca-key-update">Root CA Key Update</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.4.2">
                  <li pn="section-toc.1-1.4.2.4.2.1">
                    <t indent="0" pn="section-toc.1-1.4.2.4.2.1.1"><xref derivedContent="4.4.1" format="counter" sectionFormat="of" target="section-4.4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ca-operator-actions">CA Operator Actions</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.4.2.2">
                    <t indent="0" pn="section-toc.1-1.4.2.4.2.2.1"><xref derivedContent="4.4.2" format="counter" sectionFormat="of" target="section-4.4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-verifying-certificates">Verifying Certificates</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.4.2.2.2">
                      <li pn="section-toc.1-1.4.2.4.2.2.2.1">
                        <t indent="0" pn="section-toc.1-1.4.2.4.2.2.2.1.1"><xref derivedContent="4.4.2.1" format="counter" sectionFormat="of" target="section-4.4.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-verification-in-cases-1-and">Verification in Cases 1 and 4</xref></t>
                      </li>
                      <li pn="section-toc.1-1.4.2.4.2.2.2.2">
                        <t indent="0" pn="section-toc.1-1.4.2.4.2.2.2.2.1"><xref derivedContent="4.4.2.2" format="counter" sectionFormat="of" target="section-4.4.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-verification-in-case-2">Verification in Case 2</xref></t>
                      </li>
                      <li pn="section-toc.1-1.4.2.4.2.2.2.3">
                        <t indent="0" pn="section-toc.1-1.4.2.4.2.2.2.3.1"><xref derivedContent="4.4.2.3" format="counter" sectionFormat="of" target="section-4.4.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-verification-in-case-3">Verification in Case 3</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.4.2.4.2.3">
                    <t indent="0" pn="section-toc.1-1.4.2.4.2.3.1"><xref derivedContent="4.4.3" format="counter" sectionFormat="of" target="section-4.4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-revocation-change-of-the-ca">Revocation - Change of the CA Key</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.4.2.5">
                <t indent="0" pn="section-toc.1-1.4.2.5.1"><xref derivedContent="4.5" format="counter" sectionFormat="of" target="section-4.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-eku-for-pki-entities">EKU for PKI Entities</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-data-structures">Data Structures</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t indent="0" pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overall-pki-message">Overall PKI Message</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2.1.2">
                  <li pn="section-toc.1-1.5.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.5.2.1.2.1.1"><xref derivedContent="5.1.1" format="counter" sectionFormat="of" target="section-5.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-message-header">PKI Message Header</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2.1.2.1.2">
                      <li pn="section-toc.1-1.5.2.1.2.1.2.1">
                        <t indent="0" pn="section-toc.1-1.5.2.1.2.1.2.1.1"><xref derivedContent="5.1.1.1" format="counter" sectionFormat="of" target="section-5.1.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-implicitconfirm">ImplicitConfirm</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.1.2.1.2.2">
                        <t indent="0" pn="section-toc.1-1.5.2.1.2.1.2.2.1"><xref derivedContent="5.1.1.2" format="counter" sectionFormat="of" target="section-5.1.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-confirmwaittime">ConfirmWaitTime</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.1.2.1.2.3">
                        <t indent="0" pn="section-toc.1-1.5.2.1.2.1.2.3.1"><xref derivedContent="5.1.1.3" format="counter" sectionFormat="of" target="section-5.1.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-origpkimessage">OrigPKIMessage</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.1.2.1.2.4">
                        <t indent="0" pn="section-toc.1-1.5.2.1.2.1.2.4.1"><xref derivedContent="5.1.1.4" format="counter" sectionFormat="of" target="section-5.1.1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certprofile">CertProfile</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.1.2.1.2.5">
                        <t indent="0" pn="section-toc.1-1.5.2.1.2.1.2.5.1"><xref derivedContent="5.1.1.5" format="counter" sectionFormat="of" target="section-5.1.1.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-kemciphertextinfo">KemCiphertextInfo</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.5.2.1.2.2">
                    <t indent="0" pn="section-toc.1-1.5.2.1.2.2.1"><xref derivedContent="5.1.2" format="counter" sectionFormat="of" target="section-5.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-message-body">PKI Message Body</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.1.2.3">
                    <t indent="0" pn="section-toc.1-1.5.2.1.2.3.1"><xref derivedContent="5.1.3" format="counter" sectionFormat="of" target="section-5.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-message-protection">PKI Message Protection</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2.1.2.3.2">
                      <li pn="section-toc.1-1.5.2.1.2.3.2.1">
                        <t indent="0" pn="section-toc.1-1.5.2.1.2.3.2.1.1"><xref derivedContent="5.1.3.1" format="counter" sectionFormat="of" target="section-5.1.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-shared-secret-information">Shared Secret Information</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.1.2.3.2.2">
                        <t indent="0" pn="section-toc.1-1.5.2.1.2.3.2.2.1"><xref derivedContent="5.1.3.2" format="counter" sectionFormat="of" target="section-5.1.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dh-key-pairs">DH Key Pairs</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.1.2.3.2.3">
                        <t indent="0" pn="section-toc.1-1.5.2.1.2.3.2.3.1"><xref derivedContent="5.1.3.3" format="counter" sectionFormat="of" target="section-5.1.3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signature">Signature</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.1.2.3.2.4">
                        <t indent="0" pn="section-toc.1-1.5.2.1.2.3.2.4.1"><xref derivedContent="5.1.3.4" format="counter" sectionFormat="of" target="section-5.1.3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-encapsulation">Key Encapsulation</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.1.2.3.2.5">
                        <t indent="0" pn="section-toc.1-1.5.2.1.2.3.2.5.1"><xref derivedContent="5.1.3.5" format="counter" sectionFormat="of" target="section-5.1.3.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-multiple-protection">Multiple Protection</xref></t>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t indent="0" pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-common-data-structures">Common Data Structures</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2.2.2">
                  <li pn="section-toc.1-1.5.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.1.1"><xref derivedContent="5.2.1" format="counter" sectionFormat="of" target="section-5.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-requested-certificate-conte">Requested Certificate Contents</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.2.1"><xref derivedContent="5.2.2" format="counter" sectionFormat="of" target="section-5.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-encrypted-values">Encrypted Values</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.3">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.3.1"><xref derivedContent="5.2.3" format="counter" sectionFormat="of" target="section-5.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-status-codes-and-failure-in">Status Codes and Failure Information for PKI Messages</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.4">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.4.1"><xref derivedContent="5.2.4" format="counter" sectionFormat="of" target="section-5.2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certificate-identification">Certificate Identification</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.5">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.5.1"><xref derivedContent="5.2.5" format="counter" sectionFormat="of" target="section-5.2.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-out-of-band-root-ca-public-">Out-of-Band Root CA Public Key</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.6">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.6.1"><xref derivedContent="5.2.6" format="counter" sectionFormat="of" target="section-5.2.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-archive-options">Archive Options</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.7">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.7.1"><xref derivedContent="5.2.7" format="counter" sectionFormat="of" target="section-5.2.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-publication-information">Publication Information</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.8">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.8.1"><xref derivedContent="5.2.8" format="counter" sectionFormat="of" target="section-5.2.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pop-structures">POP Structures</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2.2.2.8.2">
                      <li pn="section-toc.1-1.5.2.2.2.8.2.1">
                        <t indent="0" pn="section-toc.1-1.5.2.2.2.8.2.1.1"><xref derivedContent="5.2.8.1" format="counter" sectionFormat="of" target="section-5.2.8.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-raverified">raVerified</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.2.2.8.2.2">
                        <t indent="0" pn="section-toc.1-1.5.2.2.2.8.2.2.1"><xref derivedContent="5.2.8.2" format="counter" sectionFormat="of" target="section-5.2.8.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-poposigningkey-structure">POPOSigningKey Structure</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.2.2.8.2.3">
                        <t indent="0" pn="section-toc.1-1.5.2.2.2.8.2.3.1"><xref derivedContent="5.2.8.3" format="counter" sectionFormat="of" target="section-5.2.8.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-popoprivkey-structure">POPOPrivKey Structure</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.2.2.8.2.4">
                        <t indent="0" pn="section-toc.1-1.5.2.2.2.8.2.4.1"><xref derivedContent="5.2.8.4" format="counter" sectionFormat="of" target="section-5.2.8.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-summary-of-pop-options">Summary of POP Options</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.9">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.9.1"><xref derivedContent="5.2.9" format="counter" sectionFormat="of" target="section-5.2.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-generalizedtime">GeneralizedTime</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.5.2.3">
                <t indent="0" pn="section-toc.1-1.5.2.3.1"><xref derivedContent="5.3" format="counter" sectionFormat="of" target="section-5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-operation-specific-data-str">Operation-Specific Data Structures</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2.3.2">
                  <li pn="section-toc.1-1.5.2.3.2.1">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.1.1"><xref derivedContent="5.3.1" format="counter" sectionFormat="of" target="section-5.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-initialization-request">Initialization Request</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.2">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.2.1"><xref derivedContent="5.3.2" format="counter" sectionFormat="of" target="section-5.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-initialization-response">Initialization Response</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.3">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.3.1"><xref derivedContent="5.3.3" format="counter" sectionFormat="of" target="section-5.3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certification-request">Certification Request</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.4">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.4.1"><xref derivedContent="5.3.4" format="counter" sectionFormat="of" target="section-5.3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certification-response">Certification Response</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.5">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.5.1"><xref derivedContent="5.3.5" format="counter" sectionFormat="of" target="section-5.3.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-update-request-content">Key Update Request Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.6">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.6.1"><xref derivedContent="5.3.6" format="counter" sectionFormat="of" target="section-5.3.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-update-response-content">Key Update Response Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.7">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.7.1"><xref derivedContent="5.3.7" format="counter" sectionFormat="of" target="section-5.3.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-recovery-request-conten">Key Recovery Request Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.8">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.8.1"><xref derivedContent="5.3.8" format="counter" sectionFormat="of" target="section-5.3.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-recovery-response-conte">Key Recovery Response Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.9">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.9.1"><xref derivedContent="5.3.9" format="counter" sectionFormat="of" target="section-5.3.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-revocation-request-content">Revocation Request Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.10">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.10.1"><xref derivedContent="5.3.10" format="counter" sectionFormat="of" target="section-5.3.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-revocation-response-content">Revocation Response Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.11">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.11.1"><xref derivedContent="5.3.11" format="counter" sectionFormat="of" target="section-5.3.11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-cross-certification-request">Cross-Certification Request Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.12">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.12.1"><xref derivedContent="5.3.12" format="counter" sectionFormat="of" target="section-5.3.12"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-cross-certification-respons">Cross-Certification Response Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.13">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.13.1"><xref derivedContent="5.3.13" format="counter" sectionFormat="of" target="section-5.3.13"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-ca-key-update-announcement-">CA Key Update Announcement Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.14">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.14.1"><xref derivedContent="5.3.14" format="counter" sectionFormat="of" target="section-5.3.14"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-certificate-announcement">Certificate Announcement</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.15">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.15.1"><xref derivedContent="5.3.15" format="counter" sectionFormat="of" target="section-5.3.15"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-revocation-announcement">Revocation Announcement</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.16">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.16.1"><xref derivedContent="5.3.16" format="counter" sectionFormat="of" target="section-5.3.16"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-crl-announcement">CRL Announcement</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.17">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.17.1"><xref derivedContent="5.3.17" format="counter" sectionFormat="of" target="section-5.3.17"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-confirmation-content">PKI Confirmation Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.18">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.18.1"><xref derivedContent="5.3.18" format="counter" sectionFormat="of" target="section-5.3.18"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-certificate-confirmation-co">Certificate Confirmation Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.19">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.19.1"><xref derivedContent="5.3.19" format="counter" sectionFormat="of" target="section-5.3.19"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-general-message-content">PKI General Message Content</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2.3.2.19.2">
                      <li pn="section-toc.1-1.5.2.3.2.19.2.1">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.1.1"><xref derivedContent="5.3.19.1" format="counter" sectionFormat="of" target="section-5.3.19.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ca-protocol-encryption-cert">CA Protocol Encryption Certificate</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.2">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.2.1"><xref derivedContent="5.3.19.2" format="counter" sectionFormat="of" target="section-5.3.19.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signing-key-pair-types">Signing Key Pair Types</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.3">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.3.1"><xref derivedContent="5.3.19.3" format="counter" sectionFormat="of" target="section-5.3.19.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-encryption-key-agreement-ke">Encryption / Key Agreement Key Pair Types</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.4">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.4.1"><xref derivedContent="5.3.19.4" format="counter" sectionFormat="of" target="section-5.3.19.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-preferred-symmetric-algorit">Preferred Symmetric Algorithm</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.5">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.5.1"><xref derivedContent="5.3.19.5" format="counter" sectionFormat="of" target="section-5.3.19.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-updated-ca-key-pair">Updated CA Key Pair</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.6">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.6.1"><xref derivedContent="5.3.19.6" format="counter" sectionFormat="of" target="section-5.3.19.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-crl">CRL</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.7">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.7.1"><xref derivedContent="5.3.19.7" format="counter" sectionFormat="of" target="section-5.3.19.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-unsupported-object-identifi">Unsupported Object Identifiers</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.8">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.8.1"><xref derivedContent="5.3.19.8" format="counter" sectionFormat="of" target="section-5.3.19.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-pair-parameters">Key Pair Parameters</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.9">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.9.1"><xref derivedContent="5.3.19.9" format="counter" sectionFormat="of" target="section-5.3.19.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-revocation-passphrase">Revocation Passphrase</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.10">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.10.1"><xref derivedContent="5.3.19.10" format="counter" sectionFormat="of" target="section-5.3.19.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-implicitconfirm-2">ImplicitConfirm</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.11">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.11.1"><xref derivedContent="5.3.19.11" format="counter" sectionFormat="of" target="section-5.3.19.11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-confirmwaittime-2">ConfirmWaitTime</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.12">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.12.1"><xref derivedContent="5.3.19.12" format="counter" sectionFormat="of" target="section-5.3.19.12"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-original-pkimessage">Original PKIMessage</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.13">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.13.1"><xref derivedContent="5.3.19.13" format="counter" sectionFormat="of" target="section-5.3.19.13"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-supported-language-tags">Supported Language Tags</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.14">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.14.1"><xref derivedContent="5.3.19.14" format="counter" sectionFormat="of" target="section-5.3.19.14"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-ca-certificates">CA Certificates</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.15">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.15.1"><xref derivedContent="5.3.19.15" format="counter" sectionFormat="of" target="section-5.3.19.15"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-root-ca-update">Root CA Update</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.16">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.16.1"><xref derivedContent="5.3.19.16" format="counter" sectionFormat="of" target="section-5.3.19.16"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-certificate-request-templat">Certificate Request Template</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.17">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.17.1"><xref derivedContent="5.3.19.17" format="counter" sectionFormat="of" target="section-5.3.19.17"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-crl-update-retrieval">CRL Update Retrieval</xref></t>
                      </li>
                      <li pn="section-toc.1-1.5.2.3.2.19.2.18">
                        <t indent="0" pn="section-toc.1-1.5.2.3.2.19.2.18.1"><xref derivedContent="5.3.19.18" format="counter" sectionFormat="of" target="section-5.3.19.18"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-kem-ciphertext">KEM Ciphertext</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.20">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.20.1"><xref derivedContent="5.3.20" format="counter" sectionFormat="of" target="section-5.3.20"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-general-response-conten">PKI General Response Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.21">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.21.1"><xref derivedContent="5.3.21" format="counter" sectionFormat="of" target="section-5.3.21"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-error-message-content">Error Message Content</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.3.2.22">
                    <t indent="0" pn="section-toc.1-1.5.2.3.2.22.1"><xref derivedContent="5.3.22" format="counter" sectionFormat="of" target="section-5.3.22"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-polling-request-and-respons">Polling Request and Response</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-mandatory-pki-management-fu">Mandatory PKI Management Functions</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-root-ca-initialization">Root CA Initialization</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-root-ca-key-update-2">Root CA Key Update</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.3">
                <t indent="0" pn="section-toc.1-1.6.2.3.1"><xref derivedContent="6.3" format="counter" sectionFormat="of" target="section-6.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-subordinate-ca-initializati">Subordinate CA Initialization</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.4">
                <t indent="0" pn="section-toc.1-1.6.2.4.1"><xref derivedContent="6.4" format="counter" sectionFormat="of" target="section-6.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-crl-production">CRL Production</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.5">
                <t indent="0" pn="section-toc.1-1.6.2.5.1"><xref derivedContent="6.5" format="counter" sectionFormat="of" target="section-6.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-information-request">PKI Information Request</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.6">
                <t indent="0" pn="section-toc.1-1.6.2.6.1"><xref derivedContent="6.6" format="counter" sectionFormat="of" target="section-6.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cross-certification">Cross-Certification</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.6.2">
                  <li pn="section-toc.1-1.6.2.6.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.6.2.1.1"><xref derivedContent="6.6.1" format="counter" sectionFormat="of" target="section-6.6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-one-way-request-response-sc">One-Way Request-Response Scheme</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.7">
                <t indent="0" pn="section-toc.1-1.6.2.7.1"><xref derivedContent="6.7" format="counter" sectionFormat="of" target="section-6.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-end-entity-initialization-2">End Entity Initialization</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.7.2">
                  <li pn="section-toc.1-1.6.2.7.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.7.2.1.1"><xref derivedContent="6.7.1" format="counter" sectionFormat="of" target="section-6.7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acquisition-of-pki-informat">Acquisition of PKI Information</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.7.2.2">
                    <t indent="0" pn="section-toc.1-1.6.2.7.2.2.1"><xref derivedContent="6.7.2" format="counter" sectionFormat="of" target="section-6.7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-out-of-band-verification-of">Out-of-Band Verification of the Root CA Key</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.8">
                <t indent="0" pn="section-toc.1-1.6.2.8.1"><xref derivedContent="6.8" format="counter" sectionFormat="of" target="section-6.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certificate-request">Certificate Request</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.9">
                <t indent="0" pn="section-toc.1-1.6.2.9.1"><xref derivedContent="6.9" format="counter" sectionFormat="of" target="section-6.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-update">Key Update</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-version-negotiation">Version Negotiation</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t indent="0" pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-supporting-rfc-2510-impleme">Supporting RFC 2510 Implementations</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2.1.2">
                  <li pn="section-toc.1-1.7.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.7.2.1.2.1.1"><xref derivedContent="7.1.1" format="counter" sectionFormat="of" target="section-7.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-clients-talking-to-rfc-2510">Clients Talking to RFC 2510 Servers</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.1.2.2">
                    <t indent="0" pn="section-toc.1-1.7.2.1.2.2.1"><xref derivedContent="7.1.2" format="counter" sectionFormat="of" target="section-7.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-servers-receiving-version-c">Servers Receiving Version cmp1999 PKIMessages</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.8.2">
              <li pn="section-toc.1-1.8.2.1">
                <t indent="0" pn="section-toc.1-1.8.2.1.1"><xref derivedContent="8.1" format="counter" sectionFormat="of" target="section-8.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-on-the-necessity-of-pop">On the Necessity of POP</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.2">
                <t indent="0" pn="section-toc.1-1.8.2.2.1"><xref derivedContent="8.2" format="counter" sectionFormat="of" target="section-8.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pop-with-a-decryption-key">POP with a Decryption Key</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.3">
                <t indent="0" pn="section-toc.1-1.8.2.3.1"><xref derivedContent="8.3" format="counter" sectionFormat="of" target="section-8.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pop-by-exposing-the-private">POP by Exposing the Private Key</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.4">
                <t indent="0" pn="section-toc.1-1.8.2.4.1"><xref derivedContent="8.4" format="counter" sectionFormat="of" target="section-8.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-attack-against-dh-key-excha">Attack Against DH Key Exchange</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.5">
                <t indent="0" pn="section-toc.1-1.8.2.5.1"><xref derivedContent="8.5" format="counter" sectionFormat="of" target="section-8.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-perfect-forward-secrecy">Perfect Forward Secrecy</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.6">
                <t indent="0" pn="section-toc.1-1.8.2.6.1"><xref derivedContent="8.6" format="counter" sectionFormat="of" target="section-8.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-private-keys-for-certificat">Private Keys for Certificate Signing and CMP Message Protection</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.7">
                <t indent="0" pn="section-toc.1-1.8.2.7.1"><xref derivedContent="8.7" format="counter" sectionFormat="of" target="section-8.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-entropy-of-random-numbers-k">Entropy of Random Numbers, Key Pairs, and Shared Secret Information</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.8">
                <t indent="0" pn="section-toc.1-1.8.2.8.1"><xref derivedContent="8.8" format="counter" sectionFormat="of" target="section-8.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-recurring-usage-of-kem-keys">Recurring Usage of KEM Keys for Message Protection</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.9">
                <t indent="0" pn="section-toc.1-1.8.2.9.1"><xref derivedContent="8.9" format="counter" sectionFormat="of" target="section-8.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-trust-anchor-provisioning-u">Trust Anchor Provisioning Using CMP Messages</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.10">
                <t indent="0" pn="section-toc.1-1.8.2.10.1"><xref derivedContent="8.10" format="counter" sectionFormat="of" target="section-8.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-authorizing-requests-for-ce">Authorizing Requests for Certificates with Specific EKUs</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.11">
                <t indent="0" pn="section-toc.1-1.8.2.11.1"><xref derivedContent="8.11" format="counter" sectionFormat="of" target="section-8.11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-usage-of-ct-logs">Usage of CT Logs</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="10" format="counter" sectionFormat="of" target="section-10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2">
              <li pn="section-toc.1-1.10.2.1">
                <t indent="0" pn="section-toc.1-1.10.2.1.1"><xref derivedContent="10.1" format="counter" sectionFormat="of" target="section-10.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.10.2.2">
                <t indent="0" pn="section-toc.1-1.10.2.2.1"><xref derivedContent="10.2" format="counter" sectionFormat="of" target="section-10.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-reasons-for-the-presence-of">Reasons for the Presence of RAs</xref></t>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="Appendix B" format="default" sectionFormat="of" target="section-appendix.b"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-use-of-revocation-passp">The Use of Revocation Passphrase</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t indent="0" pn="section-toc.1-1.13.1"><xref derivedContent="Appendix C" format="default" sectionFormat="of" target="section-appendix.c"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-management-message-prof">PKI Management Message Profiles (REQUIRED)</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.13.2">
              <li pn="section-toc.1-1.13.2.1">
                <t indent="0" pn="section-toc.1-1.13.2.1.1"><xref derivedContent="C.1" format="counter" sectionFormat="of" target="section-appendix.c.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-general-rules-for-interpret">General Rules for Interpretation of These Profiles</xref></t>
              </li>
              <li pn="section-toc.1-1.13.2.2">
                <t indent="0" pn="section-toc.1-1.13.2.2.1"><xref derivedContent="C.2" format="counter" sectionFormat="of" target="section-appendix.c.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-algorithm-use-profile">Algorithm Use Profile</xref></t>
              </li>
              <li pn="section-toc.1-1.13.2.3">
                <t indent="0" pn="section-toc.1-1.13.2.3.1"><xref derivedContent="C.3" format="counter" sectionFormat="of" target="section-appendix.c.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pop-profile">POP Profile</xref></t>
              </li>
              <li pn="section-toc.1-1.13.2.4">
                <t indent="0" pn="section-toc.1-1.13.2.4.1"><xref derivedContent="C.4" format="counter" sectionFormat="of" target="section-appendix.c.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-initial-registration-certific">Initial Registration/Certification (Basic Authenticated Scheme)</xref></t>
              </li>
              <li pn="section-toc.1-1.13.2.5">
                <t indent="0" pn="section-toc.1-1.13.2.5.1"><xref derivedContent="C.5" format="counter" sectionFormat="of" target="section-appendix.c.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certificate-request-2">Certificate Request</xref></t>
              </li>
              <li pn="section-toc.1-1.13.2.6">
                <t indent="0" pn="section-toc.1-1.13.2.6.1"><xref derivedContent="C.6" format="counter" sectionFormat="of" target="section-appendix.c.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-update-request">Key Update Request</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.14">
            <t indent="0" pn="section-toc.1-1.14.1"><xref derivedContent="Appendix D" format="default" sectionFormat="of" target="section-appendix.d"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-management-message-profi">PKI Management Message Profiles (OPTIONAL)</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.14.2">
              <li pn="section-toc.1-1.14.2.1">
                <t indent="0" pn="section-toc.1-1.14.2.1.1"><xref derivedContent="D.1" format="counter" sectionFormat="of" target="section-appendix.d.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-general-rules-for-interpreta">General Rules for Interpretation of These Profiles</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.2">
                <t indent="0" pn="section-toc.1-1.14.2.2.1"><xref derivedContent="D.2" format="counter" sectionFormat="of" target="section-appendix.d.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-algorithm-use-profile-2">Algorithm Use Profile</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.3">
                <t indent="0" pn="section-toc.1-1.14.2.3.1"><xref derivedContent="D.3" format="counter" sectionFormat="of" target="section-appendix.d.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-self-signed-certificates">Self-Signed Certificates</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.4">
                <t indent="0" pn="section-toc.1-1.14.2.4.1"><xref derivedContent="D.4" format="counter" sectionFormat="of" target="section-appendix.d.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-root-ca-key-update-3">Root CA Key Update</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.5">
                <t indent="0" pn="section-toc.1-1.14.2.5.1"><xref derivedContent="D.5" format="counter" sectionFormat="of" target="section-appendix.d.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pki-information-request-res">PKI Information Request/Response</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.6">
                <t indent="0" pn="section-toc.1-1.14.2.6.1"><xref derivedContent="D.6" format="counter" sectionFormat="of" target="section-appendix.d.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cross-certification-request-">Cross-Certification Request/Response (1-way)</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.7">
                <t indent="0" pn="section-toc.1-1.14.2.7.1"><xref derivedContent="D.7" format="counter" sectionFormat="of" target="section-appendix.d.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-in-band-initialization-usin">In-Band Initialization Using External Identity Certificate</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.15">
            <t indent="0" pn="section-toc.1-1.15.1"><xref derivedContent="Appendix E" format="default" sectionFormat="of" target="section-appendix.e"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-variants-of-using-kem-keys-">Variants of Using KEM Keys for PKI Message Protection</xref></t>
          </li>
          <li pn="section-toc.1-1.16">
            <t indent="0" pn="section-toc.1-1.16.1"><xref derivedContent="Appendix F" format="default" sectionFormat="of" target="section-appendix.f"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-compilable-asn1-definitions">Compilable ASN.1 Definitions</xref></t>
          </li>
          <li pn="section-toc.1-1.17">
            <t indent="0" pn="section-toc.1-1.17.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.g"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
          <li pn="section-toc.1-1.18">
            <t indent="0" pn="section-toc.1-1.18.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.h"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="sect-1" numbered="true" removeInRFC="false" toc="include" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">This document describes the Internet X.509 PKI CMP.  Protocol messages are
defined for certificate creation and management.  The term
"certificate" in this document refers to an X.509v3 certificate as
defined in <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>.</t>
      <section anchor="sect-1.1" numbered="true" removeInRFC="false" toc="include" pn="section-1.1">
        <name slugifiedName="name-changes-made-by-rfc-4210">Changes Made by RFC 4210</name>
        <t indent="0" pn="section-1.1-1"><xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/> differs from <xref target="RFC2510" format="default" sectionFormat="of" derivedContent="RFC2510"/> in the following areas:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-1.1-2">
          <li pn="section-1.1-2.1">
            <t indent="0" pn="section-1.1-2.1.1">The PKI management message profile section is split to two
appendices: the required profile and the optional profile.  Some
of the formerly mandatory functionality is moved to the optional
profile.</t>
          </li>
          <li pn="section-1.1-2.2">
            <t indent="0" pn="section-1.1-2.2.1">The message confirmation mechanism has changed substantially.</t>
          </li>
          <li pn="section-1.1-2.3">
            <t indent="0" pn="section-1.1-2.3.1">A new polling mechanism is introduced, deprecating the old polling
method at the CMP transport level.</t>
          </li>
          <li pn="section-1.1-2.4">
            <t indent="0" pn="section-1.1-2.4.1">The CMP transport protocol issues are handled in a separate
document <xref target="RFC6712" format="default" sectionFormat="of" derivedContent="RFC6712"/>, thus the "Transports" section is removed.</t>
          </li>
          <li pn="section-1.1-2.5">
            <t indent="0" pn="section-1.1-2.5.1">A new implicit confirmation method is introduced to reduce the
number of protocol messages exchanged in a transaction.</t>
          </li>
          <li pn="section-1.1-2.6">
            <t indent="0" pn="section-1.1-2.6.1">The new specification contains some less prominent protocol
enhancements and improved explanatory text on several issues.</t>
          </li>
        </ul>
      </section>
      <section anchor="sect-1.2" numbered="true" removeInRFC="false" toc="include" pn="section-1.2">
        <name slugifiedName="name-updates-made-by-rfc-9480">Updates Made by RFC 9480</name>
        <t indent="0" pn="section-1.2-1">CMP Updates <xref target="RFC9480" format="default" sectionFormat="of" derivedContent="RFC9480"/> and CMP Algorithms <xref target="RFC9481" format="default" sectionFormat="of" derivedContent="RFC9481"/> updated <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/>, supporting the PKI management operations specified in the Lightweight CMP
Profile <xref target="RFC9483" format="default" sectionFormat="of" derivedContent="RFC9483"/>, in the following areas:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-1.2-2">
          <li pn="section-1.2-2.1">
            <t indent="0" pn="section-1.2-2.1.1">Added new extended key usages (EKUs) for various CMP server types, e.g., RA and CA, to express the authorization of the
certificate holder that acts as the indicated type of PKI management entity.</t>
          </li>
          <li pn="section-1.2-2.2">
            <t indent="0" pn="section-1.2-2.2.1">Extended the description of multiple protection to cover additional use cases,
e.g., batch processing of messages.</t>
          </li>
          <li pn="section-1.2-2.3">
            <t indent="0" pn="section-1.2-2.3.1">Used the Cryptographic Message Syntax (CMS) <xref target="RFC5652" format="default" sectionFormat="of" derivedContent="RFC5652"/> type EnvelopedData as the preferred choice instead of
EncryptedValue to better support crypto agility in CMP.  </t>
            <t indent="0" pn="section-1.2-2.3.2">
For reasons of completeness and consistency, the type EncryptedValue has been
exchanged in all occurrences.  This includes the protection of centrally
generated private keys, encryption of certificates, Proof-of-Possession (POP) methods, and protection of revocation
passphrases. To properly differentiate the support of EnvelopedData instead
of EncryptedValue, CMP version 3 is introduced in case a transaction
is supposed to use EnvelopedData.  </t>
            <t indent="0" pn="section-1.2-2.3.3">
Note: According to point 9 in <xref section="2.1" target="RFC4211" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc4211#section-2.1" derivedContent="RFC4211"/>, the use of the EncryptedValue structure has been deprecated
in favor of the EnvelopedData structure. <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> offers the EncryptedKey structure a choice of EncryptedValue and EnvelopedData
for migration to EnvelopedData.</t>
          </li>
          <li pn="section-1.2-2.4">
            <t indent="0" pn="section-1.2-2.4.1">Offered an optional hashAlg field in CertStatus supporting cases when a certificate
needs to be confirmed, but the certificate was signed using a signature algorithm that does not indicate
a specific hash algorithm to use for computing the certHash.  This is also in
preparation for upcoming post-quantum algorithms.</t>
          </li>
          <li pn="section-1.2-2.5">
            <t indent="0" pn="section-1.2-2.5.1">Added new general message types to request CA certificates, a root CA update,
a certificate request template, or Certificate Revocation List (CRL) updates.</t>
          </li>
          <li pn="section-1.2-2.6">
            <t indent="0" pn="section-1.2-2.6.1">Extended the use of polling to p10cr, certConf, rr, genm, and error messages.</t>
          </li>
          <li pn="section-1.2-2.7">
            <t indent="0" pn="section-1.2-2.7.1">Deleted the mandatory algorithm profile in <xref target="sect-c.2" format="default" sectionFormat="of" derivedContent="Appendix C.2"/> and instead referred to <xref section="7" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-7" derivedContent="RFC9481"/>.</t>
          </li>
          <li pn="section-1.2-2.8">
            <t indent="0" pn="section-1.2-2.8.1">Added Sections <xref format="counter" target="sect-8.6" sectionFormat="of" derivedContent="8.6"/>, <xref format="counter" target="sect-8.7" sectionFormat="of" derivedContent="8.7"/>, <xref format="counter" target="sect-8.9" sectionFormat="of" derivedContent="8.9"/>, and <xref format="counter" target="sect-8.10" sectionFormat="of" derivedContent="8.10"/> to the security considerations.</t>
          </li>
        </ul>
      </section>
      <section anchor="sect-1.3" numbered="true" removeInRFC="false" toc="include" pn="section-1.3">
        <name slugifiedName="name-changes-made-by-this-docume">Changes Made by This Document</name>
        <t indent="0" pn="section-1.3-1">This document obsoletes <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/> and <xref target="RFC9480" format="default" sectionFormat="of" derivedContent="RFC9480"/>.</t>
        <t indent="0" pn="section-1.3-2"> Backward compatibility with CMP version 2 is maintained
  wherever possible.  Updates to CMP version 2 improve crypto
  agility, extend the polling mechanism, add new general message
  types, and add EKUs to identify special CMP
  server authorizations.  CMP version 3 is introduced for changes to
  the ASN.1 syntax, which support EnvelopedData, certConf with hashAlg,
  POPOPrivKey with agreeMAC, and RootCaKeyUpdateContent in ckuann
  messages.</t>
        <t indent="0" pn="section-1.3-3">The updates made in this document include the
  changes specified by Section <xref section="2" target="RFC9480" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9480#section-2" derivedContent="RFC9480"/> and <xref section="A.2" target="RFC9480" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9480#appendix-A.2" derivedContent="RFC9480"/> as described in <xref target="sect-1.2" format="default" sectionFormat="of" derivedContent="Section 1.2"/>. Additionally, this document updates the content of <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/> in the following areas:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-1.3-4">
          <li pn="section-1.3-4.1">
            <t indent="0" pn="section-1.3-4.1.1">Added <xref target="sect-3.1.1.4" format="default" sectionFormat="of" derivedContent="Section 3.1.1.4"/> introducing the Key Generation Authority (KGA).</t>
          </li>
          <li pn="section-1.3-4.2">
            <t indent="0" pn="section-1.3-4.2.1">Extended <xref target="sect-3.1.2" format="default" sectionFormat="of" derivedContent="Section 3.1.2"/> regarding use of Certificate Transparency (CT) logs.</t>
          </li>
          <li pn="section-1.3-4.3">
            <t indent="0" pn="section-1.3-4.3.1">Updated <xref target="sect-4.4" format="default" sectionFormat="of" derivedContent="Section 4.4"/> introducing RootCaKeyUpdateContent as an alternative to using a repository to acquire new root CA certificates.</t>
          </li>
          <li pn="section-1.3-4.4">
            <t indent="0" pn="section-1.3-4.4.1">Added <xref target="sect-5.1.1.3" format="default" sectionFormat="of" derivedContent="Section 5.1.1.3"/> containing a description of origPKIMessage content, moved here from <xref target="sect-5.1.3.4" format="default" sectionFormat="of" derivedContent="Section 5.1.3.4"/>.</t>
          </li>
          <li pn="section-1.3-4.5">
            <t indent="0" pn="section-1.3-4.5.1">Added support for KEM keys for POP to Sections <xref target="sect-4.3" format="counter" sectionFormat="of" derivedContent="4.3"/> and <xref target="sect-5.2.8" format="counter" sectionFormat="of" derivedContent="5.2.8"/>, for message protection to Sections <xref target="sect-5.1.1" format="counter" sectionFormat="of" derivedContent="5.1.1"/> and <xref target="sect-5.1.3.4" format="counter" sectionFormat="of" derivedContent="5.1.3.4"/> and <xref target="sect-e" format="default" sectionFormat="of" derivedContent="Appendix E"/>, and for usage with CMS EnvelopedData to <xref target="sect-5.2.2" format="default" sectionFormat="of" derivedContent="Section 5.2.2"/>.</t>
          </li>
          <li pn="section-1.3-4.6">
            <t indent="0" pn="section-1.3-4.6.1">Deprecated CAKeyUpdAnnContent in favor of RootCaKeyUpdateContent.</t>
          </li>
          <li pn="section-1.3-4.7">
            <t indent="0" pn="section-1.3-4.7.1">Incorporated the request message behavioral clarifications from <xref section="C" target="RFC4210" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc4210#appendix-C" derivedContent="RFC4210"/> to <xref target="sect-5" format="default" sectionFormat="of" derivedContent="Section 5"/>. The definition of altCertTemplate was incorporated into <xref target="sect-5.2.1" format="default" sectionFormat="of" derivedContent="Section 5.2.1"/>, and the clarification on POPOSigningKey and on POPOPrivKey was incorporated into <xref target="sect-5.2.8" format="default" sectionFormat="of" derivedContent="Section 5.2.8"/>.</t>
          </li>
          <li pn="section-1.3-4.8">
            <t indent="0" pn="section-1.3-4.8.1">Added support for CMS EnvelopedData to different POP methods for transferring encrypted private keys, certificates, and challenges to <xref target="sect-5.2.8" format="default" sectionFormat="of" derivedContent="Section 5.2.8"/>.</t>
          </li>
          <li pn="section-1.3-4.9">
            <t indent="0" pn="section-1.3-4.9.1">Added Sections <xref format="counter" target="sect-8.1" sectionFormat="of" derivedContent="8.1"/>, <xref format="counter" target="sect-8.5" sectionFormat="of" derivedContent="8.5"/>, <xref format="counter" target="sect-8.8" sectionFormat="of" derivedContent="8.8"/>, and <xref format="counter" target="sect-8.11" sectionFormat="of" derivedContent="8.11"/> to the security considerations.</t>
          </li>
        </ul>
      </section>
    </section>
    <section anchor="sect-2" numbered="true" removeInRFC="false" toc="include" pn="section-2">
      <name slugifiedName="name-terminology-and-abbreviatio">Terminology and Abbreviations</name>
      <t indent="0" pn="section-2-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
      </t>
      <t indent="0" pn="section-2-2">This document relies on the terminology defined in <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>.  The most important abbreviations are listed
	below:</t>
      <dl spacing="normal" newline="false" indent="3" pn="section-2-3">
        <dt pn="section-2-3.1">CA:</dt>
        <dd pn="section-2-3.2">Certification Authority</dd>
        <dt pn="section-2-3.3">CMP:</dt>
        <dd pn="section-2-3.4">Certificate Management Protocol</dd>
        <dt pn="section-2-3.5">CMS:</dt>
        <dd pn="section-2-3.6">Cryptographic Message Syntax</dd>
        <dt pn="section-2-3.7">CRL:</dt>
        <dd pn="section-2-3.8">Certificate Revocation List</dd>
        <dt pn="section-2-3.9">CRMF:</dt>
        <dd pn="section-2-3.10">Certificate Request Message Format</dd>
        <dt pn="section-2-3.11">KEM:</dt>
        <dd pn="section-2-3.12">Key Encapsulation Mechanism</dd>
        <dt pn="section-2-3.13">KGA:</dt>
        <dd pn="section-2-3.14">Key Generation Authority</dd>
        <dt pn="section-2-3.15">LRA:</dt>
        <dd pn="section-2-3.16">Local Registration Authority</dd>
        <dt pn="section-2-3.17">MAC:</dt>
        <dd pn="section-2-3.18">Message Authentication Code</dd>
        <dt pn="section-2-3.19">PKI:</dt>
        <dd pn="section-2-3.20">Public Key Infrastructure</dd>
        <dt pn="section-2-3.21">POP:</dt>
        <dd pn="section-2-3.22">Proof-of-Possession</dd>
        <dt pn="section-2-3.23">RA:</dt>
        <dd pn="section-2-3.24">Registration Authority</dd>
        <dt pn="section-2-3.25">TEE:</dt>
        <dd pn="section-2-3.26">Trusted Execution Environment</dd>
      </dl>
    </section>
    <section anchor="sect-3" numbered="true" removeInRFC="false" toc="include" pn="section-3">
      <name slugifiedName="name-pki-management-overview">PKI Management Overview</name>
      <t indent="0" pn="section-3-1">The PKI must be structured to be consistent with the types of
individuals who must administer it.  Providing such administrators
with unbounded choices not only complicates the software required
but also increases the chances that a subtle mistake by an
administrator or software developer will result in broader
compromise.  Similarly, restricting administrators with cumbersome
mechanisms will cause them not to use the PKI.</t>
      <t indent="0" pn="section-3-2">Management protocols are <bcp14>REQUIRED</bcp14> to support online interactions
between PKI components.  For example, a
management protocol might be used between a
CA and a client system with which a key pair is associated or
between two CAs that issue cross-certificates for each other.</t>
      <section anchor="sect-3.1" numbered="true" removeInRFC="false" toc="include" pn="section-3.1">
        <name slugifiedName="name-pki-management-model">PKI Management Model</name>
        <t indent="0" pn="section-3.1-1">Before specifying particular message formats and procedures, we first
define the entities involved in PKI management and their interactions
(in terms of the PKI management functions required).  We then group
these functions in order to accommodate different identifiable types
of end entities.</t>
        <section anchor="sect-3.1.1" numbered="true" removeInRFC="false" toc="include" pn="section-3.1.1">
          <name slugifiedName="name-definitions-of-pki-entities">Definitions of PKI Entities</name>
          <t indent="0" pn="section-3.1.1-1">The entities involved in PKI management include the end entity (i.e.,
the entity to whom the certificate is issued) and the CA (i.e., the entity that issues the certificate).  An RA might also be involved in PKI management.</t>
          <section anchor="sect-3.1.1.1" numbered="true" removeInRFC="false" toc="include" pn="section-3.1.1.1">
            <name slugifiedName="name-subjects-and-end-entities">Subjects and End Entities</name>
            <t indent="0" pn="section-3.1.1.1-1">The term "subject" is used here to refer to the entity to whom the
certificate is issued, typically named in the subject or
subjectAltName field of a certificate.  When we wish to distinguish
the tools and/or software used by the subject (e.g., a local
certificate management module), we will use the term "subject equipment".
In general, the term "end entity", rather than
"subject", is preferred in order to avoid confusion with the field
name.  It is important to note that the end entities here will
include not only human users of applications but also applications
themselves (e.g., for 		Internet Key Exchange Protocol (IKE) / IPsec) or devices (e.g., routers or industrial
control systems).  This factor influences the
protocols that the PKI management operations use; for example,
application software is far more likely to know exactly which
certificate extensions are required than are human users.  PKI
management entities are also end entities in the sense that they are
sometimes named in the subject or subjectAltName field of a
certificate or cross-certificate.  Where appropriate, the term "end entity"
will be used to refer to end entities who are not PKI
management entities.</t>
            <t indent="0" pn="section-3.1.1.1-2">All end entities require secure local access to some information --
at a minimum, their own name and private key, the name of a CA that
is directly trusted by this entity, and that CA's public key (or a
fingerprint of the public key where a self-certified version is
available elsewhere).  Implementations <bcp14>MAY</bcp14> use secure local storage
for more than this minimum (e.g., the end entity's own certificates or
application-specific information).  The form of storage will also
vary -- from files to tamper-resistant cryptographic tokens.  The
information stored in such local, trusted storage is referred to here
as the end entity's TEE, also known as
Personal Security Environment (PSE).</t>
            <t indent="0" pn="section-3.1.1.1-3">Though TEE formats are beyond the scope of this document (they are
very dependent on equipment, et cetera), a generic interchange format
for TEEs is defined here: a certification response message (see <xref target="sect-5.3.4" format="default" sectionFormat="of" derivedContent="Section 5.3.4"/>) <bcp14>MAY</bcp14> be
used.</t>
          </section>
          <section anchor="sect-3.1.1.2" numbered="true" removeInRFC="false" toc="include" pn="section-3.1.1.2">
            <name slugifiedName="name-certification-authority">Certification Authority</name>
            <t indent="0" pn="section-3.1.1.2-1">The CA may or may not actually be a real
"third party" from the end entity's point of view.  Quite often, the
CA will actually belong to the same organization as the end entities
it supports.</t>
            <t indent="0" pn="section-3.1.1.2-2">Again, we use the term "CA" to refer to the entity named in the
issuer field of a certificate.  When it is necessary to distinguish
the software or hardware tools used by the CA, we use the term "CA equipment".</t>
            <t indent="0" pn="section-3.1.1.2-3">The CA equipment will often include both an "offline" component and
an "online" component, with the CA private key only available to the
"offline" component.  This is, however, a matter for implementers
(though it is also relevant as a policy issue).</t>
            <t indent="0" pn="section-3.1.1.2-4">We use the term "root CA" to indicate a CA that is directly trusted
by an end entity; that is, securely acquiring the value of a root CA
public key requires some out-of-band step(s). This term is not meant
to imply that a root CA is necessarily at the top of any hierarchy,
simply that the CA in question is trusted directly.  The "root CA"
may provide its trust anchor information with or without using a
certificate.  In some circumstances, such a certificate may be
self-signed, but in other circumstances, it may be cross-signed,
signed by a peer, signed by a superior CA, or unsigned.</t>
            <t indent="0" pn="section-3.1.1.2-5">Note that other documents like <xref target="X509.2019" format="default" sectionFormat="of" derivedContent="X509.2019"/> and <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> use the
term "trusted CA" or "trust anchor" instead of "root CA".  This
document continues using "root CA" based on the above definition
because it is also present in the ASN.1 syntax that cannot be changed
easily.</t>
            <t indent="0" pn="section-3.1.1.2-6">A "subordinate CA" is one that is not a root CA for the end entity in
question.  Often, a subordinate CA will not be a root CA for any
entity, but this is not mandatory.</t>
          </section>
          <section anchor="sect-3.1.1.3" numbered="true" removeInRFC="false" toc="include" pn="section-3.1.1.3">
            <name slugifiedName="name-registration-authority">Registration Authority</name>
            <t indent="0" pn="section-3.1.1.3-1">In addition to end entities and CAs, many environments call for the
existence of an RA separate from the
CA.  The functions that the RA may carry out will vary from case to case but <bcp14>MAY</bcp14> include
identity checking, token distribution, checking certificate requests
and authentication of their origin, revocation reporting,
name assignment, archival of key pairs, et cetera.</t>
            <t indent="0" pn="section-3.1.1.3-2">This document views the RA as an <bcp14>OPTIONAL</bcp14> component: When it is not
present, the CA is assumed to be able to carry out the RA's functions
so that the PKI management protocols are the same from the 
end entity's point of view.</t>
            <t indent="0" pn="section-3.1.1.3-3">Again, we distinguish, where necessary, between the RA and the tools
used (the "RA equipment").</t>
            <t indent="0" pn="section-3.1.1.3-4">Note that an RA is itself an end entity.  We further assume that all
RAs are in fact certified end entities and that RAs have private keys
that are usable for signing.  How a particular CA equipment
identifies some end entities as RAs is an implementation issue (i.e.,
this document specifies no special RA certification operation).  We
do not mandate that the RA is certified by the CA with which it is
interacting at the moment (so one RA may work with more than one CA
whilst only being certified once).</t>
            <t indent="0" pn="section-3.1.1.3-5">In some circumstances, end entities will communicate directly with a
CA even where an RA is present.  For example, for initial
registration and/or certification, the end entity may use its RA but
communicate directly with the CA in order to refresh its certificate.</t>
          </section>
          <section anchor="sect-3.1.1.4" numbered="true" removeInRFC="false" toc="include" pn="section-3.1.1.4">
            <name slugifiedName="name-key-generation-authority">Key Generation Authority</name>
            <t indent="0" pn="section-3.1.1.4-1">A KGA is a PKI management entity generating key
pairs on behalf of an end entity. As the KGA generates the key pair, it
knows the public and the private part.</t>
            <t indent="0" pn="section-3.1.1.4-2">This document views the KGA as an <bcp14>OPTIONAL</bcp14> component. When it is not present
and central key generation is needed, the CA is assumed to be able to carry
out the KGA's functions so that the PKI management protocol messages are the
same from the end entity's point of view. If certain tasks of a CA are
delegated to other components, this delegation needs authorization, which can
be indicated by EKUs (see <xref target="sect-4.5" format="default" sectionFormat="of" derivedContent="Section 4.5"/>).</t>
            <t indent="0" pn="section-3.1.1.4-3">Note: When doing central generation of key pairs, implementers should consider
the implications of server-side retention on the overall security of the
system; in some cases, retention is good, for example, for escrow reasons, but
in other cases, the server should clear its copy after delivery to the end entity.</t>
            <t indent="0" pn="section-3.1.1.4-4">Note: If the CA delegates key generation to a KGA, the KGA can be collocated
with the RA.</t>
          </section>
        </section>
        <section anchor="sect-3.1.2" numbered="true" removeInRFC="false" toc="include" pn="section-3.1.2">
          <name slugifiedName="name-pki-management-requirements">PKI Management Requirements</name>
          <t indent="0" pn="section-3.1.2-1">The protocols given here meet the following requirements on PKI
management</t>
          <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-3.1.2-2"><li pn="section-3.1.2-2.1" derivedCounter="1.">
              <t indent="0" pn="section-3.1.2-2.1.1">PKI management must conform to the ISO/IEC 9594-8/ITU-T X.509
  standards, in particular <xref target="X509.2019" format="default" sectionFormat="of" derivedContent="X509.2019"/>.</t>
            </li>
            <li pn="section-3.1.2-2.2" derivedCounter="2.">
              <t indent="0" pn="section-3.1.2-2.2.1">It must be possible to regularly update any key pair without
  affecting any other key pair.</t>
            </li>
            <li pn="section-3.1.2-2.3" derivedCounter="3.">
              <t indent="0" pn="section-3.1.2-2.3.1">The use of confidentiality in PKI management protocols must be
  kept to a minimum in order to ease acceptance in environments
  where strong confidentiality might cause regulatory problems.</t>
            </li>
            <li pn="section-3.1.2-2.4" derivedCounter="4.">
              <t indent="0" pn="section-3.1.2-2.4.1">PKI management protocols must allow the use of different
  industry-standard cryptographic algorithms (see CMP Algorithms <xref target="RFC9481" format="default" sectionFormat="of" derivedContent="RFC9481"/>).
  This means that any given
  CA, RA, or end entity may, in principle, use whichever
  algorithms suit it for its own key pair(s).</t>
            </li>
            <li pn="section-3.1.2-2.5" derivedCounter="5.">
              <t indent="0" pn="section-3.1.2-2.5.1">PKI management protocols must not preclude the generation of key
  pairs by the end entity concerned, by a KGA, or by a CA.  Key
  generation may also occur elsewhere, but for the purposes of PKI
  management, we can regard key generation as occurring wherever
  the key is first present at an end entity, KGA, or CA.</t>
            </li>
            <li pn="section-3.1.2-2.6" derivedCounter="6.">
              <t indent="0" pn="section-3.1.2-2.6.1">PKI management protocols must support the publication of
  certificates by the end entity concerned, by an RA, or by a CA.
  Different implementations and different environments may choose
  any of the above approaches.</t>
            </li>
            <li pn="section-3.1.2-2.7" derivedCounter="7.">
              <t indent="0" pn="section-3.1.2-2.7.1">PKI management protocols must support the production of
  Certificate Revocation Lists (CRLs) by allowing certified end entities
  to make requests for the revocation of certificates.
  This must be done in such a way that the denial-of-service
  attacks, which are possible, are not made simpler.</t>
            </li>
            <li pn="section-3.1.2-2.8" derivedCounter="8.">
              <t indent="0" pn="section-3.1.2-2.8.1">PKI management protocols must be usable over a variety of
  "transport" mechanisms, specifically including email, Hypertext
  Transfer Protocol (HTTP), Message Queuing Telemetry Transport (MQTT),
  Constrained Application Protocol (CoAP), and various offline and non-networked file transfer methods.</t>
            </li>
            <li pn="section-3.1.2-2.9" derivedCounter="9.">
              <t indent="0" pn="section-3.1.2-2.9.1">Final authority for certification creation rests with the CA.
  No RA or end entity equipment can assume that any certificate
  issued by a CA will contain what was requested; a CA may alter
  certificate field values or may add, delete, or alter extensions
  according to its operating policy.  In other words, all PKI
  entities (end entities, RAs, KGAs, and CAs) must be capable of
  handling responses to requests for certificates in which the
  actual certificate issued is different from that requested (for
  example, a CA may shorten the validity period requested).  Note
  that policy may dictate that the CA must not publish or
  otherwise distribute the certificate until the requesting entity
  has reviewed and accepted the newly created certificate or the
  POP is completed. In case of publication of the certificate
  (when using indirect POP, see <xref target="sect-8.11" format="default" sectionFormat="of" derivedContent="Section 8.11"/>) or a precertificate
  in a CT log <xref target="RFC9162" format="default" sectionFormat="of" derivedContent="RFC9162"/>, the certificate
  must be revoked if it was not accepted by the end entity or the POP could
  not be completed.</t>
            </li>
            <li pn="section-3.1.2-2.10" derivedCounter="10.">
              <t indent="0" pn="section-3.1.2-2.10.1">A graceful, scheduled changeover from one non-compromised CA
  key pair to the next (CA key update) must be supported (note
  that if the CA key is compromised, re-initialization must be
  performed for all entities in the domain of that CA).  An end entity
  whose TEE contains the new CA public key (following a CA
  key update) may also need to be able to verify certificates verifiable
  using the old public key.  End entities who directly trust the
  old CA key pair may also need to be able to verify certificates signed
  using the new CA private key (required for situations where the
  old CA public key is "hardwired" into the end entity's
  cryptographic equipment).</t>
            </li>
            <li pn="section-3.1.2-2.11" derivedCounter="11.">
              <t indent="0" pn="section-3.1.2-2.11.1">The functions of an RA may, in some implementations or
  environments, be carried out by the CA itself.  The protocols
  must be designed so that end entities will use the same protocol
  regardless of whether the communication is with an RA or CA.
  Naturally, the end entity must use the correct RA or CA public
  key to verify the protection of the communication.</t>
            </li>
            <li pn="section-3.1.2-2.12" derivedCounter="12.">
              <t indent="0" pn="section-3.1.2-2.12.1">Where an end entity requests a certificate containing a given
  public key value, the end entity must be ready to demonstrate
  possession of the corresponding private key value.  This may be
  accomplished in various ways, depending on the type of
  certification request.  See <xref target="sect-4.3" format="default" sectionFormat="of" derivedContent="Section 4.3"/> for details of the
  in-band methods defined for the PKIX-CMP (i.e., CMP) messages.</t>
            </li>
          </ol>
        </section>
        <section anchor="sect-3.1.3" numbered="true" removeInRFC="false" toc="include" pn="section-3.1.3">
          <name slugifiedName="name-pki-management-operations">PKI Management Operations</name>
          <t indent="0" pn="section-3.1.3-1">The following diagram shows the relationship between the entities
defined above in terms of the PKI management operations.  The letters
in the diagram indicate "protocols" in the sense that a defined set
of PKI management messages can be sent along each of the lettered
lines.</t>
          <figure anchor="ure-pki-entities" align="left" suppress-title="false" pn="figure-1">
            <name slugifiedName="name-pki-entities">PKI Entities</name>
            <artset pn="section-3.1.3-2.1">
              <artwork type="svg" align="left" pn="section-3.1.3-2.1.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="592" width="520" viewBox="0 0 520 592" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                  <path d="M 8,32 L 8,448" fill="none" stroke="black"/>
                  <path d="M 40,32 L 40,448" fill="none" stroke="black"/>
                  <path d="M 184,272 L 184,320" fill="none" stroke="black"/>
                  <path d="M 208,208 L 208,264" fill="none" stroke="black"/>
                  <path d="M 224,216 L 224,264" fill="none" stroke="black"/>
                  <path d="M 240,272 L 240,320" fill="none" stroke="black"/>
                  <path d="M 256,32 L 256,64" fill="none" stroke="black"/>
                  <path d="M 272,72 L 272,200" fill="none" stroke="black"/>
                  <path d="M 272,368 L 272,400" fill="none" stroke="black"/>
                  <path d="M 288,72 L 288,208" fill="none" stroke="black"/>
                  <path d="M 288,304 L 288,360" fill="none" stroke="black"/>
                  <path d="M 296,528 L 296,560" fill="none" stroke="black"/>
                  <path d="M 304,288 L 304,360" fill="none" stroke="black"/>
                  <path d="M 312,408 L 312,520" fill="none" stroke="black"/>
                  <path d="M 328,408 L 328,520" fill="none" stroke="black"/>
                  <path d="M 344,208 L 344,360" fill="none" stroke="black"/>
                  <path d="M 352,528 L 352,560" fill="none" stroke="black"/>
                  <path d="M 360,32 L 360,64" fill="none" stroke="black"/>
                  <path d="M 360,216 L 360,360" fill="none" stroke="black"/>
                  <path d="M 376,368 L 376,400" fill="none" stroke="black"/>
                  <path d="M 8,32 L 40,32" fill="none" stroke="black"/>
                  <path d="M 256,32 L 360,32" fill="none" stroke="black"/>
                  <path d="M 64,48 L 232,48" fill="none" stroke="black"/>
                  <path d="M 376,48 L 432,48" fill="none" stroke="black"/>
                  <path d="M 256,64 L 360,64" fill="none" stroke="black"/>
                  <path d="M 56,208 L 512,208" fill="none" stroke="black"/>
                  <path d="M 184,272 L 240,272" fill="none" stroke="black"/>
                  <path d="M 72,288 L 168,288" fill="none" stroke="black"/>
                  <path d="M 256,288 L 304,288" fill="none" stroke="black"/>
                  <path d="M 256,304 L 288,304" fill="none" stroke="black"/>
                  <path d="M 184,320 L 240,320" fill="none" stroke="black"/>
                  <path d="M 272,368 L 376,368" fill="none" stroke="black"/>
                  <path d="M 72,384 L 264,384" fill="none" stroke="black"/>
                  <path d="M 384,384 L 440,384" fill="none" stroke="black"/>
                  <path d="M 272,400 L 376,400" fill="none" stroke="black"/>
                  <path d="M 8,448 L 40,448" fill="none" stroke="black"/>
                  <path d="M 296,528 L 352,528" fill="none" stroke="black"/>
                  <path d="M 296,560 L 352,560" fill="none" stroke="black"/>
                  <polygon class="arrowhead" points="448,384 436,378.4 436,389.6" fill="black" transform="rotate(0,440,384)"/>
                  <polygon class="arrowhead" points="384,48 372,42.4 372,53.6" fill="black" transform="rotate(180,376,48)"/>
                  <polygon class="arrowhead" points="368,216 356,210.4 356,221.6" fill="black" transform="rotate(270,360,216)"/>
                  <polygon class="arrowhead" points="352,360 340,354.4 340,365.6" fill="black" transform="rotate(90,344,360)"/>
                  <polygon class="arrowhead" points="336,408 324,402.4 324,413.6" fill="black" transform="rotate(270,328,408)"/>
                  <polygon class="arrowhead" points="320,520 308,514.4 308,525.6" fill="black" transform="rotate(90,312,520)"/>
                  <polygon class="arrowhead" points="296,360 284,354.4 284,365.6" fill="black" transform="rotate(90,288,360)"/>
                  <polygon class="arrowhead" points="296,72 284,66.4 284,77.6" fill="black" transform="rotate(270,288,72)"/>
                  <polygon class="arrowhead" points="280,200 268,194.4 268,205.6" fill="black" transform="rotate(90,272,200)"/>
                  <polygon class="arrowhead" points="264,288 252,282.4 252,293.6" fill="black" transform="rotate(180,256,288)"/>
                  <polygon class="arrowhead" points="232,216 220,210.4 220,221.6" fill="black" transform="rotate(270,224,216)"/>
                  <polygon class="arrowhead" points="216,264 204,258.4 204,269.6" fill="black" transform="rotate(90,208,264)"/>
                  <polygon class="arrowhead" points="80,384 68,378.4 68,389.6" fill="black" transform="rotate(180,72,384)"/>
                  <polygon class="arrowhead" points="80,288 68,282.4 68,293.6" fill="black" transform="rotate(180,72,288)"/>
                  <polygon class="arrowhead" points="72,48 60,42.4 60,53.6" fill="black" transform="rotate(180,64,48)"/>
                  <g class="text">
                    <text x="104" y="36">cert.</text>
                    <text x="160" y="36">publish</text>
                    <text x="416" y="36">j</text>
                    <text x="280" y="52">End</text>
                    <text x="324" y="52">Entity</text>
                    <text x="24" y="68">C</text>
                    <text x="152" y="68">g</text>
                    <text x="464" y="68">"out-of-band"</text>
                    <text x="24" y="84">e</text>
                    <text x="448" y="84">loading</text>
                    <text x="24" y="100">r</text>
                    <text x="368" y="100">initial</text>
                    <text x="24" y="116">t</text>
                    <text x="256" y="116">a</text>
                    <text x="304" y="116">b</text>
                    <text x="400" y="116">registration/</text>
                    <text x="400" y="132">certification</text>
                    <text x="24" y="148">/</text>
                    <text x="352" y="148">key</text>
                    <text x="388" y="148">pair</text>
                    <text x="444" y="148">recovery</text>
                    <text x="352" y="164">key</text>
                    <text x="388" y="164">pair</text>
                    <text x="436" y="164">update</text>
                    <text x="24" y="180">C</text>
                    <text x="384" y="180">certificate</text>
                    <text x="460" y="180">update</text>
                    <text x="24" y="196">R</text>
                    <text x="72" y="196">PKI</text>
                    <text x="120" y="196">"USERS"</text>
                    <text x="380" y="196">revocation</text>
                    <text x="456" y="196">request</text>
                    <text x="24" y="212">L</text>
                    <text x="72" y="228">PKI</text>
                    <text x="132" y="228">MANAGEMENT</text>
                    <text x="108" y="244">ENTITIES</text>
                    <text x="192" y="244">a</text>
                    <text x="240" y="244">b</text>
                    <text x="328" y="244">a</text>
                    <text x="376" y="244">b</text>
                    <text x="24" y="260">R</text>
                    <text x="24" y="276">e</text>
                    <text x="152" y="276">g</text>
                    <text x="280" y="276">d</text>
                    <text x="24" y="292">p</text>
                    <text x="204" y="292">RA</text>
                    <text x="24" y="308">o</text>
                    <text x="112" y="308">cert.</text>
                    <text x="24" y="324">s</text>
                    <text x="128" y="324">publish</text>
                    <text x="272" y="324">c</text>
                    <text x="24" y="340">i</text>
                    <text x="24" y="356">t</text>
                    <text x="24" y="372">o</text>
                    <text x="128" y="372">g</text>
                    <text x="408" y="372">i</text>
                    <text x="24" y="388">r</text>
                    <text x="324" y="388">CA</text>
                    <text x="24" y="404">y</text>
                    <text x="128" y="404">h</text>
                    <text x="448" y="404">"out-of-band"</text>
                    <text x="112" y="420">cert.</text>
                    <text x="168" y="420">publish</text>
                    <text x="448" y="420">publication</text>
                    <text x="104" y="436">CRL</text>
                    <text x="152" y="436">publish</text>
                    <text x="440" y="452">cross-certification</text>
                    <text x="296" y="468">e</text>
                    <text x="344" y="468">f</text>
                    <text x="432" y="468">cross-certificate</text>
                    <text x="412" y="484">update</text>
                    <text x="324" y="548">CA-2</text>
                  </g>
                </svg>
              </artwork>
              <artwork type="ascii-art" align="left" pn="section-3.1.3-2.1.2">
  +---+     cert. publish        +------------+      j
  |   |  &lt;---------------------  | End Entity | &lt;-------
  | C |             g            +------------+      "out-of-band"
  | e |                            | ^                loading
  | r |                            | |      initial
  | t |                          a | | b     registration/
  |   |                            | |       certification
  | / |                            | |      key pair recovery
  |   |                            | |      key pair update
  | C |                            | |      certificate update
  | R |  PKI "USERS"               V |      revocation request
  | L | -------------------+-+-----+-+------+-+-------------------
  |   |  PKI MANAGEMENT    | ^              | ^
  |   |    ENTITIES      a | | b          a | | b
  | R |                    V |              | |
  | e |             g   +------+    d       | |
  | p |   &lt;------------ | RA   | &lt;-----+    | |
  | o |      cert.      |      | ----+ |    | |
  | s |       publish   +------+   c | |    | |
  | i |                              | |    | |
  | t |                              V |    V |
  | o |          g                 +------------+   i
  | r |   &lt;------------------------|     CA     |-------&gt;
  | y |          h                 +------------+  "out-of-band"
  |   |      cert. publish              | ^         publication
  |   |      CRL publish                | |
  +---+                                 | |    cross-certification
                                      e | | f  cross-certificate
                                        | |       update
                                        | |
                                        V |
                                      +------+
                                      | CA-2 |
                                      +------+
</artwork>
            </artset>
          </figure>
          <t indent="0" pn="section-3.1.3-3">At a high level, the set of operations for which management
	  messages are defined can be grouped as follows.</t>
          <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-3.1.3-4">
	    <li pn="section-3.1.3-4.1" derivedCounter="1.">CA establishment: When establishing a new CA, certain steps
	    are required (e.g., production of initial CRLs and export of CA
	    public key).</li>
            <li pn="section-3.1.3-4.2" derivedCounter="2.">End entity initialization: This includes importing a root
            CA public key and requesting information about the options
            supported by a PKI management entity.</li>
            <li pn="section-3.1.3-4.3" derivedCounter="3.">
              <t indent="0" pn="section-3.1.3-4.3.1">Certification: Various operations result in the creation
            of new certificates: </t>
              <ol spacing="normal" type="a" indent="adaptive" start="1" pn="section-3.1.3-4.3.2">
                <li pn="section-3.1.3-4.3.2.1" derivedCounter="a.">initial registration/certification: This is the process
                whereby an end entity first makes itself known to a CA or RA,
                prior to the CA issuing a certificate or certificates for that
                end entity.  The end result of this process (when it is
                successful) is that a CA issues a certificate for an end entity's
                public key and returns that certificate to the end entity
                and/or posts that certificate in a repository.  This
                process may, and typically will, involve multiple "steps",
                possibly including an initialization of the end entity's
                equipment.  For example, the end entity's equipment must be
                securely initialized with the public key of a CA, e.g., using
                zero-touch methods like Bootstrapping Remote Secure Key
                Infrastructure (BRSKI) <xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/> or Secure Zero
                Touch Provisioning (SZTP) <xref target="RFC8572" format="default" sectionFormat="of" derivedContent="RFC8572"/>, to be used
                in validating certificate paths.  Furthermore, an end entity
                typically needs to be initialized with its own key
                pair(s).</li>
                <li pn="section-3.1.3-4.3.2.2" derivedCounter="b.">key pair update: Every key pair needs to be updated
                regularly (i.e., replaced with a new key pair), and a new
                certificate needs to be issued.</li>
                <li pn="section-3.1.3-4.3.2.3" derivedCounter="c.">certificate update: As certificates expire, they may be
                "refreshed" if nothing relevant in the environment has
                changed.</li>
                <li pn="section-3.1.3-4.3.2.4" derivedCounter="d.">CA key pair update: As with end entities, CA key pairs need
                to be updated regularly; however, different mechanisms are
                required.</li>
                <li pn="section-3.1.3-4.3.2.5" derivedCounter="e.">
                  <t indent="0" pn="section-3.1.3-4.3.2.5.1">cross-certification request: One CA requests issuance of a
                cross-certificate from another CA.  For the purposes of this
                standard, the following terms are defined.  A
                "cross-certificate" is a certificate in which the subject CA
                and the issuer CA are distinct and SubjectPublicKeyInfo
                contains a verification key (i.e., the certificate has been
                issued for the subject CA's signing key pair).  When it is
                necessary to distinguish more finely, the following terms may
                be used: A cross-certificate is called an "inter-domain
                cross-certificate" if the subject and issuer CAs belong to
                different administrative domains; it is called an
                "intra-domain cross-certificate" otherwise.</t>
                  <ol type="Note %d:" indent="adaptive" spacing="normal" start="1" pn="section-3.1.3-4.3.2.5.2">
                  <li pn="section-3.1.3-4.3.2.5.2.1" derivedCounter="Note 1:">The above definition of "cross-certificate"
                  aligns with the defined term "CA-certificate" in X.509.
                  Note that this term is not to be confused with the X.500
                  "cACertificate" attribute type, which is unrelated.</li>
                    <li pn="section-3.1.3-4.3.2.5.2.2" derivedCounter="Note 2:">In many environments, the term
                  "cross-certificate", unless further qualified, will be
                  understood to be synonymous with "inter-domain
                  cross-certificate" as defined above.</li>
                    <li pn="section-3.1.3-4.3.2.5.2.3" derivedCounter="Note 3:">Issuance of cross-certificates may be, but is
                  not necessarily, mutual; that is, two CAs may issue
                  cross-certificates for each other.</li>
                  </ol>
                </li>
                <li pn="section-3.1.3-4.3.2.6" derivedCounter="f.">cross-certificate update: Similar to a normal certificate
		update but involving a cross-certificate.</li>
              </ol>
            </li>
            <li pn="section-3.1.3-4.4" derivedCounter="4.">
              <t indent="0" pn="section-3.1.3-4.4.1">Certificate/CRL discovery operations: Some PKI management
            operations result in the publication of certificates or CRLs: </t>
              <ol spacing="normal" type="a" indent="adaptive" start="1" pn="section-3.1.3-4.4.2">
		<li pn="section-3.1.3-4.4.2.1" derivedCounter="a.">certificate publication: Having gone to the trouble of
		producing a certificate, some means for publishing may be
		needed.  The "means" defined in PKIX <bcp14>MAY</bcp14>
		involve the messages specified in Sections <xref format="counter" target="sect-5.3.13" sectionFormat="of" derivedContent="5.3.13"/> to <xref format="counter" target="sect-5.3.16" sectionFormat="of" derivedContent="5.3.16"/> or <bcp14>MAY</bcp14>
		involve other methods (for example, Lightweight Directory Access Protocol (LDAP)) as described in
		<xref target="RFC4511" format="default" sectionFormat="of" derivedContent="RFC4511"/> or <xref target="RFC2585" format="default" sectionFormat="of" derivedContent="RFC2585"/> (the
		"Operational Protocols" documents of the PKIX series of
		specifications).</li>
                <li pn="section-3.1.3-4.4.2.2" derivedCounter="b.">CRL publication: As for certificate publication.</li>
              </ol>
            </li>
            <li pn="section-3.1.3-4.5" derivedCounter="5.">
              <t indent="0" pn="section-3.1.3-4.5.1">Recovery operations: Some PKI management operations are
            used when an end entity has "lost" its TEE:</t>
              <ol spacing="normal" type="a" indent="adaptive" start="1" pn="section-3.1.3-4.5.2">
		<li pn="section-3.1.3-4.5.2.1" derivedCounter="a.">key pair recovery: As an option, user client key
		materials (e.g., a user's private key used for decryption
		purposes) <bcp14>MAY</bcp14> be backed up by a CA, an RA, or a
		key backup system associated with a CA or RA.  If an entity
		needs to recover these backed up key materials (e.g., as a
		result of a forgotten password or a lost key chain file), a
		protocol exchange may be needed to support such recovery.</li>
              </ol>
            </li>
            <li pn="section-3.1.3-4.6" derivedCounter="6.">
              <t indent="0" pn="section-3.1.3-4.6.1">Revocation operations: Some PKI management operations
            result in the creation of new CRL entries and/or new CRLs:</t>
              <ol spacing="normal" type="a" indent="adaptive" start="1" pn="section-3.1.3-4.6.2">
		<li pn="section-3.1.3-4.6.2.1" derivedCounter="a.">revocation request: An authorized person advises a CA
		of an abnormal situation requiring certificate revocation.</li>
              </ol>
            </li>
            <li pn="section-3.1.3-4.7" derivedCounter="7.">TEE operations: Whilst the definition of TEE operations
            (e.g., moving a TEE, changing a PIN, etc.) are beyond the scope of
            this specification, we do define a PKIMessage (CertRepMessage)
            that can form the basis of such operations.</li>
          </ol>
          <t indent="0" pn="section-3.1.3-5">Note that online protocols are not the only way of implementing the
above operations.  For all operations, there are offline methods of
achieving the same result, and this specification does not mandate
use of online protocols.  For example, when hardware tokens are
used, many of the operations <bcp14>MAY</bcp14> be achieved as part of the physical
token delivery.</t>
          <t indent="0" pn="section-3.1.3-6">Later sections define a set of standard messages supporting the above
operations.  Transfer protocols for conveying these exchanges in
various environments (e.g., offline: file-based; online: email,
HTTP <xref target="RFC9811" format="default" sectionFormat="of" derivedContent="RFC9811"/>, MQTT, and CoAP <xref target="RFC9482" format="default" sectionFormat="of" derivedContent="RFC9482"/>) are
beyond the scope of this document and must be specified separately.
Appropriate transfer protocols <bcp14>MUST</bcp14> be capable of delivering the CMP
messages reliably.</t>
          <t indent="0" pn="section-3.1.3-7">CMP provides inbuilt integrity protection and authentication. The information
communicated unencrypted in CMP messages does not contain sensitive
information endangering the security of the PKI when intercepted. However,
it might be possible for an eavesdropper to utilize the available information to
gather confidential technical or business-critical information. Therefore, users
should consider protection of confidentiality on lower levels of the protocol
stack, e.g., by using TLS <xref target="RFC8446" format="default" sectionFormat="of" derivedContent="RFC8446"/>, DTLS <xref target="RFC9147" format="default" sectionFormat="of" derivedContent="RFC9147"/>, or IPsec <xref target="RFC7296" format="default" sectionFormat="of" derivedContent="RFC7296"/><xref target="RFC4303" format="default" sectionFormat="of" derivedContent="RFC4303"/>.</t>
        </section>
      </section>
    </section>
    <section anchor="sect-4" numbered="true" removeInRFC="false" toc="include" pn="section-4">
      <name slugifiedName="name-assumptions-and-restriction">Assumptions and Restrictions</name>
      <section anchor="sect-4.1" numbered="true" removeInRFC="false" toc="include" pn="section-4.1">
        <name slugifiedName="name-end-entity-initialization">End Entity Initialization</name>
        <t indent="0" pn="section-4.1-1">The first step for an end entity in dealing with PKI management
entities is to request information about the PKI functions supported
and to securely acquire a copy of the relevant root CA public key(s).</t>
      </section>
      <section anchor="sect-4.2" numbered="true" removeInRFC="false" toc="include" pn="section-4.2">
        <name slugifiedName="name-initial-registration-certif">Initial Registration/Certification</name>
        <t indent="0" pn="section-4.2-1">There are many schemes that can be used to achieve initial
registration and certification of end entities.  No one method is
suitable for all situations due to the range of policies that a CA
may implement and the variation in the types of end entity that can
occur.</t>
        <t indent="0" pn="section-4.2-2">However, we can classify the initial registration/certification
schemes that are supported by this specification.  Note that the word
"initial", above, is crucial: We are dealing with the situation where
the end entity in question has had no previous contact with the PKI,
except having received the root CA certificate of that PKI by some
zero-touch method like BRSKI <xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/>
          <xref target="RFC9733" format="default" sectionFormat="of" derivedContent="RFC9733"/> or SZTP <xref target="RFC8572" format="default" sectionFormat="of" derivedContent="RFC8572"/>.  In case the end entity
already possesses certified keys, then some
simplifications/alternatives are possible.</t>
        <t indent="0" pn="section-4.2-3">Having classified the schemes that are supported by this
specification, we can then specify some as mandatory and some as
optional.  The goal is that the mandatory schemes cover a sufficient
number of the cases that will arise in real use, whilst the optional
schemes are available for special cases that arise less frequently.
In this way, we achieve a balance between flexibility and ease of
implementation.</t>
        <t indent="0" pn="section-4.2-4">Further classification of mandatory and optional schemes addressing
different environments is available, e.g., in Appendices <xref target="sect-c" format="counter" sectionFormat="of" derivedContent="C"/> and
<xref target="sect-d" format="counter" sectionFormat="of" derivedContent="D"/> of this specification on managing human user certificates
as well as in the Lightweight CMP Profile <xref target="RFC9483" format="default" sectionFormat="of" derivedContent="RFC9483"/> on fully
automating certificate management in a machine-to-machine and Internet of Things (IoT)
environment. Industry standards such as <xref target="ETSI-3GPP.33.310" format="default" sectionFormat="of" derivedContent="ETSI-3GPP.33.310"/> for
mobile networks and <xref target="UNISIG.Subset-137" format="default" sectionFormat="of" derivedContent="UNISIG.Subset-137"/> for railroad automation have adopted
CMP and defined a series of mandatory schemes for their use cases.</t>
        <t indent="0" pn="section-4.2-5">We will now describe the classification of initial
registration/certification schemes.</t>
        <section anchor="sect-4.2.1" numbered="true" removeInRFC="false" toc="include" pn="section-4.2.1">
          <name slugifiedName="name-criteria-used">Criteria Used</name>
          <section anchor="sect-4.2.1.1" numbered="true" removeInRFC="false" toc="include" pn="section-4.2.1.1">
            <name slugifiedName="name-initiation-of-registration-">Initiation of Registration/Certification</name>
            <t indent="0" pn="section-4.2.1.1-1">In terms of the PKI messages that are produced, we can regard the
initiation of the initial registration/certification exchanges as
occurring wherever the first PKI message relating to the end entity
is produced.  Note that the real-world initiation of the
registration/certification procedure may occur elsewhere (e.g., a
personnel department may telephone an RA operator or use zero-touch
methods like BRSKI <xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/> or SZTP <xref target="RFC8572" format="default" sectionFormat="of" derivedContent="RFC8572"/>).</t>
            <t indent="0" pn="section-4.2.1.1-2">The possible locations are at the end entity, an RA, or a CA.</t>
          </section>
          <section anchor="sect-4.2.1.2" numbered="true" removeInRFC="false" toc="include" pn="section-4.2.1.2">
            <name slugifiedName="name-end-entity-message-origin-a">End Entity Message Origin Authentication</name>
            <t indent="0" pn="section-4.2.1.2-1">The online messages produced by the end entity that requires a
certificate may be authenticated or not.  The requirement here is to
authenticate the origin of any messages from the end entity to the
PKI (CA/RA).</t>
            <t indent="0" pn="section-4.2.1.2-2">In this specification, such authentication is achieved by two different means:</t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-4.2.1.2-3">
              <li pn="section-4.2.1.2-3.1">
                <t indent="0" pn="section-4.2.1.2-3.1.1">symmetric: The PKI (CA/RA) issuing the end entity with a secret value (initial
authentication key) and reference value (used to identify the secret value)
via some out-of-band means.  The initial authentication key can then be used
to protect relevant PKI messages.</t>
              </li>
              <li pn="section-4.2.1.2-3.2">
                <t indent="0" pn="section-4.2.1.2-3.2.1">asymmetric: Using a private key and certificate issued by another PKI trusted
for initial authentication, e.g., an Initial Device Identifier (IDevID) <xref target="IEEE.802.1AR-2018" format="default" sectionFormat="of" derivedContent="IEEE.802.1AR-2018">IEEE 802.1AR</xref>.
The trust establishment in this external PKI is out of scope of this document.</t>
              </li>
            </ul>
            <t indent="0" pn="section-4.2.1.2-4">Thus, we can classify the initial registration/certification scheme
according to whether or not the online 'end entity -&gt; PKI management
entity' messages are authenticated or not.</t>
            <ol type="Note %d:" indent="adaptive" spacing="normal" start="1" pn="section-4.2.1.2-5">
            <li pn="section-4.2.1.2-5.1" derivedCounter="Note 1:">We do not discuss the authentication of the 'PKI management
entity -&gt; end entity' messages here, as this is always <bcp14>REQUIRED</bcp14>.  In any case, it can be
achieved simply once the root-CA public key has been installed at the
end entity's equipment or it can be based on the initial
authentication key.</li>
              <li pn="section-4.2.1.2-5.2" derivedCounter="Note 2:">An initial registration/certification procedure can be secure
where the messages from the end entity are authenticated via some
out-of-band means (e.g., a subsequent visit).</li>
            </ol>
          </section>
          <section anchor="sect-4.2.1.3" numbered="true" removeInRFC="false" toc="include" pn="section-4.2.1.3">
            <name slugifiedName="name-location-of-key-generation">Location of Key Generation</name>
            <t indent="0" pn="section-4.2.1.3-1">In this specification, "key generation" is regarded as occurring
wherever either the public or private component of a key pair first
occurs in a PKIMessage.  Note that this does not preclude a
centralized key generation service by a KGA; the actual key pair <bcp14>MAY</bcp14> have
been
generated elsewhere and transported to the end entity, RA, or CA
using a (proprietary or standardized) key generation request/response
protocol (outside the scope of this specification).</t>
            <t indent="0" pn="section-4.2.1.3-2">Thus, there are three possibilities for the location of "key generation":
the end entity, a KGA, or a CA.</t>
          </section>
          <section anchor="sect-4.2.1.4" numbered="true" removeInRFC="false" toc="include" pn="section-4.2.1.4">
            <name slugifiedName="name-confirmation-of-successful-">Confirmation of Successful Certification</name>
            <t indent="0" pn="section-4.2.1.4-1">Following the creation of a certificate for an end entity,
additional assurance can be gained by having the end entity
explicitly confirm successful receipt of the message containing (or
indicating the creation of) the certificate.  Naturally, this
confirmation message must be protected (based on the initial
symmetric or asymmetric authentication key or other means).</t>
            <t indent="0" pn="section-4.2.1.4-2">This gives two further possibilities: confirmed or not.</t>
          </section>
        </section>
        <section anchor="sect-4.2.2" numbered="true" removeInRFC="false" toc="include" pn="section-4.2.2">
          <name slugifiedName="name-initial-registration-certifi">Initial Registration/Certification Schemes</name>
          <t indent="0" pn="section-4.2.2-1">The criteria above allow for a large number of initial
registration/certification schemes.  Examples of possible initial
registration/certification schemes can be found in the following
subsections.  An entity may support other schemes specified in
profiles of PKIX-CMP, such as Appendices <xref target="sect-c" format="counter" sectionFormat="of" derivedContent="C"/> and <xref target="sect-d" format="counter" sectionFormat="of" derivedContent="D"/> or <xref target="RFC9483" format="default" sectionFormat="of" derivedContent="RFC9483"/>.</t>
          <section anchor="sect-4.2.2.1" numbered="true" removeInRFC="false" toc="include" pn="section-4.2.2.1">
            <name slugifiedName="name-centralized-scheme">Centralized Scheme</name>
            <t indent="0" pn="section-4.2.2.1-1">In terms of the classification above, this scheme is, in some ways,
the simplest possible, where:</t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-4.2.2.1-2">
              <li pn="section-4.2.2.1-2.1">
                <t indent="0" pn="section-4.2.2.1-2.1.1">initiation occurs at the certifying CA;</t>
              </li>
              <li pn="section-4.2.2.1-2.2">
                <t indent="0" pn="section-4.2.2.1-2.2.1">no online message authentication is required;</t>
              </li>
              <li pn="section-4.2.2.1-2.3">
                <t indent="0" pn="section-4.2.2.1-2.3.1">"key generation" occurs at the certifying CA (see <xref target="sect-4.2.1.3" format="default" sectionFormat="of" derivedContent="Section 4.2.1.3"/>); and</t>
              </li>
              <li pn="section-4.2.2.1-2.4">
                <t indent="0" pn="section-4.2.2.1-2.4.1">no confirmation message is required.</t>
              </li>
            </ul>
            <t indent="0" pn="section-4.2.2.1-3">In terms of message flow, this scheme means that the only message
required is sent from the CA to the end entity.  The message must
contain the entire TEE for the end entity.  Some out-of-band means
must be provided to allow the end entity to authenticate the message
received and to decrypt any encrypted values.</t>
          </section>
          <section anchor="sect-4.2.2.2" numbered="true" removeInRFC="false" toc="include" pn="section-4.2.2.2">
            <name slugifiedName="name-basic-authenticated-scheme">Basic Authenticated Scheme</name>
            <t indent="0" pn="section-4.2.2.2-1">In terms of the classification above, this scheme is where:</t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-4.2.2.2-2">
              <li pn="section-4.2.2.2-2.1">
                <t indent="0" pn="section-4.2.2.2-2.1.1">initiation occurs at the end entity;</t>
              </li>
              <li pn="section-4.2.2.2-2.2">
                <t indent="0" pn="section-4.2.2.2-2.2.1">message authentication is required;</t>
              </li>
              <li pn="section-4.2.2.2-2.3">
                <t indent="0" pn="section-4.2.2.2-2.3.1">"key generation" occurs at the end entity (see <xref target="sect-4.2.1.3" format="default" sectionFormat="of" derivedContent="Section 4.2.1.3"/>); and</t>
              </li>
              <li pn="section-4.2.2.2-2.4">
                <t indent="0" pn="section-4.2.2.2-2.4.1">a confirmation message is recommended.</t>
              </li>
            </ul>
            <t indent="0" pn="section-4.2.2.2-3">Note: An Initial Authentication Key (IAK) can be either a symmetric key or
an asymmetric private key with a certificate issued by another PKI trusted
for this purpose.  The establishment of such trust is out of scope of this
	    document.</t>
            <t indent="0" pn="section-4.2.2.2-4">In terms of message flow, the basic authenticated scheme is as
follows:</t>
            <artset pn="section-4.2.2.2-5">
              <artwork type="svg" align="left" pn="section-4.2.2.2-5.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="384" width="552" viewBox="0 0 552 384" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                  <path d="M 24,94 L 96,94" fill="none" stroke="black"/>
                  <path d="M 24,98 L 96,98" fill="none" stroke="black"/>
                  <path d="M 408,94 L 504,94" fill="none" stroke="black"/>
                  <path d="M 408,98 L 504,98" fill="none" stroke="black"/>
                  <path d="M 136,192 L 176,192" fill="none" stroke="black"/>
                  <path d="M 368,192 L 408,192" fill="none" stroke="black"/>
                  <path d="M 136,256 L 176,256" fill="none" stroke="black"/>
                  <path d="M 376,256 L 416,256" fill="none" stroke="black"/>
                  <path d="M 136,304 L 176,304" fill="none" stroke="black"/>
                  <path d="M 376,304 L 416,304" fill="none" stroke="black"/>
                  <path d="M 136,352 L 176,352" fill="none" stroke="black"/>
                  <path d="M 376,352 L 416,352" fill="none" stroke="black"/>
                  <polygon class="arrowhead" points="424,304 412,298.4 412,309.6" fill="black" transform="rotate(0,416,304)"/>
                  <polygon class="arrowhead" points="416,192 404,186.4 404,197.6" fill="black" transform="rotate(0,408,192)"/>
                  <polygon class="arrowhead" points="384,352 372,346.4 372,357.6" fill="black" transform="rotate(180,376,352)"/>
                  <polygon class="arrowhead" points="384,256 372,250.4 372,261.6" fill="black" transform="rotate(180,376,256)"/>
                  <polygon class="arrowhead" points="184,304 172,298.4 172,309.6" fill="black" transform="rotate(0,176,304)"/>
                  <polygon class="arrowhead" points="184,192 172,186.4 172,197.6" fill="black" transform="rotate(0,176,192)"/>
                  <polygon class="arrowhead" points="144,352 132,346.4 132,357.6" fill="black" transform="rotate(180,136,352)"/>
                  <polygon class="arrowhead" points="144,256 132,250.4 132,261.6" fill="black" transform="rotate(180,136,256)"/>
                  <g class="text">
                    <text x="32" y="84">End</text>
                    <text x="76" y="84">Entity</text>
                    <text x="456" y="84">RA/CA</text>
                    <text x="104" y="116">out-of-band</text>
                    <text x="204" y="116">distribution</text>
                    <text x="268" y="116">of</text>
                    <text x="312" y="116">Initial</text>
                    <text x="404" y="116">Authentication</text>
                    <text x="72" y="132">Key</text>
                    <text x="112" y="132">(IAK)</text>
                    <text x="152" y="132">and</text>
                    <text x="208" y="132">reference</text>
                    <text x="272" y="132">value</text>
                    <text x="324" y="132">(RA/CA</text>
                    <text x="364" y="132">-&gt;</text>
                    <text x="392" y="132">end</text>
                    <text x="440" y="132">entity)</text>
                    <text x="32" y="148">Key</text>
                    <text x="92" y="148">generation</text>
                    <text x="52" y="164">Creation</text>
                    <text x="100" y="164">of</text>
                    <text x="168" y="164">certification</text>
                    <text x="256" y="164">request</text>
                    <text x="48" y="180">Protect</text>
                    <text x="112" y="180">request</text>
                    <text x="164" y="180">with</text>
                    <text x="200" y="180">IAK</text>
                    <text x="240" y="196">certification</text>
                    <text x="328" y="196">request</text>
                    <text x="420" y="212">verify</text>
                    <text x="480" y="212">request</text>
                    <text x="424" y="228">process</text>
                    <text x="488" y="228">request</text>
                    <text x="420" y="244">create</text>
                    <text x="484" y="244">response</text>
                    <text x="240" y="260">certification</text>
                    <text x="332" y="260">response</text>
                    <text x="44" y="276">handle</text>
                    <text x="108" y="276">response</text>
                    <text x="44" y="292">create</text>
                    <text x="124" y="292">confirmation</text>
                    <text x="204" y="308">cert</text>
                    <text x="244" y="308">conf</text>
                    <text x="296" y="308">message</text>
                    <text x="420" y="324">verify</text>
                    <text x="500" y="324">confirmation</text>
                    <text x="420" y="340">create</text>
                    <text x="484" y="340">response</text>
                    <text x="204" y="356">conf</text>
                    <text x="240" y="356">ack</text>
                    <text x="300" y="356">(optional)</text>
                    <text x="44" y="372">handle</text>
                    <text x="108" y="372">response</text>
                  </g>
                </svg>
              </artwork>
              <artwork type="ascii-art" align="left" pn="section-4.2.2.2-5.2">
  End Entity                                              RA/CA
  ==========                                      =============
       out-of-band distribution of Initial Authentication
       Key (IAK) and reference value (RA/CA -&gt; end entity)
  Key generation
  Creation of certification request
  Protect request with IAK
                -----&gt; certification request -----&gt;
                                                 verify request
                                                 process request
                                                 create response
                &lt;----- certification response &lt;-----
  handle response
  create confirmation
                -----&gt; cert conf message      -----&gt;
                                                 verify confirmation
                                                 create response
                &lt;----- conf ack (optional)    &lt;-----
  handle response
</artwork>
            </artset>
            <t indent="0" pn="section-4.2.2.2-6">Note: Where verification of the cert confirmation message fails, the RA/CA
<bcp14>MUST</bcp14> revoke the newly issued certificate if it has been published or
otherwise made available.</t>
          </section>
        </section>
      </section>
      <section anchor="sect-4.3" numbered="true" removeInRFC="false" toc="include" pn="section-4.3">
        <name slugifiedName="name-pop-of-private-key">POP of Private Key</name>
        <t indent="0" pn="section-4.3-1">POP is where a PKI management entity (CA/RA)
verifies if an end entity has access to the private key
corresponding to a given public key. The question of whether, and in
what circumstances, POPs add value to a PKI is a debate as old as PKI
itself! See <xref target="sect-8.1" format="default" sectionFormat="of" derivedContent="Section 8.1"/> for a further discussion on the necessity
of POP in PKI.</t>
        <t indent="0" pn="section-4.3-2">The PKI management operations specified here make it possible
for an end entity to prove to a CA/RA that it has possession of (i.e., is able
to use) the private key corresponding to the public key for which a
certificate is requested (see <xref target="sect-5.2.8" format="default" sectionFormat="of" derivedContent="Section 5.2.8"/> for different POP methods).  A given CA/RA is free to choose how to
enforce POP (e.g., out-of-band procedural means versus PKIX-CMP
in-band messages) in its certification exchanges (i.e., this may be a
policy issue).  However, it is <bcp14>REQUIRED</bcp14> that CAs/RAs <bcp14>MUST</bcp14> enforce POP
by some means because there are currently many non-PKIX operational
protocols in use (various electronic mail protocols are one example)
that do not explicitly check the binding between the end entity and
the private key.  Until operational protocols that do verify the
binding (for signature, encryption, key agreement, and KEM key pairs)
exist, and are ubiquitous, this binding can only be assumed to have
been verified by the CA/RA.  Therefore, if the binding is not
verified by the CA/RA, certificates in the Internet PKI
end up being somewhat less meaningful.</t>
        <t indent="0" pn="section-4.3-3">POP is accomplished in different ways depending upon the type of key
for which a certificate is requested.  If a key can be used for
multiple purposes (e.g., an RSA key), then any appropriate method <bcp14>MAY</bcp14>
be used (e.g., a key that may be used for signing, as well as other
purposes, <bcp14>MUST NOT</bcp14> be sent to the CA/RA in order to prove
possession unless archival of the private key is explicitly desired).</t>
        <t indent="0" pn="section-4.3-4">This specification explicitly allows for cases where an end entity
supplies the relevant proof to an RA and the RA subsequently attests
to the CA that the required proof has been received (and validated!).
For example, an end entity wishing to have a signing key certified
could send the appropriate signature to the RA, which then simply
notifies the relevant CA that the end entity has supplied the
required proof.  Of course, such a situation may be disallowed by
some policies (e.g., CAs may be the only entities permitted to verify
POP during certification).</t>
        <section anchor="sect-4.3.1" numbered="true" removeInRFC="false" toc="include" pn="section-4.3.1">
          <name slugifiedName="name-signature-keys">Signature Keys</name>
          <t indent="0" pn="section-4.3.1-1">For signature keys, the end entity can sign a value to prove
possession of the private key; see <xref target="sect-5.2.8.2" format="default" sectionFormat="of" derivedContent="Section 5.2.8.2"/>.</t>
        </section>
        <section anchor="sect-4.3.2" numbered="true" removeInRFC="false" toc="include" pn="section-4.3.2">
          <name slugifiedName="name-encryption-keys">Encryption Keys</name>
          <t indent="0" pn="section-4.3.2-1">For encryption keys, the end entity can provide the private key to
the CA/RA (e.g., for archiving), see <xref target="sect-5.2.8.3.1" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.1"/>, or can be required to decrypt a value in order to prove
possession of the private key.  Decrypting a
value can be achieved either directly (see <xref target="sect-5.2.8.3.3" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.3"/>) or indirectly (see <xref target="sect-5.2.8.3.2" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.2"/>).</t>
          <t indent="0" pn="section-4.3.2-2">The direct method is for the RA/CA to issue a random challenge to
which an immediate response by the end entity is required.</t>
          <t indent="0" pn="section-4.3.2-3">The indirect method is to issue a certificate that is encrypted for
the end entity (and have the end entity demonstrate its ability to
decrypt this certificate in the confirmation message).  This allows a
CA to issue a certificate in a form that can only be used by the
intended end entity.</t>
          <t indent="0" pn="section-4.3.2-4">This specification encourages use of the indirect method because it
requires no extra messages to be sent (i.e., the proof can be
demonstrated using the {request, response, confirmation} triple of
messages).</t>
        </section>
        <section anchor="sect-4.3.3" numbered="true" removeInRFC="false" toc="include" pn="section-4.3.3">
          <name slugifiedName="name-key-agreement-keys">Key Agreement Keys</name>
          <t indent="0" pn="section-4.3.3-1">For key agreement keys, the end entity and the PKI management entity
(i.e., CA or RA) must establish a shared secret key in order to prove
that the end entity has possession of the private key.</t>
          <t indent="0" pn="section-4.3.3-2">Note that this need not impose any restrictions on the keys that can
be certified by a given CA.  In particular, for Diffie-Hellman (DH) keys,
the end entity may freely choose its algorithm parameters provided
that the CA can generate a short-term (or one-time) key pair with the
appropriate parameters when necessary.</t>
        </section>
        <section anchor="sect-4.3.4" numbered="true" removeInRFC="false" toc="include" pn="section-4.3.4">
          <name slugifiedName="name-kem-keys">KEM Keys</name>
          <t indent="0" pn="section-4.3.4-1">For KEM keys, the end entity can provide the private key to
the CA/RA (e.g., for archiving), see <xref target="sect-5.2.8.3.1" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.1"/>, or can be required to decrypt
a value in order to prove possession of the private key.
Decrypting a value can be achieved either directly (see <xref target="sect-5.2.8.3.3" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.3"/>) or indirectly (see <xref target="sect-5.2.8.3.2" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.2"/>).</t>
          <t indent="0" pn="section-4.3.4-2">Note: A definition of KEMs can be found in <xref section="1" sectionFormat="of" target="RFC9629" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9629#section-1" derivedContent="RFC9629"/>.</t>
          <t indent="0" pn="section-4.3.4-3">The direct method is for the RA/CA to issue a random challenge to which an
immediate response by the end entity is required.</t>
          <t indent="0" pn="section-4.3.4-4">The indirect method is to issue a certificate that is encrypted for the end entity using a shared secret key derived from a key encapsulated using the public key (and have the end entity demonstrate its ability to use its private key for decapsulation of the KEM ciphertext, derive the shared secret key, decrypt this certificate, and provide a hash of the certificate in the confirmation message).  This allows a CA to issue a certificate in a form that can only be used by the intended end entity.</t>
          <t indent="0" pn="section-4.3.4-5">This specification encourages use of the indirect method because it requires
no extra messages to be sent (i.e., the proof can be demonstrated using the
{request, response, confirmation} triple of messages).</t>
          <t indent="0" pn="section-4.3.4-6">A certification request message for a KEM certificate <bcp14>SHALL</bcp14> use POPOPrivKey by using the keyEncipherment choice of ProofOfPossession (see <xref target="sect-5.2.8" format="default" sectionFormat="of" derivedContent="Section 5.2.8"/>) in the popo field of CertReqMsg as long as no KEM-specific choice is available.</t>
        </section>
      </section>
      <section anchor="sect-4.4" numbered="true" removeInRFC="false" toc="include" pn="section-4.4">
        <name slugifiedName="name-root-ca-key-update">Root CA Key Update</name>
        <t indent="0" pn="section-4.4-1">This discussion only applies to CAs that are directly trusted by some
end entities.  Recognizing whether a self-signed or non-self-signed
CA is supposed to be directly trusted for some end entities is a
matter of CA policy and end entity configuration. Thus, this is beyond
the scope of this document.</t>
        <t indent="0" pn="section-4.4-2">The basis of the procedure described here is that the CA protects its
new public key using its previous private key and vice versa. Thus,
when a CA updates its key pair, it may generate two link certificates:
	"old with new" and "new with old".</t>
        <t indent="0" pn="section-4.4-3">Note: The usage of link certificates has been shown to be very
specific for each use case, and no assumptions are done on this aspect.
RootCaKeyUpdateContent is updated to specify these link certificates
as optional.</t>
        <t indent="0" pn="section-4.4-4">Note: When an LDAP directory is used to publish root CA updates, the
old and new root CA certificates together with the two link
certificates are stored as cACertificate attribute values.</t>
        <t indent="0" pn="section-4.4-5">When a CA changes its key pair, those entities who have acquired the
old CA public key via "out-of-band" means are most affected.  These
end entities need to acquire the new CA public key in a trusted way.
This may be achieved "out-of-band" by using a repository or by
using online messages also containing the link certificates
"new with old". Once the end entity acquired and properly verified
the new CA public key, it must load the new trust anchor information
into its trusted store.</t>
        <t indent="0" pn="section-4.4-6">The data structure used to protect the new and old CA public keys is
typically a standard X.509v3 certificate (which may also
contain extensions).  There are no new data structures required.</t>
        <t indent="0" pn="section-4.4-7">Note: Sometimes self-signed root CA certificates do not make use of
X.509v3 extensions and may be X.509v1 certificates. Therefore, a
root CA key update must be able to work for version 1 certificates.
The use of the X.509v3 KeyIdentifier extension is recommended for
easier path building.</t>
        <t indent="0" pn="section-4.4-8">Note:  While the scheme could be generalized to cover cases where
the CA updates its key pair more than once during the validity period
of one of its end entities' certificates, this generalization seems
of dubious value.  Not having this generalization simply means that
the validity periods of certificates issued with the old CA key pair
cannot exceed the end of the "old with new" certificate validity
period.</t>
        <t indent="0" pn="section-4.4-9">Note:  This scheme offers a mechanism to ensures that end entities
will acquire the new CA public key, at the latest by the expiry of
the last certificate they owned that was signed with the old CA
private key.  Certificate and/or key update operations occurring at
other times do not necessarily require this (depending on the end entity's equipment).</t>
        <t indent="0" pn="section-4.4-10">Note:  In practice, a new root CA may have a slightly different subject
Distinguished Name (DN), e.g., indicating a generation identifier like the year of issuance or
a version number, for instance, in an Organizational Unit (OU) element.  How to bridge trust to
the new root CA certificate in a CA DN change or a cross-certificate scenario
is out of scope for this document.</t>
        <section anchor="sect-4.4.1" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.1">
          <name slugifiedName="name-ca-operator-actions">CA Operator Actions</name>
          <t indent="0" pn="section-4.4.1-1">To change the key of the CA, the CA operator does the following:</t>
          <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-4.4.1-2"><li pn="section-4.4.1-2.1" derivedCounter="1.">
              <t indent="0" pn="section-4.4.1-2.1.1">Generate a new key pair.</t>
            </li>
            <li pn="section-4.4.1-2.2" derivedCounter="2.">
              <t indent="0" pn="section-4.4.1-2.2.1">Create a certificate containing the new CA public key signed with
  the new private key or by the private key of some other CA (the
  "new with new" certificate).</t>
            </li>
            <li pn="section-4.4.1-2.3" derivedCounter="3.">
              <t indent="0" pn="section-4.4.1-2.3.1">Optionally: Create a link certificate containing the new CA public
  key signed with the old private key (the "new with old"
  certificate).</t>
            </li>
            <li pn="section-4.4.1-2.4" derivedCounter="4.">
              <t indent="0" pn="section-4.4.1-2.4.1">Optionally: Create a link certificate containing the old CA public
  key signed with the new private key (the "old with new"
  certificate).</t>
            </li>
            <li pn="section-4.4.1-2.5" derivedCounter="5.">
              <t indent="0" pn="section-4.4.1-2.5.1">Publish these new certificates so that end entities may acquire
  it, e.g., using a repository or RootCaKeyUpdateContent.</t>
            </li>
          </ol>
          <t indent="0" pn="section-4.4.1-3">The old CA private key is then no longer required when the validity
of the "old with old" certificate ended. However, the old
CA public key will remain in use for validating the "new with old"
link certificate until the new CA public key is loaded into the
trusted store. The old CA public key is no longer required (other
than for non-repudiation) when all end entities of this CA have
securely acquired and stored the new CA public key.</t>
          <t indent="0" pn="section-4.4.1-4">The "new with new" certificate must have a validity period with a notBefore
time that is before the notAfter time of the "old with old" certificate and
a notAfter time that is after the notBefore time of the next update of this
certificate.</t>
          <t indent="0" pn="section-4.4.1-5">The "new with old" certificate must have a validity period with the same
notBefore time as the "new with new" certificate and a notAfter time by which
all end entities of this CA will securely possess the new CA public key (at
the latest, at the notAfter time of the "old with old" certificate).</t>
          <t indent="0" pn="section-4.4.1-6">The "old with new" certificate must have a validity period with the same
notBefore and notAfter time as the "old with old" certificate.</t>
          <t indent="0" pn="section-4.4.1-7">Note:  Further operational considerations on transition from one root CA
self-signed certificate to the next is available in <xref section="5" target="RFC8649" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc8649#section-5" derivedContent="RFC8649"/>.</t>
        </section>
        <section anchor="sect-4.4.2" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.2">
          <name slugifiedName="name-verifying-certificates">Verifying Certificates</name>
          <t indent="0" pn="section-4.4.2-1">Normally when verifying a signature, the verifier verifies (among
other things) the certificate containing the public key of the
signer.  However, once a CA is allowed to update its key, there are a
range of new possibilities.  These are shown in the table below.</t>
          <table align="center" pn="table-1">
            <thead>
              <tr>
                <th align="left" colspan="1" rowspan="1"/>
                <th align="left" colspan="1" rowspan="1">Verifier's TEE contains NEW public key</th>
                <th align="left" colspan="1" rowspan="1">Verifier's TEE contains OLD public key</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <th align="left" colspan="1" rowspan="1">Signer's certificate is protected using NEW key pair</th>
                <td align="left" colspan="1" rowspan="1">Case 1: The verifier can directly verify the certificate.</td>
                <td align="left" colspan="1" rowspan="1">Case 2: The verifier is missing the NEW public key.</td>
              </tr>
              <tr>
                <th align="left" colspan="1" rowspan="1">Signer's certificate is protected using OLD key pair</th>
                <td align="left" colspan="1" rowspan="1">Case 3: The verifier is missing the OLD public key.</td>
                <td align="left" colspan="1" rowspan="1">Case 4: The verifier can directly verify the certificate.</td>
              </tr>
            </tbody>
          </table>
          <section anchor="sect-4.4.2.1" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.2.1">
            <name slugifiedName="name-verification-in-cases-1-and">Verification in Cases 1 and 4</name>
            <t indent="0" pn="section-4.4.2.1-1">In these cases, the verifier has a local copy of the CA public key
that can be used to verify the certificate directly.  This is the
same as the situation where no key change has occurred.</t>
          </section>
          <section anchor="sect-4.4.2.2" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.2.2">
            <name slugifiedName="name-verification-in-case-2">Verification in Case 2</name>
            <t indent="0" pn="section-4.4.2.2-1">In case 2, the verifier must get access to the new public key of the
CA. Case 2 will arise when the CA operator has issued the verifier's
certificate, then changed the CA's key, and then issued the signer's
certificate; so it is quite a typical case.</t>
            <t indent="0" pn="section-4.4.2.2-2">The verifier does the following:</t>
            <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-4.4.2.2-3"><li pn="section-4.4.2.2-3.1" derivedCounter="1.">
                <t indent="0" pn="section-4.4.2.2-3.1.1">Get the "new with new" and "new with old" certificates. The
  location of where to retrieve these certificates may be available in
  the authority information access extension of the "old with old"
  certificate (see the access method for caIssuers in <xref section="4.2.2.1" target="RFC5280" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.2.2.1" derivedContent="RFC5280"/>), or it may be locally configured.  </t>
                <ol spacing="normal" type="a" indent="adaptive" start="1" pn="section-4.4.2.2-3.1.2"><li pn="section-4.4.2.2-3.1.2.1" derivedCounter="a.">
                    <t indent="0" pn="section-4.4.2.2-3.1.2.1.1">If a repository is available, look up the certificates in the
   caCertificate attribute.</t>
                  </li>
                  <li pn="section-4.4.2.2-3.1.2.2" derivedCounter="b.">
                    <t indent="0" pn="section-4.4.2.2-3.1.2.2.1">If an HTTP or FTP server is available, pick the certificates
   from the "certs-only" CMS message.</t>
                  </li>
                  <li pn="section-4.4.2.2-3.1.2.3" derivedCounter="c.">
                    <t indent="0" pn="section-4.4.2.2-3.1.2.3.1">If a CMP server is available, request the certificates using
   the root CA update the general message (see <xref target="sect-5.3.19.15" format="default" sectionFormat="of" derivedContent="Section 5.3.19.15"/>).</t>
                  </li>
                  <li pn="section-4.4.2.2-3.1.2.4" derivedCounter="d.">
                    <t indent="0" pn="section-4.4.2.2-3.1.2.4.1">Otherwise, get the certificates "out-of-band" using any
   trustworthy mechanism.</t>
                  </li>
                </ol>
              </li>
              <li pn="section-4.4.2.2-3.2" derivedCounter="2.">
                <t indent="0" pn="section-4.4.2.2-3.2.1">If the certificates are received, check that the validity periods
  and the subject and issuer fields match. Verify the signatures
  using the old root CA key (which the verifier has locally).</t>
              </li>
              <li pn="section-4.4.2.2-3.3" derivedCounter="3.">
                <t indent="0" pn="section-4.4.2.2-3.3.1">If all checks are successful, securely store the new trust anchor
  information and validate the signer's certificate.</t>
              </li>
            </ol>
          </section>
          <section anchor="sect-4.4.2.3" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.2.3">
            <name slugifiedName="name-verification-in-case-3">Verification in Case 3</name>
            <t indent="0" pn="section-4.4.2.3-1">In case 3, the verifier must get access to the old public key of the
CA. Case 3 will arise when the CA operator has issued the signer's
certificate, then changed the key, and then issued the verifier's
certificate.</t>
            <t indent="0" pn="section-4.4.2.3-2">The verifier does the following:</t>
            <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-4.4.2.3-3"><li pn="section-4.4.2.3-3.1" derivedCounter="1.">
                <t indent="0" pn="section-4.4.2.3-3.1.1">Get the "old with new" certificate. The location of where to retrieve
  these certificates may be available in the authority
  information access extension of the "new with new" certificate (see
  caIssuers access method in <xref section="4.2.2.1" target="RFC5280" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.2.2.1" derivedContent="RFC5280"/>), or it
  may be locally configured.  </t>
                <ol spacing="normal" type="a" indent="adaptive" start="1" pn="section-4.4.2.3-3.1.2"><li pn="section-4.4.2.3-3.1.2.1" derivedCounter="a.">
                    <t indent="0" pn="section-4.4.2.3-3.1.2.1.1">If a repository is available, look up the certificate in the
   caCertificate attribute.</t>
                  </li>
                  <li pn="section-4.4.2.3-3.1.2.2" derivedCounter="b.">
                    <t indent="0" pn="section-4.4.2.3-3.1.2.2.1">If an HTTP or FTP server is available, pick the certificate
   from the "certs-only" CMS message.</t>
                  </li>
                  <li pn="section-4.4.2.3-3.1.2.3" derivedCounter="c.">
                    <t indent="0" pn="section-4.4.2.3-3.1.2.3.1">If a CMP server and an untrusted copy of the old root CA
   certificate are available (e.g., the signer provided it in-band
   in the CMP extraCerts filed), request the certificate using the
   root CA update the general message (see <xref target="sect-5.3.19.15" format="default" sectionFormat="of" derivedContent="Section 5.3.19.15"/>).</t>
                  </li>
                  <li pn="section-4.4.2.3-3.1.2.4" derivedCounter="d.">
                    <t indent="0" pn="section-4.4.2.3-3.1.2.4.1">Otherwise, get the certificate "out-of-band" using any
   trustworthy mechanism.</t>
                  </li>
                </ol>
              </li>
              <li pn="section-4.4.2.3-3.2" derivedCounter="2.">
                <t indent="0" pn="section-4.4.2.3-3.2.1">If the certificate is received, check that the validity periods
  and the subject and issuer fields match. Verify the signatures
  using the new root CA key (which the verifier has locally).</t>
              </li>
              <li pn="section-4.4.2.3-3.3" derivedCounter="3.">
                <t indent="0" pn="section-4.4.2.3-3.3.1">If all checks were successful, securely store the old trust anchor
  information and validate the signer's certificate.</t>
              </li>
            </ol>
          </section>
        </section>
        <section anchor="sect-4.4.3" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.3">
          <name slugifiedName="name-revocation-change-of-the-ca">Revocation - Change of the CA Key</name>
          <t indent="0" pn="section-4.4.3-1">As we saw above, the verification of a certificate becomes more
complex once the CA is allowed to change its key.  This is also true
for revocation checks, as the CA may have signed the CRL using a newer
private key than the one within the user's TEE.</t>
          <t indent="0" pn="section-4.4.3-2">The analysis of the alternatives is the same as for certificate
verification.</t>
        </section>
      </section>
      <section anchor="sect-4.5" numbered="true" removeInRFC="false" toc="include" pn="section-4.5">
        <name slugifiedName="name-eku-for-pki-entities">EKU for PKI Entities</name>
        <t indent="0" pn="section-4.5-1">The EKU extension indicates the purposes for which the
certified key pair may be used. Therefore, it restricts the use of a certificate
to specific applications.</t>
        <t indent="0" pn="section-4.5-2">A CA may want to delegate parts of its duties to other PKI management entities.
This section provides a mechanism to both prove this delegation and enable
automated means for checking the authorization of this delegation. Such delegation
may also be expressed by other means, e.g., explicit configuration.</t>
        <t indent="0" pn="section-4.5-3">To offer automatic validation for the delegation of a role by a CA to another
entity, the certificates used for CMP message protection or signed data for
central key generation <bcp14>MUST</bcp14> be issued by the delegating CA and <bcp14>MUST</bcp14> contain
the respective EKUs.  This proves that the delegating CA authorized this entity to act in the given role, as described below.</t>
        <t indent="0" pn="section-4.5-4">The OIDs to be used for these EKUs are:</t>
        <sourcecode type="asn.1" markers="false" pn="section-4.5-5">
  id-kp-cmcCA OBJECT IDENTIFIER ::= {
     iso(1) identified-organization(3) dod(6) internet(1)
     security(5) mechanisms(5) pkix(7) kp(3) 27 }

  id-kp-cmcRA OBJECT IDENTIFIER ::= {
     iso(1) identified-organization(3) dod(6) internet(1)
     security(5) mechanisms(5) pkix(7) kp(3) 28 }

  id-kp-cmKGA OBJECT IDENTIFIER ::= {
     iso(1) identified-organization(3) dod(6) internet(1)
     security(5) mechanisms(5) pkix(7) kp(3) 32 }
</sourcecode>
        <t indent="0" pn="section-4.5-6">Note: <xref section="2.10" target="RFC6402" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc6402#section-2.10" derivedContent="RFC6402"/> specifies OIDs for a
	Certificate Management over CMS (CMC) CA and a CMC RA.
As the functionality of a CA and
RA is not specific to any protocol used for managing certificates (such as CMC or CMP),
these EKUs are reused by CMP.</t>
        <t indent="0" pn="section-4.5-7">The meaning of the id-kp-cmKGA EKU is as follows:</t>
        <dl spacing="normal" newline="false" indent="3" pn="section-4.5-8">
          <dt pn="section-4.5-8.1">CMP KGA:</dt>
          <dd pn="section-4.5-8.2">
            <t indent="0" pn="section-4.5-8.2.1">CMP KGAs are CAs or are identified by the id-kp-cmKGA
EKU.  The CMP KGA knows the private key it generated on behalf
of the end entity.  This is a very sensitive service and needs specific authorization,
which by default is with the CA certificate itself.  The CA may delegate
its authorization by placing the id-kp-cmKGA EKU in the certificate
used to authenticate the origin of the generated private key. The authorization
may also be determined through local configuration of the end entity.</t>
          </dd>
        </dl>
      </section>
    </section>
    <section anchor="sect-5" numbered="true" removeInRFC="false" toc="include" pn="section-5">
      <name slugifiedName="name-data-structures">Data Structures</name>
      <t indent="0" pn="section-5-1">This section contains descriptions of the data structures required
for PKI management messages. <xref target="sect-6" format="default" sectionFormat="of" derivedContent="Section 6"/> describes constraints on
their values and the sequence of events for each of the various PKI
management operations.</t>
      <section anchor="sect-5.1" numbered="true" removeInRFC="false" toc="include" pn="section-5.1">
        <name slugifiedName="name-overall-pki-message">Overall PKI Message</name>
        <t indent="0" pn="section-5.1-1">All of the messages used in this specification for the purposes of PKI management
use the following structure:</t>
        <sourcecode type="asn.1" markers="false" pn="section-5.1-2">
  PKIMessage ::= SEQUENCE {
     header           PKIHeader,
     body             PKIBody,
     protection   [0] PKIProtection OPTIONAL,
     extraCerts   [1] SEQUENCE SIZE (1..MAX) OF CMPCertificate
                       OPTIONAL
  }

  PKIMessages ::= SEQUENCE SIZE (1..MAX) OF PKIMessage
</sourcecode>
        <t indent="0" pn="section-5.1-3">The PKIHeader contains information that is common to many PKI
messages.</t>
        <t indent="0" pn="section-5.1-4">The PKIBody contains message-specific information.</t>
        <t indent="0" pn="section-5.1-5">The PKIProtection, when used, contains bits that protect the PKI
message.</t>
        <t indent="0" pn="section-5.1-6">The extraCerts field can contain certificates that may be useful to
the recipient.  For example, this can be used by a CA or RA to
present an end entity with certificates that it needs to verify its
own new certificate (for example, if the CA that issued the end entity's
certificate is not a root CA for the end entity).  Note that
this field does not necessarily contain a certification path; the
recipient may have to sort, select from, or otherwise process the
extra certificates in order to use them.</t>
        <section anchor="sect-5.1.1" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.1">
          <name slugifiedName="name-pki-message-header">PKI Message Header</name>
          <t indent="0" pn="section-5.1.1-1">All PKI messages require some header information for addressing and
transaction identification.  Some of this information will also be
present in a transport-specific envelope.  However, if the PKI
message is protected, then this information is also protected (i.e.,
we make no assumption about secure transport).</t>
          <t indent="0" pn="section-5.1.1-2">The following data structure is used to contain this information:</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.1.1-3">
  PKIHeader ::= SEQUENCE {
     pvno                INTEGER     { cmp1999(1), cmp2000(2),
                                       cmp2021(3) },
     sender              GeneralName,
     recipient           GeneralName,
     messageTime     [0] GeneralizedTime         OPTIONAL,
     protectionAlg   [1] AlgorithmIdentifier{ALGORITHM, {...}}
                         OPTIONAL,
     senderKID       [2] KeyIdentifier           OPTIONAL,
     recipKID        [3] KeyIdentifier           OPTIONAL,
     transactionID   [4] OCTET STRING            OPTIONAL,
     senderNonce     [5] OCTET STRING            OPTIONAL,
     recipNonce      [6] OCTET STRING            OPTIONAL,
     freeText        [7] PKIFreeText             OPTIONAL,
     generalInfo     [8] SEQUENCE SIZE (1..MAX) OF
                         InfoTypeAndValue     OPTIONAL
  }

  PKIFreeText ::= SEQUENCE SIZE (1..MAX) OF UTF8String
</sourcecode>
          <t indent="0" pn="section-5.1.1-4">The usage of the protocol version number (pvno) is described in <xref target="sect-7" format="default" sectionFormat="of" derivedContent="Section 7"/>.</t>
          <t indent="0" pn="section-5.1.1-5">The sender field contains the name of the sender of the PKIMessage.
This name (in conjunction with senderKID, if supplied) should be
sufficient to indicate the key to use to verify the protection on the
message.  If nothing about the sender is known to the sending entity
(e.g., in the initial request message, where the end entity may not know
its own DN, email name, IP address, etc.), then
the "sender" field <bcp14>MUST</bcp14> contain a "NULL-DN" value in the directoryName choice.
A "NULL-DN" is a SEQUENCE OF relative DNs of zero length and is encoded as 0x3000.
In such a case, the senderKID field <bcp14>MUST</bcp14> hold an identifier (i.e., a reference
number) that indicates to the receiver the appropriate shared secret
information to use to verify the message.</t>
          <t indent="0" pn="section-5.1.1-6">The recipient field contains the name of the recipient of the
PKIMessage.  This name (in conjunction with recipKID, if supplied)
should be usable to verify the protection on the message.</t>
          <t indent="0" pn="section-5.1.1-7">The protectionAlg field specifies the algorithm used to protect the
message.  If no protection bits are supplied (note that PKIProtection
is <bcp14>OPTIONAL</bcp14>), then this field <bcp14>MUST</bcp14> be omitted; if protection bits are
supplied, then this field <bcp14>MUST</bcp14> be supplied.</t>
          <t indent="0" pn="section-5.1.1-8">senderKID and recipKID are usable to indicate which keys have been
used to protect the message (recipKID will normally only be required
where protection of the message uses DH or Elliptic Curve Diffie-Hellman (ECDH) keys).
These fields <bcp14>MUST</bcp14> be used if required to uniquely identify a key
(e.g., if more than one key is associated with a given sender name).
The senderKID <bcp14>SHOULD</bcp14> be used in any case.</t>
          <t indent="0" pn="section-5.1.1-9">Note: The recommendation of using senderKID has changed since <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/>,
where it was recommended to be omitted if not needed to identify the protection
key.</t>
          <t indent="0" pn="section-5.1.1-10">The transactionID field within the message header is to be used to
allow the recipient of a message to correlate this with an ongoing
transaction.  This is needed for all transactions that consist of
more than just a single request/response pair.  For transactions that
consist of a single request/response pair, the rules are as follows.
A client <bcp14>MUST</bcp14> populate the transactionID field if the message
contains an infoValue of type KemCiphertextInfo (see <xref target="sect-5.1.3.4" format="default" sectionFormat="of" derivedContent="Section 5.1.3.4"/>). In all other cases,
the client <bcp14>MAY</bcp14> populate the transactionID field of the request.  If a
server receives such a request that has the transactionID field set,
then it <bcp14>MUST</bcp14> set the transactionID field of the response to the same
value.  If a server receives such request with a missing
transactionID field, then it <bcp14>MUST</bcp14> populate the transactionID field if
the message contains a KemCiphertextInfo field. In all other cases,
the server <bcp14>MAY</bcp14> set the transactionID field of the response.</t>
          <t indent="0" pn="section-5.1.1-11">For transactions that consist of more than just a single
request/response pair, the rules are as follows.  If the message
contains an infoValue of type KemCiphertextInfo, the client
<bcp14>MUST</bcp14> generate a transactionID; otherwise, the client <bcp14>SHOULD</bcp14>
generate a transactionID for the first request.  If a server receives
such a request that has the transactionID field set, then it <bcp14>MUST</bcp14> set
the transactionID field of the response to the same value.  If a
server receives such request with a missing transactionID field, then
it <bcp14>MUST</bcp14> populate the transactionID field of the response with a
server-generated ID.  Subsequent requests and responses <bcp14>MUST</bcp14> all set
the transactionID field to the thus established value.  In all cases
where a transactionID is being used, a given client <bcp14>MUST NOT</bcp14> have
more than one transaction with the same transactionID in progress at
any time (to a given server).  Servers are free to require uniqueness
of the transactionID or not, as long as they are able to correctly
associate messages with the corresponding transaction.  Typically,
this means that a server will require the {client, transactionID}
tuple to be unique, or even the transactionID alone to be unique, if
it cannot distinguish clients based on any transport-level information.
A server receiving the first message of a transaction (which requires
more than a single request/response pair) that contains a
transactionID that does not allow it to meet the above constraints
(typically because the transactionID is already in use) <bcp14>MUST</bcp14> send
back an ErrorMsgContent with a PKIFailureInfo of transactionIdInUse.
It is <bcp14>RECOMMENDED</bcp14> that the clients fill the transactionID field with
128 bits of (pseudo-)random data for the start of a transaction to
reduce the probability of having the transactionID in use at the
server.</t>
          <t indent="0" pn="section-5.1.1-12">The senderNonce and recipNonce fields protect the PKIMessage against
replay attacks.  The senderNonce will typically be 128 bits of
(pseudo-)random data generated by the sender, whereas the recipNonce
is copied from the senderNonce field of the previous message in the
transaction.</t>
          <t indent="0" pn="section-5.1.1-13">The messageTime field contains the time at which the sender created
the message.  This may be useful to allow end entities to
correct/check their local time for consistency with the time on a
	  central system.</t>
          <t indent="0" pn="section-5.1.1-14">The freeText field may be used to send a human-readable message to
the recipient (in any number of languages).  Each UTF8String <bcp14>MAY</bcp14>
include a language tag <xref target="RFC5646" format="default" sectionFormat="of" derivedContent="RFC5646"/>  to indicate the language of the
contained text. The first language used in this sequence indicates
the desired language for replies.</t>
          <t indent="0" pn="section-5.1.1-15">The generalInfo field may be used to send machine-processable
additional data to the recipient.  The following generalInfo
extensions are defined and <bcp14>MAY</bcp14> be supported.</t>
          <section anchor="sect-5.1.1.1" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.1.1">
            <name slugifiedName="name-implicitconfirm">ImplicitConfirm</name>
            <t indent="0" pn="section-5.1.1.1-1">This is used by the end entity to inform the CA or RA that it does not wish to send
a certificate confirmation for issued certificates.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.1.1.1-2">
  id-it-implicitConfirm OBJECT IDENTIFIER ::= {id-it 13}
  ImplicitConfirmValue ::= NULL
</sourcecode>
            <t indent="0" pn="section-5.1.1.1-3">If the CA grants the request to the end entity, it <bcp14>MUST</bcp14> put the same
extension in the PKIHeader of the response.  If the end entity does not find
the extension in the response, it <bcp14>MUST</bcp14> send the certificate
confirmation.</t>
          </section>
          <section anchor="sect-5.1.1.2" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.1.2">
            <name slugifiedName="name-confirmwaittime">ConfirmWaitTime</name>
            <t indent="0" pn="section-5.1.1.2-1">This is used by the CA or RA to inform the end entity how long it intends to wait
for the certificate confirmation before revoking the certificate and
deleting the transaction.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.1.1.2-2">
  id-it-confirmWaitTime OBJECT IDENTIFIER ::= {id-it 14}
  ConfirmWaitTimeValue ::= GeneralizedTime
</sourcecode>
          </section>
          <section anchor="sect-5.1.1.3" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.1.3">
            <name slugifiedName="name-origpkimessage">OrigPKIMessage</name>
            <t indent="0" pn="section-5.1.1.3-1">An RA <bcp14>MAY</bcp14> include the original PKIMessage from the end entity in the generalInfo
field of the PKIHeader of a PKIMessage.  This is used by the RA to inform
the CA of the original PKIMessage that it received from the end entity and modified
in some way (e.g., added or modified particular field values or added new
extensions) before forwarding the new PKIMessage.  This
accommodates, for example, cases in which the CA wishes to check the message origin, the POP, or other
information on the original end entity message.</t>
            <t indent="0" pn="section-5.1.1.3-2">Note: If the changes made by
the RA to the original PKIMessage break the POP of a certificate request,
the RA can set the popo field of the new PKIMessage to raVerified (see <xref target="sect-5.2.8.4" format="default" sectionFormat="of" derivedContent="Section 5.2.8.4"/>).</t>
            <t indent="0" pn="section-5.1.1.3-3">Unless the OrigPKIMessage infoValue is in the header of a nested message, it <bcp14>MUST</bcp14> contain exactly one PKIMessage. The contents of OrigPKIMessage infoValue in the header of a nested message <bcp14>MAY</bcp14> contain multiple PKIMessage structures, which <bcp14>MUST</bcp14> be in the same order as the PKIMessage structures in PKIBody.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.1.1.3-4">
  id-it-origPKIMessage OBJECT IDENTIFIER ::= {id-it 15}
  OrigPKIMessageValue ::= PKIMessages
</sourcecode>
          </section>
          <section anchor="sect-5.1.1.4" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.1.4">
            <name slugifiedName="name-certprofile">CertProfile</name>
            <t indent="0" pn="section-5.1.1.4-1">This is used by the end entity to indicate specific certificate profiles, e.g., when
requesting a new certificate or a certificate request template (see <xref target="sect-5.3.19.16" format="default" sectionFormat="of" derivedContent="Section 5.3.19.16"/>).</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.1.1.4-2">
  id-it-certProfile OBJECT IDENTIFIER ::= {id-it 21}
  CertProfileValue ::= SEQUENCE SIZE (1..MAX) OF UTF8String
</sourcecode>
            <t indent="0" pn="section-5.1.1.4-3">When used in a p10cr message, the CertProfileValue sequence <bcp14>MUST NOT</bcp14> contain multiple certificate profile names. When used in an ir/cr/kur/genm message, the CertProfileValue sequence <bcp14>MUST NOT</bcp14> contain more certificate profile names than the number of CertReqMsg or GenMsgContent InfoTypeAndValue elements contained in the message body.</t>
            <t indent="0" pn="section-5.1.1.4-4">The certificate profile names in the CertProfileValue sequence relate to the CertReqMsg or GenMsgContent InfoTypeAndValue elements in the given order. An empty string means no certificate profile name is associated with the respective CertReqMsg or GenMsgContent InfoTypeAndValue element. If the CertProfileValue sequence contains less certificate profile entries than CertReqMsg or GenMsgContent InfoTypeAndValue elements, the remaining CertReqMsg or GenMsgContent InfoTypeAndValue elements have no profile name associated with them.</t>
          </section>
          <section anchor="sect-5.1.1.5" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.1.5">
            <name slugifiedName="name-kemciphertextinfo">KemCiphertextInfo</name>
            <t indent="0" pn="section-5.1.1.5-1">A PKI entity <bcp14>MAY</bcp14> provide the KEM ciphertext for MAC-based message protection using KEM (see <xref target="sect-5.1.3.4" format="default" sectionFormat="of" derivedContent="Section 5.1.3.4"/>) in the generalInfo field of a request message to a PKI management entity if it knows that the PKI management entity uses a KEM key pair and has its public key.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.1.1.5-2">
  id-it-KemCiphertextInfo OBJECT IDENTIFIER ::= { id-it 24 }
  KemCiphertextInfoValue ::= KemCiphertextInfo
</sourcecode>
            <t indent="0" pn="section-5.1.1.5-3">For more details of KEM-based message protection, see <xref target="sect-5.1.3.4" format="default" sectionFormat="of" derivedContent="Section 5.1.3.4"/>. See <xref target="sect-5.3.19.18" format="default" sectionFormat="of" derivedContent="Section 5.3.19.18"/> for the definition of {id-it 24}.</t>
          </section>
        </section>
        <section anchor="sect-5.1.2" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.2">
          <name slugifiedName="name-pki-message-body">PKI Message Body</name>
          <sourcecode type="asn.1" markers="false" pn="section-5.1.2-1">
  PKIBody ::= CHOICE {
     ir       [0]  CertReqMessages,        --Initialization Req
     ip       [1]  CertRepMessage,         --Initialization Resp
     cr       [2]  CertReqMessages,        --Certification Req
     cp       [3]  CertRepMessage,         --Certification Resp
     p10cr    [4]  CertificationRequest,   --PKCS #10 Cert.  Req.
     popdecc  [5]  POPODecKeyChallContent, --pop Challenge
     popdecr  [6]  POPODecKeyRespContent,  --pop Response
     kur      [7]  CertReqMessages,        --Key Update Request
     kup      [8]  CertRepMessage,         --Key Update Response
     krr      [9]  CertReqMessages,        --Key Recovery Req
     krp      [10] KeyRecRepContent,       --Key Recovery Resp
     rr       [11] RevReqContent,          --Revocation Request
     rp       [12] RevRepContent,          --Revocation Response
     ccr      [13] CertReqMessages,        --Cross-Cert.  Request
     ccp      [14] CertRepMessage,         --Cross-Cert.  Resp
     ckuann   [15] CAKeyUpdContent,        --CA Key Update Ann.
     cann     [16] CertAnnContent,         --Certificate Ann.
     rann     [17] RevAnnContent,          --Revocation Ann.
     crlann   [18] CRLAnnContent,          --CRL Announcement
     pkiconf  [19] PKIConfirmContent,      --Confirmation
     nested   [20] NestedMessageContent,   --Nested Message
     genm     [21] GenMsgContent,          --General Message
     genp     [22] GenRepContent,          --General Response
     error    [23] ErrorMsgContent,        --Error Message
     certConf [24] CertConfirmContent,     --Certificate Confirm
     pollReq  [25] PollReqContent,         --Polling Request
     pollRep  [26] PollRepContent          --Polling Response
  }
</sourcecode>
          <t indent="0" pn="section-5.1.2-2">The specific types are described in <xref target="sect-5.3" format="default" sectionFormat="of" derivedContent="Section 5.3"/> below.</t>
        </section>
        <section anchor="sect-5.1.3" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.3">
          <name slugifiedName="name-pki-message-protection">PKI Message Protection</name>
          <t indent="0" pn="section-5.1.3-1">Some PKI messages will be protected for integrity.</t>
          <t indent="0" pn="section-5.1.3-2">Note: If an asymmetric algorithm is used to protect a message and the relevant
public component has been certified already, then the origin of the
message can also be authenticated.  On the other hand, if the public
component is uncertified, then the message origin cannot be
automatically authenticated but may be authenticated via out-of-band
means.</t>
          <t indent="0" pn="section-5.1.3-3">When protection is applied, the following structure is used:</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.1.3-4">
  PKIProtection ::= BIT STRING
</sourcecode>
          <t indent="0" pn="section-5.1.3-5">The input to the calculation of PKIProtection is the DER encoding of
the following data structure:</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.1.3-6">
  ProtectedPart ::= SEQUENCE {
     header    PKIHeader,
     body      PKIBody
  }
</sourcecode>
          <t indent="0" pn="section-5.1.3-7">There <bcp14>MAY</bcp14> be cases in which the PKIProtection BIT STRING is
deliberately not used to protect a message (i.e., this <bcp14>OPTIONAL</bcp14> field
is omitted) because other protection, external to PKIX, will be
applied instead.  Such a choice is explicitly allowed in this
specification.  Examples of such external protection include CMS <xref target="RFC5652" format="default" sectionFormat="of" derivedContent="RFC5652"/> and Security Multiparts <xref target="RFC1847" format="default" sectionFormat="of" derivedContent="RFC1847"/> encapsulation of the
PKIMessage (or simply the PKIBody (omitting the CHOICE tag), if the
relevant PKIHeader information is securely carried in the external
mechanism).  It is noted, however, that many such external mechanisms
require that the end entity already possesses a public-key
certificate, a unique DN, and/or other such
infrastructure-related information.  Thus, they may not be
appropriate for initial registration, key-recovery, or any other
process with "bootstrapping" characteristics.  For those cases, it
may be necessary that the PKIProtection parameter be used.  In the
future, if/when external mechanisms are modified to accommodate
bootstrapping scenarios, the use of PKIProtection may become rare or
non-existent.</t>
          <t indent="0" pn="section-5.1.3-8">Depending on the circumstances, the PKIProtection bits may contain a
MAC or signature.  Only the following
cases can occur:</t>
          <section anchor="sect-5.1.3.1" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.3.1">
            <name slugifiedName="name-shared-secret-information">Shared Secret Information</name>
            <t indent="0" pn="section-5.1.3.1-1">In this case, the sender and recipient share secret information with sufficient
entropy (established via out-of-band means). PKIProtection will contain a
MAC value, and the protectionAlg <bcp14>MAY</bcp14> be one of the options described in <xref section="6.1" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-6.1" derivedContent="RFC9481">CMP Algorithms</xref>.</t>
            <t indent="0" pn="section-5.1.3.1-2">The algorithm identifier id-PasswordBasedMac is defined in <xref section="4.4" target="RFC4211" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc4211#section-4.4" derivedContent="RFC4211"/> and updated by <xref target="RFC9045" format="default" sectionFormat="of" derivedContent="RFC9045"/>. It is mentioned in <xref section="6.1.1" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-6.1.1" derivedContent="RFC9481"/> for backward compatibility. More modern alternatives are listed in <xref section="6.1" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-6.1" derivedContent="RFC9481"/>.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.1.3.1-3">
  id-PasswordBasedMac OBJECT IDENTIFIER ::= {1 2 840 113533 7 66 13}
  PBMParameter ::= SEQUENCE {
     salt                OCTET STRING,
     owf                 AlgorithmIdentifier,
     iterationCount      INTEGER,
     mac                 AlgorithmIdentifier
  }
</sourcecode>
            <t indent="0" pn="section-5.1.3.1-4">The following text gives a method of key expansion to be used when the MAC algorithm requires an input length that is larger than the size of the one-way function (OWF).</t>
            <t indent="0" pn="section-5.1.3.1-5">Note: <xref section="4.4" target="RFC4211" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc4211#section-4.4" derivedContent="RFC4211"/> and <xref target="RFC9045" format="default" sectionFormat="of" derivedContent="RFC9045"/> do not mention this key expansion method or give an example using HMAC algorithms where key expansion is not needed. It is recognized that this omission in <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> can lead to confusion and possible incompatibility if key expansion <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/> is not used when needed. Therefore, when key expansion is required (when K &gt; H), the key expansion defined in the following text <bcp14>MUST</bcp14> be used.</t>
            <t indent="0" pn="section-5.1.3.1-6">In the above protectionAlg, the salt value is appended to the shared
secret input. The OWF is then applied iterationCount times, where the
salted secret is the input to the first iteration and, for each
successive iteration, the input is set to be the output of the
previous iteration. The output of the final iteration (called
"BASEKEY" for ease of reference, with a size of "H") is what is used
to form the symmetric key. If the MAC algorithm requires a K-bit key
and K &lt;= H, then the most significant K bits of BASEKEY are used. If
K &gt; H, then all of BASEKEY is used for the most significant H bits of
the key, OWF("1" || BASEKEY) is used for the next most significant H
bits of the key, OWF("2" || BASEKEY) is used for the next most
significant H bits of the key, and so on, until all K bits have been
derived. [Here "N" is the ASCII byte encoding the number N and "||"
represents concatenation.]</t>
            <t indent="0" pn="section-5.1.3.1-7">Note: It is <bcp14>RECOMMENDED</bcp14> that the fields of PBMParameter remain
constant throughout the messages of a single transaction (e.g.,
ir/ip/certConf/pkiConf) to reduce the overhead associated with
PasswordBasedMac computation.</t>
          </section>
          <section anchor="sect-5.1.3.2" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.3.2">
            <name slugifiedName="name-dh-key-pairs">DH Key Pairs</name>
            <t indent="0" pn="section-5.1.3.2-1">Where the sender and receiver possess finite-field or elliptic-curve-based
DH certificates
with compatible DH parameters in order to protect the message, the
end entity must generate a symmetric key based on its private DH key
value and the DH public key of the recipient of the PKI message.
PKIProtection will contain a MAC value keyed with this derived
symmetric key, and the protectionAlg will be the following:</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.1.3.2-2">
  id-DHBasedMac OBJECT IDENTIFIER ::= {1 2 840 113533 7 66 30}

  DHBMParameter ::= SEQUENCE {
     owf                 AlgorithmIdentifier,
     -- AlgId for an OWF
     mac                 AlgorithmIdentifier
     -- the MAC AlgId
  }
</sourcecode>
            <t indent="0" pn="section-5.1.3.2-3">In the above protectionAlg, OWF is applied to the result of the
DH computation.  The OWF output (called "BASEKEY" for
ease of reference, with a size of "H") is what is used to form the
symmetric key.  If the MAC algorithm requires a K-bit key and K &lt;= H, then
the most significant K bits of BASEKEY are used.  If K &gt; H, then
all of BASEKEY is used for the most significant H bits of the key,
OWF("1" || BASEKEY) is used for the next most significant H bits of
the key, OWF("2" || BASEKEY) is used for the next most significant H
bits of the key, and so on, until all K bits have been derived.
[Here "N" is the ASCII byte encoding the number N and "||" represents concatenation.]</t>
            <t indent="0" pn="section-5.1.3.2-4">Note: Hash algorithms that can be used as OWFs are listed in <xref section="2" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-2" derivedContent="RFC9481">CMP Algorithms</xref>.</t>
          </section>
          <section anchor="sect-5.1.3.3" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.3.3">
            <name slugifiedName="name-signature">Signature</name>
            <t indent="0" pn="section-5.1.3.3-1">In this case, the sender possesses a signature key pair and simply
signs the PKI message.  PKIProtection will contain the signature
value and the protectionAlg will be an AlgorithmIdentifier for a
digital signature, which <bcp14>MAY</bcp14> be one of the options described in <xref section="3" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-3" derivedContent="RFC9481">CMP
Algorithms</xref>.</t>
          </section>
          <section anchor="sect-5.1.3.4" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.3.4">
            <name slugifiedName="name-key-encapsulation">Key Encapsulation</name>
            <t indent="0" pn="section-5.1.3.4-1">In case the sender of a message has a KEM key pair, it can be used to establish a shared secret key for MAC-based message protection. This can be used for message authentication.</t>
            <t indent="0" pn="section-5.1.3.4-2">This approach uses the definition of KEM algorithm functions in <xref section="1" target="RFC9629" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9629#section-1" derivedContent="RFC9629"/> as follows:</t>
            <t indent="0" pn="section-5.1.3.4-3">A KEM algorithm provides three functions:</t>
            <ol spacing="normal" indent="adaptive" start="1" type="1" pn="section-5.1.3.4-4">
              <li pn="section-5.1.3.4-4.1" derivedCounter="1.">KeyGen() -&gt; (pk, sk): Generate a public key (pk) and a
              private (secret) key (sk).</li>
              <li pn="section-5.1.3.4-4.2" derivedCounter="2.">Encapsulate(pk) -&gt; (ct, ss): Given the public key
              (pk), produce a ciphertext (ct) and a shared secret (ss).</li>
              <li pn="section-5.1.3.4-4.3" derivedCounter="3.">Decapsulate(sk, ct) -&gt; (ss): Given the private key
              (sk) and the ciphertext (ct), produce the shared secret
              (ss).</li>
            </ol>
            <t indent="0" pn="section-5.1.3.4-5">To support a particular KEM algorithm, the PKI entity that possesses a KEM key pair and wishes to use it for MAC-based message protection <bcp14>MUST</bcp14> support the KEM Decapsulate() function. The PKI entity that wishes to verify the MAC-based message protection <bcp14>MUST</bcp14> support the KEM Encapsulate() function. The respective public KEM key is usually carried in a certificate <xref target="I-D.ietf-lamps-kyber-certificates" format="default" sectionFormat="of" derivedContent="ML-KEM"/>.</t>
            <t indent="0" pn="section-5.1.3.4-6">Note: Both PKI entities send and receive messages in a PKI management operation. Both PKI entities may independently wish to protect messages using their KEM key pairs. For ease of explanation, we use the terms "Alice" to denote the PKI entity possessing the KEM key pair and who wishes to provide MAC-based message protection and "Bob" to denote the PKI entity having Alice's authentic public KEM key and who needs to verify the MAC-based protection provided by Alice.</t>
            <t indent="0" pn="section-5.1.3.4-7">Assuming Bob has Alice's KEM public key, he generates the ciphertext using KEM encapsulation and transfers it to Alice in an InfoTypeAndValue structure. Alice then retrieves the KEM shared secret from the ciphertext using KEM decapsulation and the associated KEM private key. Using a key derivation function (KDF), Alice derives a shared secret key from the KEM shared secret and other data sent by Bob. PKIProtection will contain a MAC value calculated using that shared secret key, and the protectionAlg will be the following:</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.1.3.4-8">
  id-KemBasedMac OBJECT IDENTIFIER ::= {1 2 840 113533 7 66 16}

  KemBMParameter ::= SEQUENCE {
    kdf              AlgorithmIdentifier{KEY-DERIVATION, {...}},
    kemContext   [0] OCTET STRING OPTIONAL,
    len              INTEGER (1..MAX),
    mac              AlgorithmIdentifier{MAC-ALGORITHM, {...}}
  }
</sourcecode>
            <t indent="0" pn="section-5.1.3.4-9">Note: The OID for id-KemBasedMac was assigned on the private-use arc { iso(1) member-body(2) us(840) nortelnetworks(113533) entrust(7) } and not assigned on an IANA-owned arc because the authors wished to place it on the same branch as the existing OIDs for id-PasswordBasedMac and id-DHBasedMac.</t>
            <t indent="0" pn="section-5.1.3.4-10">kdf is the algorithm identifier of the chosen KDF, and any associated parameters, used to derive the shared secret key.</t>
            <t indent="0" pn="section-5.1.3.4-11">kemContext <bcp14>MAY</bcp14> be used to transfer additional algorithm-specific context information (see also the definition of ukm in <xref section="3" target="RFC9629" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9629#section-3" derivedContent="RFC9629"/>).</t>
            <t indent="0" pn="section-5.1.3.4-12">len is the output length of the KDF and <bcp14>MUST</bcp14> be the desired size of the key to be used for MAC-based message protection.</t>
            <t indent="0" pn="section-5.1.3.4-13">mac is the algorithm identifier of the chosen MAC algorithm, and any associated parameters, used to calculate the MAC value.</t>
            <t indent="0" pn="section-5.1.3.4-14">The KDF and MAC algorithms <bcp14>MAY</bcp14> be chosen from the options in CMP Algorithms <xref target="RFC9481" format="default" sectionFormat="of" derivedContent="RFC9481"/>.</t>
            <t indent="0" pn="section-5.1.3.4-15">The InfoTypeAndValue transferring the KEM ciphertext uses OID id-it-KemCiphertextInfo. It contains a KemCiphertextInfo structure, as defined in <xref target="sect-5.3.19.18" format="default" sectionFormat="of" derivedContent="Section 5.3.19.18"/>.</t>
            <t indent="0" pn="section-5.1.3.4-16">Note: This InfoTypeAndValue can be carried in a genm/genp message body, as specified in <xref target="sect-5.3.19.18" format="default" sectionFormat="of" derivedContent="Section 5.3.19.18"/>, or in the generalInfo field of PKIHeader in messages of other types (see <xref target="sect-5.1.1.5" format="default" sectionFormat="of" derivedContent="Section 5.1.1.5"/>).</t>
            <t indent="0" pn="section-5.1.3.4-17">In the following, a generic message flow for MAC-based protection using KEM is specified in more detail. It is assumed that Bob possesses Alice's public KEM key. Alice can be the initiator of a PKI management operation or the responder. For more detailed figures, see <xref target="sect-e" format="default" sectionFormat="of" derivedContent="Appendix E"/>.</t>
            <t indent="0" pn="section-5.1.3.4-18">Generic Message Flow:</t>
            <figure anchor="KEM" align="left" suppress-title="false" pn="figure-2">
              <name slugifiedName="name-generic-message-flow-when-a">Generic Message Flow When Alice Has a KEM Key Pair</name>
              <artset pn="section-5.1.3.4-19.1">
                <artwork type="svg" align="left" pn="section-5.1.3.4-19.1.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="560" viewBox="0 0 560 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                    <path d="M 8,48 L 552,48" fill="none" stroke="black"/>
                    <path d="M 184,80 L 200,80" fill="none" stroke="black"/>
                    <path d="M 336,80 L 352,80" fill="none" stroke="black"/>
                    <path d="M 184,160 L 200,160" fill="none" stroke="black"/>
                    <path d="M 336,160 L 352,160" fill="none" stroke="black"/>
                    <path d="M 8,224 L 152,224" fill="none" stroke="black"/>
                    <path d="M 400,224 L 552,224" fill="none" stroke="black"/>
                    <polygon class="arrowhead" points="360,160 348,154.4 348,165.6" fill="black" transform="rotate(0,352,160)"/>
                    <polygon class="arrowhead" points="344,80 332,74.4 332,85.6" fill="black" transform="rotate(180,336,80)"/>
                    <polygon class="arrowhead" points="208,160 196,154.4 196,165.6" fill="black" transform="rotate(0,200,160)"/>
                    <polygon class="arrowhead" points="192,80 180,74.4 180,85.6" fill="black" transform="rotate(180,184,80)"/>
                    <g class="text">
                      <text x="24" y="36">Step#</text>
                      <text x="72" y="36">Alice</text>
                      <text x="360" y="36">Bob</text>
                      <text x="24" y="68">1</text>
                      <text x="376" y="68">perform</text>
                      <text x="424" y="68">KEM</text>
                      <text x="488" y="68">Encapsulate</text>
                      <text x="224" y="84">KEM</text>
                      <text x="284" y="84">Ciphertext</text>
                      <text x="24" y="100">2</text>
                      <text x="80" y="100">perform</text>
                      <text x="128" y="100">KEM</text>
                      <text x="196" y="100">Decapsulate,</text>
                      <text x="96" y="116">perform</text>
                      <text x="144" y="116">key</text>
                      <text x="208" y="116">derivation,</text>
                      <text x="92" y="132">format</text>
                      <text x="152" y="132">message</text>
                      <text x="204" y="132">with</text>
                      <text x="104" y="148">MAC-based</text>
                      <text x="188" y="148">protection</text>
                      <text x="264" y="164">message</text>
                      <text x="24" y="180">3</text>
                      <text x="376" y="180">perform</text>
                      <text x="424" y="180">key</text>
                      <text x="488" y="180">derivation,</text>
                      <text x="388" y="196">verify</text>
                      <text x="456" y="196">MAC-based</text>
                      <text x="404" y="212">protection</text>
                      <text x="192" y="228">Alice</text>
                      <text x="272" y="228">authenticated</text>
                      <text x="340" y="228">by</text>
                      <text x="368" y="228">Bob</text>
                    </g>
                  </svg>
                </artwork>
                <artwork type="ascii-art" align="left" pn="section-5.1.3.4-19.1.2">
Step# Alice                                Bob
---------------------------------------------------------------------
  1                                        perform KEM Encapsulate
                      &lt;-- KEM Ciphertext &lt;--
  2   perform KEM Decapsulate,
        perform key derivation,
        format message with
        MAC-based protection
                      --&gt;    message     --&gt;
  3                                        perform key derivation,
                                             verify MAC-based
                                             protection
-------------------  Alice authenticated by Bob  --------------------
</artwork>
              </artset>
            </figure>
            <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-5.1.3.4-20"><li pn="section-5.1.3.4-20.1" derivedCounter="1.">
                <t indent="0" pn="section-5.1.3.4-20.1.1">Bob needs to possess Alice's authentic public KEM key (pk), for instance, contained in a KEM certificate that was received and successfully validated by Bob beforehand.  </t>
                <t indent="0" pn="section-5.1.3.4-20.1.2">
		Bob generates a shared secret (ss) and the associated ciphertext (ct) using the KEM Encapsulate function with Alice's public KEM key (pk). Bob <bcp14>MUST NOT</bcp14> reuse the ss and ct for other PKI management operations. From this data, Bob produces a KemCiphertextInfo structure, including the KEM algorithm identifier and the ciphertext (ct) and sends it to Alice in an InfoTypeAndValue structure, as defined in <xref target="sect-5.3.19.18" format="default" sectionFormat="of" derivedContent="Section 5.3.19.18"/>.  </t>
                <t indent="2" pn="section-5.1.3.4-20.1.3">Encapsulate(pk) -&gt; (ct, ss)</t>
              </li>
              <li pn="section-5.1.3.4-20.2" derivedCounter="2.">
                <t indent="0" pn="section-5.1.3.4-20.2.1">Alice decapsulates the shared secret (ss) from the ciphertext (ct) using the KEM Decapsulate function and its private KEM key (sk).  </t>
                <t indent="2" pn="section-5.1.3.4-20.2.2">Decapsulate(ct, sk) -&gt; (ss)</t>
                <t indent="0" pn="section-5.1.3.4-20.2.3">
If the decapsulation operation outputs an error, any failInfo field in an error response message  <bcp14>SHALL</bcp14> contain the value badMessageCheck and the PKI management operation <bcp14>SHALL</bcp14> be terminated.  </t>
                <t indent="0" pn="section-5.1.3.4-20.2.4">
Alice derives the shared secret key (ssk) using a KDF. The shared secret (ss) is used as input key material for the KDF, and the value len is the desired output length of the KDF as required by the MAC algorithm to be used for message protection. KDF, len, and MAC will be transferred to Bob in the protectionAlg KemBMParameter. The DER-encoded KemOtherInfo structure, as defined below, is used as context for the KDF.  </t>
                <t indent="2" pn="section-5.1.3.4-20.2.5">KDF(ss, len, context)-&gt;(ssk)</t>
                <t indent="0" pn="section-5.1.3.4-20.2.6">
The shared secret key (ssk) is used for MAC-based protection by Alice.</t>
              </li>
              <li pn="section-5.1.3.4-20.3" derivedCounter="3.">
                <t indent="0" pn="section-5.1.3.4-20.3.1">Bob derives the same shared secret key (ssk) using the KDF. Also here, the shared secret (ss) is used as input key material for the KDF, the value len is the desired output length for the KDF, and the DER-encoded KemOtherInfo structure constructed in the same way as on Alice's side is used as context for the KDF.  </t>
                <t indent="2" pn="section-5.1.3.4-20.3.2">KDF(ss, len, context)-&gt;(ssk)</t>
                <t indent="0" pn="section-5.1.3.4-20.3.3">
Bob uses the shared secret key (ssk) for verifying the MAC-based protection of the message received and in this way authenticates Alice.</t>
              </li>
            </ol>
            <t indent="0" pn="section-5.1.3.4-21">This shared secret key (ssk) can be reused by Alice for MAC-based protection of further messages sent to Bob within the current PKI management operation.</t>
            <t indent="0" pn="section-5.1.3.4-22">This approach employs the notation of KDF(IKM, L, info) as described in <xref section="5" sectionFormat="of" target="RFC9629" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9629#section-5" derivedContent="RFC9629"/> with the following changes:</t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-5.1.3.4-23">
              <li pn="section-5.1.3.4-23.1">
                <t indent="0" pn="section-5.1.3.4-23.1.1">IKM is the input key material. It is the symmetric secret called "ss" resulting from the KEM.</t>
              </li>
              <li pn="section-5.1.3.4-23.2">
                <t indent="0" pn="section-5.1.3.4-23.2.1">L is dependent of the MAC algorithm that is used with the shared secret key for CMP message protection and is called "len" in this document.</t>
              </li>
              <li pn="section-5.1.3.4-23.3">
                <t indent="0" pn="section-5.1.3.4-23.3.1">info is an additional input to the KDF, is called "context" in this document, and contains the DER-encoded KemOtherInfo structure defined as:  </t>
                <sourcecode type="asn.1" markers="false" pn="section-5.1.3.4-23.3.2">
  KemOtherInfo ::= SEQUENCE {
    staticString      PKIFreeText,
    transactionID     OCTET STRING,
    kemContext    [0] OCTET STRING OPTIONAL
  }
</sourcecode>
                <t indent="0" pn="section-5.1.3.4-23.3.3">
staticString <bcp14>MUST</bcp14> be "CMP-KEM".  </t>
                <t indent="0" pn="section-5.1.3.4-23.3.4">
transactionID <bcp14>MUST</bcp14> be the value from the message containing the ciphertext (ct) in KemCiphertextInfo.  </t>
                <t indent="0" pn="section-5.1.3.4-23.3.5">
Note: The transactionID is used to ensure domain separation of the derived shared secret key between different PKI management operations. For all PKI management operations with more than one exchange, the transactionID <bcp14>MUST</bcp14> be set anyway (see <xref target="sect-5.1.1" format="default" sectionFormat="of" derivedContent="Section 5.1.1"/>). In case Bob provided an infoValue of type KemCiphertextInfo to Alice in the initial request message (see <xref target="KEM-Flow2" format="default" sectionFormat="of" derivedContent="Figure 4"/> of <xref target="sect-e" format="default" sectionFormat="of" derivedContent="Appendix E"/>), the transactionID <bcp14>MUST</bcp14> be set by Bob.  </t>
                <t indent="0" pn="section-5.1.3.4-23.3.6">
kemContext <bcp14>MAY</bcp14> contain additional algorithm-specific context information.</t>
              </li>
              <li pn="section-5.1.3.4-23.4">
                <t indent="0" pn="section-5.1.3.4-23.4.1">OKM is the output keying material of the KDF used for MAC-based message protection of length len and is called "ssk" in this document.</t>
              </li>
            </ul>
            <t indent="0" pn="section-5.1.3.4-24">There are various ways that Alice can request and Bob can provide the KEM ciphertext (see <xref target="sect-e" format="default" sectionFormat="of" derivedContent="Appendix E"/> for details). The KemCiphertextInfo can be requested using PKI general messages, as described in <xref target="sect-5.3.19.18" format="default" sectionFormat="of" derivedContent="Section 5.3.19.18"/>. Alternatively, the generalInfo field of the PKIHeader can be used to convey the same request and response InfoTypeAndValue structures, as described in <xref target="sect-5.1.1.5" format="default" sectionFormat="of" derivedContent="Section 5.1.1.5"/>. The procedure also works without Alice explicitly requesting the KEM ciphertext in case Bob knows one of Alice's KEM keys beforehand and can expect that she is ready to use it.</t>
            <t indent="0" pn="section-5.1.3.4-25">If both the initiator and responder in a PKI management operation have KEM key pairs, this procedure can be applied by both entities independently, establishing and using different shared secret keys for either direction.</t>
          </section>
          <section anchor="sect-5.1.3.5" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.3.5">
            <name slugifiedName="name-multiple-protection">Multiple Protection</name>
            <t indent="0" pn="section-5.1.3.5-1">When receiving a protected PKI message, a PKI management entity, such as an
RA, <bcp14>MAY</bcp14> forward that message adding its own protection.  Additionally, multiple
PKI messages <bcp14>MAY</bcp14> be aggregated.  There are several use cases for such messages.</t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-5.1.3.5-2">
              <li pn="section-5.1.3.5-2.1">
                <t indent="0" pn="section-5.1.3.5-2.1.1">The RA confirms having validated and authorized a message and forwards the
original message unchanged.</t>
              </li>
              <li pn="section-5.1.3.5-2.2">
                <t indent="0" pn="section-5.1.3.5-2.2.1">A PKI management entity collects several messages that are to be forwarded
in the same direction and forwards them in a batch. Request messages can
be transferred as a batch upstream (towards the CA); response or announce messages
can be transferred as a batch downstream (towards an RA but not to the end entity).
For instance, this can be used when bridging an offline connection between
two PKI management entities.</t>
              </li>
            </ul>
            <t indent="0" pn="section-5.1.3.5-3">These use cases are accomplished by nesting the messages within a new PKI
message.  The structure used is as follows:</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.1.3.5-4">
  NestedMessageContent ::= PKIMessages
</sourcecode>
            <t indent="0" pn="section-5.1.3.5-5">In case an RA needs to modify a request message, it <bcp14>MAY</bcp14> include the original
PKIMessage in the generalInfo field of the modified message, as described in
<xref target="sect-5.1.1.3" format="default" sectionFormat="of" derivedContent="Section 5.1.1.3"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="sect-5.2" numbered="true" removeInRFC="false" toc="include" pn="section-5.2">
        <name slugifiedName="name-common-data-structures">Common Data Structures</name>
        <t indent="0" pn="section-5.2-1">Before specifying the specific types that may be placed in a PKIBody,
we define some data structures that are used in more than one case.</t>
        <section anchor="sect-5.2.1" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.1">
          <name slugifiedName="name-requested-certificate-conte">Requested Certificate Contents</name>
          <t indent="0" pn="section-5.2.1-1">Various PKI management messages require that the originator of the
message indicate some of the fields that are required to be present
in a certificate.  The CertTemplate structure allows entities requesting a certificate 
to specify the data fields that they want to be included. 
Typically, they are required to provide at least the publicKey field.
A CertTemplate structure is identical to a TBSCertificate structure (see <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>)  
but with all fields optional/situational.</t>
          <t indent="0" pn="section-5.2.1-2">Note: Even if the originator completely specifies the contents of
a certificate it requires, a CA is free to modify fields within the
certificate actually issued.  If the modified certificate is
unacceptable to the requester, the requester <bcp14>MUST</bcp14> send back a
certConf message that either does not include this certificate (via a
CertHash) or does include this certificate (via a CertHash) along
with a status of "rejected".  See <xref target="sect-5.3.18" format="default" sectionFormat="of" derivedContent="Section 5.3.18"/> for the definition
and use of CertHash and the certConf message.</t>
          <t indent="0" pn="section-5.2.1-3">Note: Before requesting a new certificate, an end entity can request a certTemplate
structure as a kind of certificate request blueprint in order to learn which
data the CA expects to be present in the certificate request (see <xref target="sect-5.3.19.16" format="default" sectionFormat="of" derivedContent="Section 5.3.19.16"/>).</t>
          <t indent="0" pn="section-5.2.1-4">See CRMF <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> for CertTemplate syntax.</t>
          <t indent="0" pn="section-5.2.1-5">If certTemplate is an empty SEQUENCE (i.e., all fields omitted), then the
controls field in the CertRequest structure <bcp14>MAY</bcp14> contain the id-regCtrl-altCertTemplate
control, specifying a template for a certificate other than an X.509v3 public-key
certificate.  Conversely, if certTemplate is not empty (i.e., at least one
field is present), then controls <bcp14>MUST NOT</bcp14> contain id-regCtrl-altCertTemplate.
The new control is defined as follows:</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.2.1-6">
  id-regCtrl-altCertTemplate OBJECT IDENTIFIER ::= { iso(1)
     identified-organization(3) dod(6) internet(1) security(5)
     mechanisms(5) pkix(7) pkip(5) regCtrl(1) 7}

  AltCertTemplate ::= AttributeTypeAndValue
</sourcecode>
          <t indent="0" pn="section-5.2.1-7">Also see <xref target="RFC4212" format="default" sectionFormat="of" derivedContent="RFC4212"/> for more details on how to manage certificates in alternative formats using CRMF <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> syntax.</t>
        </section>
        <section anchor="sect-5.2.2" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.2">
          <name slugifiedName="name-encrypted-values">Encrypted Values</name>
          <t indent="0" pn="section-5.2.2-1">When encrypted data like a private key, certificate, POP challenge, or revocation passphrase is sent in PKI messages, it is <bcp14>RECOMMENDED</bcp14> to use the EnvelopedData structure.  In some cases, this is accomplished by using the EncryptedKey data structure instead of EncryptedValue.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.2.2-2">
  EncryptedKey ::= CHOICE {
     encryptedValue       EncryptedValue, -- deprecated
     envelopedData    [0] EnvelopedData }
</sourcecode>
          <t indent="0" pn="section-5.2.2-3">See Certificate Request Message Format (CRMF) <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> for EncryptedKey and EncryptedValue syntax and Cryptographic Message
   Syntax (CMS) <xref target="RFC5652" format="default" sectionFormat="of" derivedContent="RFC5652"/> for EnvelopedData syntax. Using the EncryptedKey data structure offers the
choice to either use EncryptedValue (for backward compatibility only) or
EnvelopedData.  The use of the EncryptedValue structure has been deprecated
in favor of the EnvelopedData structure.  Therefore, it is <bcp14>RECOMMENDED</bcp14> to
use EnvelopedData.</t>
          <t indent="0" pn="section-5.2.2-4">Note: The EncryptedKey structure defined in CRMF <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> is used here, which makes the update backward compatible. Using the new syntax
with the untagged default choice EncryptedValue is bits-on-the-wire compatible
with the old syntax.</t>
          <t indent="0" pn="section-5.2.2-5">To indicate support for EnvelopedData, the pvno cmp2021 has been introduced.
Details on the usage of the protocol version number
  are described in <xref target="sect-7" format="default" sectionFormat="of" derivedContent="Section 7"/>.</t>
          <t indent="0" pn="section-5.2.2-6">The EnvelopedData structure is <bcp14>RECOMMENDED</bcp14> to be used in CMP to transport a private key,
certificate, POP challenge, or revocation passphrase in encrypted form as follows:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-5.2.2-7">
            <li pn="section-5.2.2-7.1">
              <t indent="0" pn="section-5.2.2-7.1.1">It contains only one RecipientInfo structure because the content is encrypted
only for one recipient.</t>
            </li>
            <li pn="section-5.2.2-7.2">
              <t indent="0" pn="section-5.2.2-7.2.1">It may contain a private key in the AsymmetricKeyPackage structure (which is placed in the encryptedContentInfo field), as defined
in <xref target="RFC5958" format="default" sectionFormat="of" derivedContent="RFC5958"/>, that is wrapped in a SignedData structure, as specified in
<xref section="5" target="RFC5652" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5652#section-5" derivedContent="RFC5652"/> and <xref target="RFC8933" format="default" sectionFormat="of" derivedContent="RFC8933"/>, signed by the KGA or CA.</t>
            </li>
            <li pn="section-5.2.2-7.3">
              <t indent="0" pn="section-5.2.2-7.3.1">It may contain a certificate, POP challenge, or revocation passphrase directly in the encryptedContent
field.</t>
            </li>
          </ul>
          <t indent="0" pn="section-5.2.2-8">The content of the EnvelopedData structure, as specified in <xref section="6" target="RFC5652" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5652#section-6" derivedContent="RFC5652"/>,
<bcp14>MUST</bcp14> be encrypted using a newly generated symmetric content-encryption
key. This content-encryption key <bcp14>MUST</bcp14> be securely provided to the recipient
using one of four key management techniques.</t>
          <t indent="0" pn="section-5.2.2-9">The choice of the key management technique to be used by the sender depends
on the credential available at the recipient:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-5.2.2-10">
            <li pn="section-5.2.2-10.1">
              <t indent="0" pn="section-5.2.2-10.1.1">recipient's certificate with an algorithm identifier and a public key that supports key transport and where any given key usage extension allows keyEncipherment:
The content-encryption key will be protected using the key transport key management technique, as specified in <xref section="6.2.1" target="RFC5652" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5652#section-6.2.1" derivedContent="RFC5652"/>.</t>
            </li>
            <li pn="section-5.2.2-10.2">
              <t indent="0" pn="section-5.2.2-10.2.1">recipient's certificate with an algorithm identifier and a public key that supports key agreement and where any given key usage extension allows keyAgreement:
The content-encryption key will be protected using the key agreement key management technique, as specified in <xref section="6.2.2" target="RFC5652" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5652#section-6.2.2" derivedContent="RFC5652"/>.</t>
            </li>
            <li pn="section-5.2.2-10.3">
              <t indent="0" pn="section-5.2.2-10.3.1">a password or shared secret: The content-encryption key will be protected
using the password-based key management technique, as specified in
<xref section="6.2.4" target="RFC5652" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5652#section-6.2.4" derivedContent="RFC5652"/>.</t>
            </li>
            <li pn="section-5.2.2-10.4">
              <t indent="0" pn="section-5.2.2-10.4.1">recipient's certificate with an algorithm identifier and a public key that supports KEM and where any given key usage extension allows keyEncipherment: The content-encryption key will be protected using the key management technique for KEM keys, as specified in <xref target="RFC9629" format="default" sectionFormat="of" derivedContent="RFC9629"/>.</t>
            </li>
          </ul>
          <t indent="0" pn="section-5.2.2-11">Note: There are cases where the algorithm identifier, the type of the public key,
and the key usage extension will not be sufficient to decide on the key management
technique to use, e.g., when rsaEncryption is the algorithm identifier. In
such cases, it is a matter of local policy to decide.</t>
        </section>
        <section anchor="sect-5.2.3" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.3">
          <name slugifiedName="name-status-codes-and-failure-in">Status Codes and Failure Information for PKI Messages</name>
          <t indent="0" pn="section-5.2.3-1">All response messages will include some status information.  The
following values are defined.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.2.3-2">
  PKIStatus ::= INTEGER {
     accepted               (0),
     grantedWithMods        (1),
     rejection              (2),
     waiting                (3),
     revocationWarning      (4),
     revocationNotification (5),
     keyUpdateWarning       (6)
  }
</sourcecode>
          <t indent="0" pn="section-5.2.3-3">Responders may use the following syntax to provide more information
about failure cases.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.2.3-4">
  PKIFailureInfo ::= BIT STRING {
     badAlg                 (0),
     badMessageCheck        (1),
     badRequest             (2),
     badTime                (3),
     badCertId              (4),
     badDataFormat          (5),
     wrongAuthority         (6),
     incorrectData          (7),
     missingTimeStamp       (8),
     badPOP                 (9),
     certRevoked            (10),
     certConfirmed          (11),
     wrongIntegrity         (12),
     badRecipientNonce      (13),
     timeNotAvailable       (14),
     unacceptedPolicy       (15),
     unacceptedExtension    (16),
     addInfoNotAvailable    (17),
     badSenderNonce         (18),
     badCertTemplate        (19),
     signerNotTrusted       (20),
     transactionIdInUse     (21),
     unsupportedVersion     (22),
     notAuthorized          (23),
     systemUnavail          (24),
     systemFailure          (25),
     duplicateCertReq       (26)
  }

  PKIStatusInfo ::= SEQUENCE {
     status        PKIStatus,
     statusString  PKIFreeText     OPTIONAL,
     failInfo      PKIFailureInfo  OPTIONAL
  }
</sourcecode>
        </section>
        <section anchor="sect-5.2.4" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.4">
          <name slugifiedName="name-certificate-identification">Certificate Identification</name>
          <t indent="0" pn="section-5.2.4-1">In order to identify particular certificates, the CertId data
structure is used.</t>
          <t indent="0" pn="section-5.2.4-2">See <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> for CertId syntax.</t>
        </section>
        <section anchor="sect-5.2.5" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.5">
          <name slugifiedName="name-out-of-band-root-ca-public-">Out-of-Band Root CA Public Key</name>
          <t indent="0" pn="section-5.2.5-1">Each root CA that provides a self-signed certificate must be able to publish its current public key via some
"out-of-band" means or together with the respective link certificate using an online mechanism.  While such mechanisms are beyond the scope of
this document, we define data structures that can support such
mechanisms.</t>
          <t indent="0" pn="section-5.2.5-2">There are generally two methods available: Either the CA directly
publishes its self-signed certificate, or this information is
available via the directory (or equivalent) and the CA publishes a
hash of this value to allow verification of its integrity before use.</t>
          <t indent="0" pn="section-5.2.5-3">Note: As an alternative to out-of-band distribution of root CA public keys, the CA can provide the self-signed certificate together with link certificates, e.g., using RootCaKeyUpdateContent (<xref target="sect-5.3.19.15" format="default" sectionFormat="of" derivedContent="Section 5.3.19.15"/>).</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.2.5-4">
  OOBCert ::= Certificate
</sourcecode>
          <t indent="0" pn="section-5.2.5-5">The fields within this certificate are restricted as follows:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-5.2.5-6">
            <li pn="section-5.2.5-6.1">
              <t indent="0" pn="section-5.2.5-6.1.1">The certificate <bcp14>MUST</bcp14> be self-signed (i.e., the signature must be
verifiable using the SubjectPublicKeyInfo field);</t>
            </li>
            <li pn="section-5.2.5-6.2">
              <t indent="0" pn="section-5.2.5-6.2.1">The subject and issuer fields <bcp14>MUST</bcp14> be identical;</t>
            </li>
            <li pn="section-5.2.5-6.3">
              <t indent="0" pn="section-5.2.5-6.3.1">If the subject field contains a "NULL-DN", then both subjectAltNames and
issuerAltNames extensions <bcp14>MUST</bcp14> be present and have exactly the
same value; and</t>
            </li>
            <li pn="section-5.2.5-6.4">
              <t indent="0" pn="section-5.2.5-6.4.1">The values of all other extensions must be suitable for a self-signed
certificate (e.g., key identifiers for the subject and issuer must be the
same).</t>
            </li>
          </ul>
          <sourcecode type="asn.1" markers="false" pn="section-5.2.5-7">
  OOBCertHash ::= SEQUENCE {
     hashAlg     [0] AlgorithmIdentifier     OPTIONAL,
     certId      [1] CertId                  OPTIONAL,
     hashVal         BIT STRING
  }
</sourcecode>
          <t indent="0" pn="section-5.2.5-8">The intention of the hash value is that anyone who has securely
received the hash value (via the out-of-band means) can verify a
self-signed certificate for that CA.</t>
        </section>
        <section anchor="sect-5.2.6" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.6">
          <name slugifiedName="name-archive-options">Archive Options</name>
          <t indent="0" pn="section-5.2.6-1">Requesters may indicate that they wish the PKI to archive a private
key value using the PKIArchiveOptions structure.</t>
          <t indent="0" pn="section-5.2.6-2">See <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> for PKIArchiveOptions syntax.</t>
        </section>
        <section anchor="sect-5.2.7" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.7">
          <name slugifiedName="name-publication-information">Publication Information</name>
          <t indent="0" pn="section-5.2.7-1">Requesters may indicate that they wish the PKI to publish a
certificate using the PKIPublicationInfo structure.</t>
          <t indent="0" pn="section-5.2.7-2">See <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> for PKIPublicationInfo syntax.</t>
        </section>
        <section anchor="sect-5.2.8" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.8">
          <name slugifiedName="name-pop-structures">POP Structures</name>
          <t indent="0" pn="section-5.2.8-1">The POP structure used is indicated in the popo field
of type ProofOfPossession in the CertReqMsg sequence (see <xref section="4" target="RFC4211" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc4211#section-4" derivedContent="RFC4211"/>).</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.2.8-2">
   ProofOfPossession ::= CHOICE {
      raVerified      [0] NULL,
      signature       [1] POPOSigningKey,
      keyEncipherment [2] POPOPrivKey,
      keyAgreement    [3] POPOPrivKey
   }
</sourcecode>
          <section anchor="sect-5.2.8.1" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.8.1">
            <name slugifiedName="name-raverified">raVerified</name>
            <t indent="0" pn="section-5.2.8.1-1">An end entity <bcp14>MUST NOT</bcp14> use raVerified. If an RA performs changes to a certification request breaking the provided POP, or if the RA requests a certificate on behalf of an end entity and cannot provide the POP itself, the RA <bcp14>MUST</bcp14> use raVerified. Otherwise, it <bcp14>SHOULD NOT</bcp14> use raVerified.</t>
            <t indent="0" pn="section-5.2.8.1-2">When introducing raVerified, the RA <bcp14>MUST</bcp14> check the existing POP, or it <bcp14>MUST</bcp14> ensure by other means that the end entity is the holder of the private key. The RA <bcp14>MAY</bcp14> provide the original message containing the POP in the generalInfo field using the id-it-origPKIMessage (see <xref target="sect-5.1.1.3" format="default" sectionFormat="of" derivedContent="Section 5.1.1.3"/>) enabling the CA to verify it.</t>
          </section>
          <section anchor="sect-5.2.8.2" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.8.2">
            <name slugifiedName="name-poposigningkey-structure">POPOSigningKey Structure</name>
            <t indent="0" pn="section-5.2.8.2-1">If the certification request is for a key pair that supports signing (i.e., a request for a verification certificate), then the POP of the private key is demonstrated through use of the POPOSigningKey structure; for details, see <xref section="4.1" target="RFC4211" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc4211#section-4.1" derivedContent="RFC4211"/>.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.2.8.2-2">
   POPOSigningKey ::= SEQUENCE {
      poposkInput [0] POPOSigningKeyInput OPTIONAL,
      algorithmIdentifier AlgorithmIdentifier,
      signature BIT STRING
   }

   POPOSigningKeyInput ::= SEQUENCE {
      authInfo CHOICE {
         sender [0] GeneralName,
         publicKeyMAC PKMACValue
      },
      publicKey SubjectPublicKeyInfo
   }

   PKMACValue ::= SEQUENCE {
      algId AlgorithmIdentifier,
      value BIT STRING
   }
</sourcecode>
            <t indent="0" pn="section-5.2.8.2-3">Note: For the purposes of this specification, the ASN.1 comment given in <xref section="C" target="RFC4211" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc4211#appendix-C" derivedContent="RFC4211"/> pertains not only to certTemplate but also to the altCertTemplate control, as defined in <xref target="sect-5.2.1" format="default" sectionFormat="of" derivedContent="Section 5.2.1"/>.</t>
            <t indent="0" pn="section-5.2.8.2-4">If certTemplate (or the altCertTemplate control) contains the subject and publicKey values, then poposkInput <bcp14>MUST</bcp14> be omitted and the signature <bcp14>MUST</bcp14> be computed on the DER-encoded value of the certReq field of the CertReqMsg (or the DER-encoded value of AltCertTemplate). If certTemplate/altCertTemplate does not contain both the subject and public key values (i.e., if it contains only one of these or neither), then poposkInput <bcp14>MUST</bcp14> be present and the signature <bcp14>MUST</bcp14> be computed on the DER-encoded value of poposkInput (i.e., the "value" OCTETs of the POPOSigningKeyInput DER).</t>
            <t indent="0" pn="section-5.2.8.2-5">In the special case that the CA/RA has a DH certificate that is known to the end entity and the certification request is for a key agreement key pair, the end entity can also use the POPOSigningKey structure (where the algorithmIdentifier field is DHBasedMAC and the signature field is the MAC) for demonstrating POP.</t>
          </section>
          <section anchor="sect-5.2.8.3" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.8.3">
            <name slugifiedName="name-popoprivkey-structure">POPOPrivKey Structure</name>
            <t indent="0" pn="section-5.2.8.3-1">If the certification request is for a key pair that does not support signing (i.e., a request for an encryption or key agreement certificate), then the POP of the private key is demonstrated through use of the POPOPrivKey structure in one of the following three ways; for details see Sections <xref target="RFC4211" section="4.2" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4211#section-4.2" derivedContent="RFC4211"/> and <xref target="RFC4211" section="4.3" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4211#section-4.3" derivedContent="RFC4211"/> in <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/>.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.2.8.3-2">
   POPOPrivKey ::= CHOICE {
      thisMessage [0] BIT STRING, -- deprecated
      subsequentMessage [1] SubsequentMessage,
      dhMAC [2] BIT STRING, -- deprecated
      agreeMAC [3] PKMACValue,
      encryptedKey [4] EnvelopedData
   }

   SubsequentMessage ::= INTEGER {
      encrCert (0),
      challengeResp (1)
   }
</sourcecode>
            <t indent="0" pn="section-5.2.8.3-3">When using agreeMAC or encryptedKey choices, the pvno cmp2021(3) <bcp14>MUST</bcp14> be used. Details on the usage of the protocol version number are described in <xref target="sect-7" format="default" sectionFormat="of" derivedContent="Section 7"/>.</t>
            <section anchor="sect-5.2.8.3.1" numbered="true" removeInRFC="false" toc="exclude" pn="section-5.2.8.3.1">
              <name slugifiedName="name-inclusion-of-the-private-ke">Inclusion of the Private Key</name>
              <t indent="0" pn="section-5.2.8.3.1-1">This method mentioned previously in <xref target="sect-4.3" format="default" sectionFormat="of" derivedContent="Section 4.3"/> demonstrates POP of the private key by including the encrypted private key in the CertRequest in the POPOPrivKey structure or in the PKIArchiveOptions control structure. This method <bcp14>SHALL</bcp14> only be used if archival of the private key is desired.</t>
              <t indent="0" pn="section-5.2.8.3.1-2">For a certification request message indicating cmp2021(3) in the pvno field of the PKIHeader, the encrypted private key <bcp14>MUST</bcp14> be transferred in the encryptedKey choice of POPOPrivKey (or within the PKIArchiveOptions control) in a CMS EnvelopedData structure, as defined in <xref target="sect-5.2.2" format="default" sectionFormat="of" derivedContent="Section 5.2.2"/>.</t>
              <t indent="0" pn="section-5.2.8.3.1-3">Note: The thisMessage choice has been deprecated in favor of encryptedKey.  When using cmp2000(2) in the certification request message header for backward compatibility, the thisMessage choice of POPOPrivKey is used containing the encrypted private key in an EncryptedValue structure wrapped in a BIT STRING.  This allows the necessary conveyance and protection of the private key while maintaining bits-on-the-wire compatibility with <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/>.</t>
            </section>
            <section anchor="sect-5.2.8.3.2" numbered="true" removeInRFC="false" toc="exclude" pn="section-5.2.8.3.2">
              <name slugifiedName="name-indirect-method-encrypted-c">Indirect Method - Encrypted Certificate</name>
              <t indent="0" pn="section-5.2.8.3.2-1">The indirect method mentioned previously in <xref target="sect-4.3" format="default" sectionFormat="of" derivedContent="Section 4.3"/> demonstrates POP of the private key by having the CA return the requested certificate in encrypted form (see <xref target="sect-5.2.2" format="default" sectionFormat="of" derivedContent="Section 5.2.2"/>).  This method is indicated in the CertRequest by requesting the encrCert option in the subsequentMessage choice of POPOPrivKey.</t>
              <artset pn="section-5.2.8.3.2-2">
                <artwork type="svg" align="left" pn="section-5.2.8.3.2-2.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="128" width="328" viewBox="0 0 328 128" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                    <path d="M 80,48 L 104,48" fill="none" stroke="black"/>
                    <path d="M 256,48 L 288,48" fill="none" stroke="black"/>
                    <path d="M 80,64 L 104,64" fill="none" stroke="black"/>
                    <path d="M 256,64 L 288,64" fill="none" stroke="black"/>
                    <path d="M 80,80 L 104,80" fill="none" stroke="black"/>
                    <path d="M 256,80 L 288,80" fill="none" stroke="black"/>
                    <path d="M 80,96 L 104,96" fill="none" stroke="black"/>
                    <path d="M 256,96 L 288,96" fill="none" stroke="black"/>
                    <polygon class="arrowhead" points="296,80 284,74.4 284,85.6" fill="black" transform="rotate(0,288,80)"/>
                    <polygon class="arrowhead" points="296,48 284,42.4 284,53.6" fill="black" transform="rotate(0,288,48)"/>
                    <polygon class="arrowhead" points="88,96 76,90.4 76,101.6" fill="black" transform="rotate(180,80,96)"/>
                    <polygon class="arrowhead" points="88,64 76,58.4 76,69.6" fill="black" transform="rotate(180,80,64)"/>
                    <g class="text">
                      <text x="16" y="36">end</text>
                      <text x="60" y="36">entity</text>
                      <text x="304" y="36">RA/CA</text>
                      <text x="176" y="52">req</text>
                      <text x="136" y="68">rep</text>
                      <text x="172" y="68">(enc</text>
                      <text x="216" y="68">cert)</text>
                      <text x="132" y="84">conf</text>
                      <text x="176" y="84">(cert</text>
                      <text x="224" y="84">hash)</text>
                      <text x="176" y="100">ack</text>
                    </g>
                  </svg>
                </artwork>
                <artwork type="ascii-art" align="left" pn="section-5.2.8.3.2-2.2">
        end entity                         RA/CA
                 ----       req        ----&gt;
                 &lt;---  rep (enc cert)  -----
                 ---- conf (cert hash) ----&gt;
                 &lt;---       ack        -----
</artwork>
              </artset>
              <t indent="0" pn="section-5.2.8.3.2-3">The end entity proves knowledge of the private key to the CA by providing the correct CertHash for this certificate in the certConf message. This demonstrates POP because the end entity can only compute the correct CertHash if it is able to recover the encrypted certificate, and it can only recover the certificate if it is able to obtain the symmetric key using the required private key. Clearly, for this to work, the CA <bcp14>MUST NOT</bcp14> publish the certificate until the certConf message arrives (when certHash is to be used to demonstrate POP). See <xref target="sect-5.3.18" format="default" sectionFormat="of" derivedContent="Section 5.3.18"/> for further details, and see <xref target="sect-8.11" format="default" sectionFormat="of" derivedContent="Section 8.11"/> for security considerations regarding use of CT logs.</t>
              <t indent="0" pn="section-5.2.8.3.2-4">The recipient <bcp14>SHOULD</bcp14> maintain a context of the PKI management operation, e.g., using transactionID and certReqId, to identify the private key to use when decrypting the EnvelopedData containing the newly issued certificate. The recipient may be unable to use the RecipientInfo structure as it refers to the certificate that is still encrypted. The sender <bcp14>MUST</bcp14> populate the rid field as specified by CMS, and the client <bcp14>MAY</bcp14> ignore it.</t>
            </section>
            <section anchor="sect-5.2.8.3.3" numbered="true" removeInRFC="false" toc="exclude" pn="section-5.2.8.3.3">
              <name slugifiedName="name-direct-method-challenge-res">Direct Method - Challenge-Response Protocol</name>
              <t indent="0" pn="section-5.2.8.3.3-1">The direct method mentioned previously in <xref target="sect-4.3" format="default" sectionFormat="of" derivedContent="Section 4.3"/> demonstrates POP of the private key by having the end entity engage in a challenge-response protocol (using the messages popdecc of type POPODecKeyChall and popdecr of type POPODecKeyResp; see below) between CertReqMessages and CertRepMessage. This method is indicated in the CertRequest by requesting the challengeResp option in the subsequentMessage choice of POPOPrivKey.</t>
              <t indent="0" pn="section-5.2.8.3.3-2">Note: This method would typically be used in an environment in which an RA verifies POP and then makes a certification request to the CA on behalf of the end entity. In such a scenario, the CA trusts the RA to have done POP correctly before the RA requests a certificate for the end entity.</t>
              <t indent="0" pn="section-5.2.8.3.3-3">The complete protocol then looks as follows (note that req' does not necessarily encapsulate req as a nested message):</t>
              <artset pn="section-5.2.8.3.3-4">
                <artwork type="svg" align="left" pn="section-5.2.8.3.3-4.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="224" width="312" viewBox="0 0 312 224" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                    <path d="M 80,48 L 104,48" fill="none" stroke="black"/>
                    <path d="M 152,48 L 184,48" fill="none" stroke="black"/>
                    <path d="M 80,64 L 104,64" fill="none" stroke="black"/>
                    <path d="M 168,64 L 184,64" fill="none" stroke="black"/>
                    <path d="M 80,80 L 104,80" fill="none" stroke="black"/>
                    <path d="M 160,80 L 184,80" fill="none" stroke="black"/>
                    <path d="M 192,96 L 216,96" fill="none" stroke="black"/>
                    <path d="M 272,96 L 296,96" fill="none" stroke="black"/>
                    <path d="M 192,112 L 216,112" fill="none" stroke="black"/>
                    <path d="M 264,112 L 296,112" fill="none" stroke="black"/>
                    <path d="M 192,128 L 216,128" fill="none" stroke="black"/>
                    <path d="M 272,128 L 296,128" fill="none" stroke="black"/>
                    <path d="M 192,144 L 216,144" fill="none" stroke="black"/>
                    <path d="M 264,144 L 296,144" fill="none" stroke="black"/>
                    <path d="M 80,160 L 104,160" fill="none" stroke="black"/>
                    <path d="M 152,160 L 184,160" fill="none" stroke="black"/>
                    <path d="M 80,176 L 104,176" fill="none" stroke="black"/>
                    <path d="M 160,176 L 184,176" fill="none" stroke="black"/>
                    <path d="M 80,192 L 104,192" fill="none" stroke="black"/>
                    <path d="M 152,192 L 184,192" fill="none" stroke="black"/>
                    <polygon class="arrowhead" points="304,128 292,122.4 292,133.6" fill="black" transform="rotate(0,296,128)"/>
                    <polygon class="arrowhead" points="304,96 292,90.4 292,101.6" fill="black" transform="rotate(0,296,96)"/>
                    <polygon class="arrowhead" points="200,144 188,138.4 188,149.6" fill="black" transform="rotate(180,192,144)"/>
                    <polygon class="arrowhead" points="200,112 188,106.4 188,117.6" fill="black" transform="rotate(180,192,112)"/>
                    <polygon class="arrowhead" points="192,176 180,170.4 180,181.6" fill="black" transform="rotate(0,184,176)"/>
                    <polygon class="arrowhead" points="192,80 180,74.4 180,85.6" fill="black" transform="rotate(0,184,80)"/>
                    <polygon class="arrowhead" points="192,48 180,42.4 180,53.6" fill="black" transform="rotate(0,184,48)"/>
                    <polygon class="arrowhead" points="88,192 76,186.4 76,197.6" fill="black" transform="rotate(180,80,192)"/>
                    <polygon class="arrowhead" points="88,160 76,154.4 76,165.6" fill="black" transform="rotate(180,80,160)"/>
                    <polygon class="arrowhead" points="88,64 76,58.4 76,69.6" fill="black" transform="rotate(180,80,64)"/>
                    <g class="text">
                      <text x="16" y="36">end</text>
                      <text x="60" y="36">entity</text>
                      <text x="188" y="36">RA</text>
                      <text x="300" y="36">CA</text>
                      <text x="128" y="52">req</text>
                      <text x="136" y="68">chall</text>
                      <text x="132" y="84">resp</text>
                      <text x="244" y="100">req'</text>
                      <text x="240" y="116">rep</text>
                      <text x="244" y="132">conf</text>
                      <text x="240" y="148">ack</text>
                      <text x="128" y="164">rep</text>
                      <text x="132" y="180">conf</text>
                      <text x="128" y="196">ack</text>
                    </g>
                  </svg>
                </artwork>
                <artwork type="ascii-art" align="left" pn="section-5.2.8.3.3-4.2">
        end entity            RA            CA
                 ---- req ----&gt;
                 &lt;--- chall ---
                 ---- resp ---&gt;
                               ---- req' ---&gt;
                               &lt;--- rep -----
                               ---- conf ---&gt;
                               &lt;--- ack -----
                 &lt;--- rep -----
                 ---- conf ---&gt;
                 &lt;--- ack -----
</artwork>
              </artset>
              <t indent="0" pn="section-5.2.8.3.3-5">This protocol is obviously much longer than the exchange given in <xref target="sect-5.2.8.3.2" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.2"/> above but allows a Local Registration Authority (LRA) to be involved and has the property that the certificate itself is not actually created until the POP is complete. In some environments, a different order of the above messages may be required, such as the following (this may be determined by policy):</t>
              <artset pn="section-5.2.8.3.3-6">
                <artwork type="svg" align="left" pn="section-5.2.8.3.3-6.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="224" width="312" viewBox="0 0 312 224" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                    <path d="M 80,48 L 104,48" fill="none" stroke="black"/>
                    <path d="M 152,48 L 184,48" fill="none" stroke="black"/>
                    <path d="M 80,64 L 104,64" fill="none" stroke="black"/>
                    <path d="M 168,64 L 184,64" fill="none" stroke="black"/>
                    <path d="M 80,80 L 104,80" fill="none" stroke="black"/>
                    <path d="M 160,80 L 184,80" fill="none" stroke="black"/>
                    <path d="M 192,96 L 216,96" fill="none" stroke="black"/>
                    <path d="M 272,96 L 296,96" fill="none" stroke="black"/>
                    <path d="M 192,112 L 216,112" fill="none" stroke="black"/>
                    <path d="M 264,112 L 296,112" fill="none" stroke="black"/>
                    <path d="M 80,128 L 104,128" fill="none" stroke="black"/>
                    <path d="M 152,128 L 184,128" fill="none" stroke="black"/>
                    <path d="M 80,144 L 104,144" fill="none" stroke="black"/>
                    <path d="M 160,144 L 184,144" fill="none" stroke="black"/>
                    <path d="M 192,160 L 216,160" fill="none" stroke="black"/>
                    <path d="M 272,160 L 296,160" fill="none" stroke="black"/>
                    <path d="M 192,176 L 216,176" fill="none" stroke="black"/>
                    <path d="M 264,176 L 296,176" fill="none" stroke="black"/>
                    <path d="M 80,192 L 104,192" fill="none" stroke="black"/>
                    <path d="M 152,192 L 184,192" fill="none" stroke="black"/>
                    <polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
                    <polygon class="arrowhead" points="304,96 292,90.4 292,101.6" fill="black" transform="rotate(0,296,96)"/>
                    <polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(180,192,176)"/>
                    <polygon class="arrowhead" points="200,112 188,106.4 188,117.6" fill="black" transform="rotate(180,192,112)"/>
                    <polygon class="arrowhead" points="192,144 180,138.4 180,149.6" fill="black" transform="rotate(0,184,144)"/>
                    <polygon class="arrowhead" points="192,80 180,74.4 180,85.6" fill="black" transform="rotate(0,184,80)"/>
                    <polygon class="arrowhead" points="192,48 180,42.4 180,53.6" fill="black" transform="rotate(0,184,48)"/>
                    <polygon class="arrowhead" points="88,192 76,186.4 76,197.6" fill="black" transform="rotate(180,80,192)"/>
                    <polygon class="arrowhead" points="88,128 76,122.4 76,133.6" fill="black" transform="rotate(180,80,128)"/>
                    <polygon class="arrowhead" points="88,64 76,58.4 76,69.6" fill="black" transform="rotate(180,80,64)"/>
                    <g class="text">
                      <text x="16" y="36">end</text>
                      <text x="60" y="36">entity</text>
                      <text x="188" y="36">RA</text>
                      <text x="300" y="36">CA</text>
                      <text x="128" y="52">req</text>
                      <text x="136" y="68">chall</text>
                      <text x="132" y="84">resp</text>
                      <text x="244" y="100">req'</text>
                      <text x="240" y="116">rep</text>
                      <text x="128" y="132">rep</text>
                      <text x="132" y="148">conf</text>
                      <text x="244" y="164">conf</text>
                      <text x="240" y="180">ack</text>
                      <text x="128" y="196">ack</text>
                    </g>
                  </svg>
                </artwork>
                <artwork type="ascii-art" align="left" pn="section-5.2.8.3.3-6.2">
        end entity            RA            CA
                 ---- req ----&gt;
                 &lt;--- chall ---
                 ---- resp ---&gt;
                               ---- req' ---&gt;
                               &lt;--- rep -----
                 &lt;--- rep -----
                 ---- conf ---&gt;
                               ---- conf ---&gt;
                               &lt;--- ack -----
                 &lt;--- ack -----
</artwork>
              </artset>
              <t indent="0" pn="section-5.2.8.3.3-7">The challenge-response messages for POP of a private key are specified as follows (for decryption keys, see <xref target="MvOV97" format="default" sectionFormat="of" derivedContent="MvOV97"/>, p.404 for details).  This challenge-response exchange is associated with the preceding certification request message (and subsequent certification response and confirmation messages) by the transactionID used in the PKIHeader and by the protection applied to the PKIMessage.</t>
              <sourcecode type="asn.1" markers="false" pn="section-5.2.8.3.3-8">
   POPODecKeyChallContent ::= SEQUENCE OF Challenge

   Challenge ::= SEQUENCE {
      owf AlgorithmIdentifier OPTIONAL,
      witness OCTET STRING,
      challenge OCTET STRING, -- deprecated
      encryptedRand [0] EnvelopedData OPTIONAL
   }

   Rand ::= SEQUENCE {
      int INTEGER,
      sender GeneralName
   }
</sourcecode>
              <t indent="0" pn="section-5.2.8.3.3-9">More details on the fields in this syntax are available in <xref target="sect-f" format="default" sectionFormat="of" derivedContent="Appendix F"/>.</t>
              <t indent="0" pn="section-5.2.8.3.3-10">For a popdecc message indicating cmp2021(3) in the pvno field of the PKIHeader, the encryption of Rand <bcp14>MUST</bcp14> be transferred in the encryptedRand field in a CMS EnvelopedData structure as defined in <xref target="sect-5.2.2" format="default" sectionFormat="of" derivedContent="Section 5.2.2"/>.  The challenge field <bcp14>MUST</bcp14> contain an empty OCTET STRING.</t>
              <t indent="0" pn="section-5.2.8.3.3-11">The recipient <bcp14>SHOULD</bcp14> maintain a context of the PKI management operation, e.g., using transactionID and certReqId, to identify the private key to use when decrypting encryptedRand. The sender <bcp14>MUST</bcp14> populate the rid field in the EnvelopedData sequence using the issuerAndSerialNumber choice containing a NULL-DN as issuer and the certReqId as serialNumber. The client <bcp14>MAY</bcp14> ignore the rid field.</t>
              <t indent="0" pn="section-5.2.8.3.3-12">Note: The challenge field has been deprecated in favor of encryptedRand.  When using cmp2000(2) in the popdecc message header for backward compatibility, the challenge field <bcp14>MUST</bcp14> contain the encryption (involving the public key for which the certification request is being made) of Rand and encryptedRand <bcp14>MUST</bcp14> be omitted.  Using challenge (omitting the optional encryptedRand field) is bit-compatible with <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/>. Note that the size of Rand, when used with challenge, needs to be appropriate for encryption, involving the public key of the requester. If, in some environment, names are so long that they cannot fit (e.g., very long DNs), then whatever portion will fit should be used (as long as it includes at least the common name, and as long as the receiver is able to deal meaningfully with the abbreviation).</t>
              <sourcecode type="asn.1" markers="false" pn="section-5.2.8.3.3-13">
   POPODecKeyRespContent ::= SEQUENCE OF INTEGER
</sourcecode>
              <t indent="0" pn="section-5.2.8.3.3-14">On receiving the popdecc message, the end entity decrypts all included challenges
and responds with a popdecr message containing the decrypted integer values in the same order.</t>
            </section>
          </section>
          <section anchor="sect-5.2.8.4" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.8.4">
            <name slugifiedName="name-summary-of-pop-options">Summary of POP Options</name>
            <t indent="0" pn="section-5.2.8.4-1">The text in this section provides several options with respect to POP techniques. Using "SK" for "signing key", "EK" for "encryption key", "KAK" for "key agreement key", and "KEMK" for "key encapsulation mechanism key", the techniques may be summarized as follows:</t>
            <ul empty="true" spacing="compact" bare="false" indent="3" pn="section-5.2.8.4-2">
              <li pn="section-5.2.8.4-2.1">   RAVerified;</li>
              <li pn="section-5.2.8.4-2.2">   SKPOP;</li>
              <li pn="section-5.2.8.4-2.3">   EKPOPThisMessage; -- deprecated</li>
              <li pn="section-5.2.8.4-2.4">   KAKPOPThisMessage; -- deprecated</li>
              <li pn="section-5.2.8.4-2.5">   EKPOPEncryptedKey;</li>
              <li pn="section-5.2.8.4-2.6">   KAKPOPEncryptedKey;</li>
              <li pn="section-5.2.8.4-2.7">   KEMKPOPEncryptedKey;</li>
              <li pn="section-5.2.8.4-2.8">   KAKPOPThisMessageDHMAC;</li>
              <li pn="section-5.2.8.4-2.9">   EKPOPEncryptedCert;</li>
              <li pn="section-5.2.8.4-2.10">   KAKPOPEncryptedCert;</li>
              <li pn="section-5.2.8.4-2.11">   KEMKPOPEncryptedCert;</li>
              <li pn="section-5.2.8.4-2.12">   EKPOPChallengeResp;</li>
              <li pn="section-5.2.8.4-2.13">   KAKPOPChallengeResp; and</li>
              <li pn="section-5.2.8.4-2.14">   KEMKPOPChallengeResp.</li>
            </ul>
            <t indent="0" pn="section-5.2.8.4-3">Given this array of options, it is natural to ask how an end entity can know what is supported by the CA/RA (i.e., which options it may use when requesting certificates). The following guidelines should clarify this situation for end entity implementers.</t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-5.2.8.4-4">
              <li pn="section-5.2.8.4-4.1">RAVerified: This is not an end entity decision; the RA uses this if
              and only if it has verified POP before forwarding the request on
              to the CA, so it is not possible for the end entity to choose this
              technique.</li>
              <li pn="section-5.2.8.4-4.2">SKPOP: If the end entity has a signing key pair, this is the only POP
              method specified for use in the request for a corresponding
              certificate.</li>
              <li pn="section-5.2.8.4-4.3">EKPOPThisMessage (deprecated), KAKPOPThisMessage
              (deprecated), EKPOPEncryptedKey, KAKPOPEncryptedKey,
              KEMKPOPEncryptedKey: Whether or not to give up its private key
              to the CA/RA is an end entity decision. If the end entity decides to reveal its
              key, then these are the only POP methods available in this
              specification to achieve this (and the key pair type and
              protocol version used will determine which of these methods to
              use).  The reason for deprecating EKPOPThisMessage and
              KAKPOPThisMessage options has been given in <xref target="sect-5.2.8.3.1" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.1"/>.</li>
              <li pn="section-5.2.8.4-4.4">KAKPOPThisMessageDHMAC: The end entity can only use this method if
              (1) the CA/RA has a DH certificate available for this purpose
              and (2) the end entity already has a copy of this certificate. If both
              these conditions hold, then this technique is clearly supported
              and may be used by the end entity, if desired.</li>
              <li pn="section-5.2.8.4-4.5">EKPOPEncryptedCert, KAKPOPEncryptedCert,
              KEMKPOPEncryptedCert, EKPOPChallengeResp, KAKPOPChallengeResp,
              and KEMKPOPChallengeResp: The end entity picks one of these (in the
              subsequentMessage field) in the request message, depending upon
              preference and key pair type. The end entity is not doing POP at this
              point; it is simply indicating which method it wants to
              use. Therefore, if the CA/RA replies with a "badPOP" error, the
              end entity can re-request using the other POP method chosen in
              subsequentMessage. Note, however, that this specification
              encourages the use of the EncryptedCert choice and, furthermore,
              says that the challenge-response would typically be used when an
              RA is involved and doing POP verification. Thus, the end entity should
              be able to make an intelligent decision regarding which of these
              POP methods to choose in the request message.</li>
            </ul>
          </section>
        </section>
        <section anchor="sect-5.2.9" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.9">
          <name slugifiedName="name-generalizedtime">GeneralizedTime</name>
          <t indent="0" pn="section-5.2.9-1">GeneralizedTime is a standard ASN.1 type and <bcp14>SHALL</bcp14> be used as specified in <xref section="4.1.2.5.2" target="RFC5280" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.1.2.5.2" derivedContent="RFC5280"/>.</t>
        </section>
      </section>
      <section anchor="sect-5.3" numbered="true" removeInRFC="false" toc="include" pn="section-5.3">
        <name slugifiedName="name-operation-specific-data-str">Operation-Specific Data Structures</name>
        <section anchor="sect-5.3.1" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.1">
          <name slugifiedName="name-initialization-request">Initialization Request</name>
          <t indent="0" pn="section-5.3.1-1">An Initialization request message contains as the PKIBody a
CertReqMessages data structure, which specifies the requested
certificate(s).  Typically, SubjectPublicKeyInfo, KeyId, and Validity
are the template fields that may be supplied for each certificate
requested (see the profiles defined in <xref section="4.1.1" target="RFC9483" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9483#section-4.1.1" derivedContent="RFC9483"/> and Appendices <xref target="sect-c.4" format="counter" sectionFormat="of" derivedContent="C.4"/>
and <xref target="sect-d.7" format="counter" sectionFormat="of" derivedContent="D.7"/> for further information).  This
message is intended to be used for entities when first initializing
into the PKI.</t>
          <t indent="0" pn="section-5.3.1-2">See <xref target="sect-5.2.1" format="default" sectionFormat="of" derivedContent="Section 5.2.1"/> and <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> for CertReqMessages syntax.</t>
        </section>
        <section anchor="sect-5.3.2" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.2">
          <name slugifiedName="name-initialization-response">Initialization Response</name>
          <t indent="0" pn="section-5.3.2-1">An Initialization response message contains as the PKIBody a
CertRepMessage data structure, which has for each certificate
requested a PKIStatusInfo field, a subject certificate, and possibly
a private key (normally encrypted using EnvelopedData; see <xref section="4.1.6" target="RFC9483" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9483#section-4.1.6" derivedContent="RFC9483"/> for further information).</t>
          <t indent="0" pn="section-5.3.2-2">See <xref target="sect-5.3.4" format="default" sectionFormat="of" derivedContent="Section 5.3.4"/> for CertRepMessage syntax.  Note that if the PKI
message protection is "shared secret information" (see <xref target="sect-5.1.3.1" format="default" sectionFormat="of" derivedContent="Section 5.1.3.1"/>),
then any certificate transported in the caPubs field may be
directly trusted as a root CA certificate by the initiator.</t>
        </section>
        <section anchor="sect-5.3.3" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.3">
          <name slugifiedName="name-certification-request">Certification Request</name>
          <t indent="0" pn="section-5.3.3-1">A Certification request message contains as the PKIBody a
CertReqMessages data structure, which specifies the requested
certificates (see the profiles defined in <xref section="4.1.2" target="RFC9483" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9483#section-4.1.2" derivedContent="RFC9483"/>  and <xref target="sect-c.2" format="default" sectionFormat="of" derivedContent="Appendix C.2"/>
for further information).  This message is intended to be used for existing PKI
entities who wish to obtain additional certificates.</t>
          <t indent="0" pn="section-5.3.3-2">See <xref target="sect-5.2.1" format="default" sectionFormat="of" derivedContent="Section 5.2.1"/> and <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> for CertReqMessages syntax.</t>
          <t indent="0" pn="section-5.3.3-3">Alternatively, the PKIBody <bcp14>MAY</bcp14> be a CertificationRequest (this
structure is fully specified by the ASN.1 structure
CertificationRequest given in <xref target="RFC2986" format="default" sectionFormat="of" derivedContent="RFC2986"/>; see the profiles defined in
<xref section="4.1.4" target="RFC9483" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9483#section-4.1.4" derivedContent="RFC9483"/> for further information).
This structure may be
required for certificate requests for signing key pairs when
interoperation with legacy systems is desired, but its use is
strongly discouraged whenever not absolutely necessary.</t>
        </section>
        <section anchor="sect-5.3.4" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.4">
          <name slugifiedName="name-certification-response">Certification Response</name>
          <t indent="0" pn="section-5.3.4-1">A Certification response message contains as the PKIBody a
CertRepMessage data structure, which has a status value for each
certificate requested and optionally has a CA public key, failure
information, a subject certificate, and an encrypted private key.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.4-2">
  CertRepMessage ::= SEQUENCE {
     caPubs          [1] SEQUENCE SIZE (1..MAX) OF CMPCertificate
                         OPTIONAL,
     response            SEQUENCE OF CertResponse
  }

  CertResponse ::= SEQUENCE {
     certReqId           INTEGER,
     status              PKIStatusInfo,
     certifiedKeyPair    CertifiedKeyPair     OPTIONAL,
     rspInfo             OCTET STRING         OPTIONAL
     -- analogous to the id-regInfo-utf8Pairs string defined
     -- for regInfo in CertReqMsg [RFC4211]
  }

  CertifiedKeyPair ::= SEQUENCE {
     certOrEncCert       CertOrEncCert,
     privateKey      [0] EncryptedKey         OPTIONAL,
     -- See [RFC4211] for comments on encoding.
     publicationInfo [1] PKIPublicationInfo   OPTIONAL
  }

  CertOrEncCert ::= CHOICE {
     certificate     [0] CMPCertificate,
     encryptedCert   [1] EncryptedKey
  }
</sourcecode>
          <t indent="0" pn="section-5.3.4-3">A p10cr message contains exactly one CertificationRequestInfo data structure,
as specified in PKCS #10 <xref target="RFC2986" format="default" sectionFormat="of" derivedContent="RFC2986"/>, but no certReqId.
Therefore, the certReqId in the corresponding Certification
Response (cp) message <bcp14>MUST</bcp14> be set to -1.</t>
          <t indent="0" pn="section-5.3.4-4">Only one of the failInfo (in PKIStatusInfo) and certificate (in
CertifiedKeyPair) fields can be present in each CertResponse
(depending on the status).  For some status values (e.g., waiting),
neither of the optional fields will be present.</t>
          <t indent="0" pn="section-5.3.4-5">Given an EncryptedCert and the relevant decryption key, the
certificate may be obtained.  The purpose of this is to allow a CA to
return the value of a certificate but with the constraint that only
the intended recipient can obtain the actual certificate.  The
benefit of this approach is that a CA may reply with a certificate
even in the absence of proof that the requester is the end entity
that can use the relevant private key (note that the proof is not
obtained until the certConf message is received by the CA).  Thus,
the CA will not have to revoke that certificate in the event that
something goes wrong with the POP (but <bcp14>MAY</bcp14> do so
anyway, depending upon policy).</t>
          <t indent="0" pn="section-5.3.4-6">The use of EncryptedKey is described in <xref target="sect-5.2.2" format="default" sectionFormat="of" derivedContent="Section 5.2.2"/>.</t>
          <t indent="0" pn="section-5.3.4-7">Note: To indicate support for EnvelopedData, the pvno cmp2021 has been
introduced. Details on the usage of different protocol version
numbers are described in <xref target="sect-7" format="default" sectionFormat="of" derivedContent="Section 7"/>.</t>
        </section>
        <section anchor="sect-5.3.5" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.5">
          <name slugifiedName="name-key-update-request-content">Key Update Request Content</name>
          <t indent="0" pn="section-5.3.5-1">For key update requests, the CertReqMessages syntax is used.
Typically, SubjectPublicKeyInfo, KeyId, and Validity are the template
fields that may be supplied for each key to be updated (see the profiles
defined in <xref section="4.1.3" target="RFC9483" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9483#section-4.1.3" derivedContent="RFC9483"/> and <xref target="sect-c.6" format="default" sectionFormat="of" derivedContent="Appendix C.6"/> for further information).
This message
is intended to be used to request updates to existing (non-revoked
and non-expired) certificates (therefore, it is sometimes referred to
as a "Certificate Update" operation).  An update is a replacement
certificate containing either a new subject public key or the current
subject public key (although the latter practice may not be
appropriate for some environments).</t>
          <t indent="0" pn="section-5.3.5-2">See <xref target="sect-5.2.1" format="default" sectionFormat="of" derivedContent="Section 5.2.1"/> and <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> for CertReqMessages syntax.</t>
        </section>
        <section anchor="sect-5.3.6" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.6">
          <name slugifiedName="name-key-update-response-content">Key Update Response Content</name>
          <t indent="0" pn="section-5.3.6-1">For key update responses, the CertRepMessage syntax is used.  The
response is identical to the initialization response.</t>
          <t indent="0" pn="section-5.3.6-2">See <xref target="sect-5.3.4" format="default" sectionFormat="of" derivedContent="Section 5.3.4"/> for CertRepMessage syntax.</t>
        </section>
        <section anchor="sect-5.3.7" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.7">
          <name slugifiedName="name-key-recovery-request-conten">Key Recovery Request Content</name>
          <t indent="0" pn="section-5.3.7-1">For key recovery requests, the syntax used is identical to the
initialization request CertReqMessages.  Typically,
SubjectPublicKeyInfo and KeyId are the template fields that may be
used to supply a signature public key for which a certificate is
required.</t>
          <t indent="0" pn="section-5.3.7-2">See <xref target="sect-5.2.1" format="default" sectionFormat="of" derivedContent="Section 5.2.1"/> and <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> for CertReqMessages syntax.  Note that if a
key history is required, the requester must supply a protocol
encryption key control in the request message.</t>
        </section>
        <section anchor="sect-5.3.8" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.8">
          <name slugifiedName="name-key-recovery-response-conte">Key Recovery Response Content</name>
          <t indent="0" pn="section-5.3.8-1">For key recovery responses, the following syntax is used.  For some
status values (e.g., waiting), none of the optional fields will be
present.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.8-2">
  KeyRecRepContent ::= SEQUENCE {
     status            PKIStatusInfo,
     newSigCert    [0] Certificate                 OPTIONAL,
     caCerts       [1] SEQUENCE SIZE (1..MAX) OF
                                  Certificate      OPTIONAL,
     keyPairHist   [2] SEQUENCE SIZE (1..MAX) OF
                                  CertifiedKeyPair OPTIONAL
  }
</sourcecode>
        </section>
        <section anchor="sect-5.3.9" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.9">
          <name slugifiedName="name-revocation-request-content">Revocation Request Content</name>
          <t indent="0" pn="section-5.3.9-1">When requesting revocation of a certificate (or several
certificates), the following data structure is used (see the profiles defined
in <xref section="4.2" target="RFC9483" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9483#section-4.2" derivedContent="RFC9483"/> for further information).  The name of the
requester is present in the PKIHeader structure.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.9-2">
  RevReqContent ::= SEQUENCE OF RevDetails

  RevDetails ::= SEQUENCE {
     certDetails         CertTemplate,
     crlEntryDetails     Extensions       OPTIONAL
  }
</sourcecode>
        </section>
        <section anchor="sect-5.3.10" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.10">
          <name slugifiedName="name-revocation-response-content">Revocation Response Content</name>
          <t indent="0" pn="section-5.3.10-1">The revocation response is the response to the above message.  If
produced, this is sent to the requester of the revocation.  (A
separate revocation announcement message <bcp14>MAY</bcp14> be sent to the subject
of the certificate for which revocation was requested.)</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.10-2">
  RevRepContent ::= SEQUENCE {
     status        SEQUENCE SIZE (1..MAX) OF PKIStatusInfo,
     revCerts  [0] SEQUENCE SIZE (1..MAX) OF CertId OPTIONAL,
     crls      [1] SEQUENCE SIZE (1..MAX) OF CertificateList
                   OPTIONAL
  }
</sourcecode>
        </section>
        <section anchor="sect-5.3.11" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.11">
          <name slugifiedName="name-cross-certification-request">Cross-Certification Request Content</name>
          <t indent="0" pn="section-5.3.11-1">Cross-certification requests use the same syntax (CertReqMessages) as
normal certification requests, with the restriction that the key pair
<bcp14>MUST</bcp14> have been generated by the requesting CA and the private key
<bcp14>MUST NOT</bcp14> be sent to the responding CA (see the profiles defined in <xref target="sect-d.6" format="default" sectionFormat="of" derivedContent="Appendix D.6"/>
for further information).  This request <bcp14>MAY</bcp14> also be used
by subordinate CAs to get their certificates signed by the parent CA.</t>
          <t indent="0" pn="section-5.3.11-2">See <xref target="sect-5.2.1" format="default" sectionFormat="of" derivedContent="Section 5.2.1"/> and <xref target="RFC4211" format="default" sectionFormat="of" derivedContent="RFC4211"/> for CertReqMessages syntax.</t>
        </section>
        <section anchor="sect-5.3.12" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.12">
          <name slugifiedName="name-cross-certification-respons">Cross-Certification Response Content</name>
          <t indent="0" pn="section-5.3.12-1">Cross-certification responses use the same syntax (CertRepMessage) as
normal certification responses, with the restriction that no
encrypted private key can be sent.</t>
          <t indent="0" pn="section-5.3.12-2">See <xref target="sect-5.3.4" format="default" sectionFormat="of" derivedContent="Section 5.3.4"/> for CertRepMessage syntax.</t>
        </section>
        <section anchor="sect-5.3.13" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.13">
          <name slugifiedName="name-ca-key-update-announcement-">CA Key Update Announcement Content</name>
          <t indent="0" pn="section-5.3.13-1">When a CA updates its own key pair, the following data structure <bcp14>MAY</bcp14>
be used to announce this event.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.13-2">
  RootCaKeyUpdateContent ::= SEQUENCE {
     newWithNew              CMPCertificate,
     newWithOld          [0] CMPCertificate OPTIONAL,
     oldWithNew          [1] CMPCertificate OPTIONAL
  }

CAKeyUpdContent ::= CHOICE {
    cAKeyUpdAnnV2      CAKeyUpdAnnContent, -- deprecated
    cAKeyUpdAnnV3  [0] RootCaKeyUpdateContent
}
</sourcecode>
          <t indent="0" pn="section-5.3.13-3">When using RootCaKeyUpdateContent in the ckuann message, the pvno cmp2021 <bcp14>MUST</bcp14> be used. Details on the usage of the protocol version number are described in <xref target="sect-7" format="default" sectionFormat="of" derivedContent="Section 7"/>.</t>
          <t indent="0" pn="section-5.3.13-4">In contrast to CAKeyUpdAnnContent as supported with cmp2000, RootCaKeyUpdateContent offers omitting newWithOld and oldWithNew, depending on the needs of the end entity.</t>
        </section>
        <section anchor="sect-5.3.14" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.14">
          <name slugifiedName="name-certificate-announcement">Certificate Announcement</name>
          <t indent="0" pn="section-5.3.14-1">This structure <bcp14>MAY</bcp14> be used to announce the existence of certificates.</t>
          <t indent="0" pn="section-5.3.14-2">Note that this message is intended to be used for those cases (if
any) where there is no pre-existing method for publication of
certificates; it is not intended to be used where, for example, X.500
is the method for publication of certificates.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.14-3">
  CertAnnContent ::= Certificate
</sourcecode>
        </section>
        <section anchor="sect-5.3.15" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.15">
          <name slugifiedName="name-revocation-announcement">Revocation Announcement</name>
          <t indent="0" pn="section-5.3.15-1">When a CA has revoked, or is about to revoke, a particular
certificate, it <bcp14>MAY</bcp14> issue an announcement of this (possibly upcoming)
event.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.15-2">
  RevAnnContent ::= SEQUENCE {
     status              PKIStatus,
     certId              CertId,
     willBeRevokedAt     GeneralizedTime,
     badSinceDate        GeneralizedTime,
     crlDetails          Extensions  OPTIONAL
  }
</sourcecode>
          <t indent="0" pn="section-5.3.15-3">A CA <bcp14>MAY</bcp14> use such an announcement to warn (or notify) a subject that
its certificate is about to be (or has been) revoked.  This would
typically be used where the request for revocation did not come from
the subject concerned.</t>
          <t indent="0" pn="section-5.3.15-4">The willBeRevokedAt field contains the time at which a new entry will
be added to the relevant CRLs.</t>
        </section>
        <section anchor="sect-5.3.16" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.16">
          <name slugifiedName="name-crl-announcement">CRL Announcement</name>
          <t indent="0" pn="section-5.3.16-1">When a CA issues a new CRL (or set of CRLs), the following data
structure <bcp14>MAY</bcp14> be used to announce this event.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.16-2">
  CRLAnnContent ::= SEQUENCE OF CertificateList
</sourcecode>
        </section>
        <section anchor="sect-5.3.17" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.17">
          <name slugifiedName="name-pki-confirmation-content">PKI Confirmation Content</name>
          <t indent="0" pn="section-5.3.17-1">This data structure is used in the protocol exchange as the final
PKIMessage.  Its content is the same in all cases -- actually, there
is no content since the PKIHeader carries all the required
information.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.17-2">
  PKIConfirmContent ::= NULL
</sourcecode>
          <t indent="0" pn="section-5.3.17-3">Use of this message for certificate confirmation is <bcp14>NOT RECOMMENDED</bcp14>;
certConf <bcp14>SHOULD</bcp14> be used instead.  Upon receiving a pkiconf for a
certificate response, the recipient <bcp14>MAY</bcp14> treat it as a certConf with
all certificates being accepted.</t>
        </section>
        <section anchor="sect-5.3.18" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.18">
          <name slugifiedName="name-certificate-confirmation-co">Certificate Confirmation Content</name>
          <t indent="0" pn="section-5.3.18-1">This data structure is used by the client to send a confirmation to
the CA/RA to accept or reject certificates.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.18-2">
  CertConfirmContent ::= SEQUENCE OF CertStatus

  CertStatus ::= SEQUENCE {
     certHash    OCTET STRING,
     certReqId   INTEGER,
     statusInfo  PKIStatusInfo OPTIONAL,
     hashAlg [0] AlgorithmIdentifier{DIGEST-ALGORITHM, {...}}
                 OPTIONAL
  }
</sourcecode>
          <t indent="0" pn="section-5.3.18-3">The hashAlg field <bcp14>SHOULD</bcp14> be used only in exceptional cases where the signatureAlgorithm
of the certificate to be confirmed does not specify a hash algorithm in the
OID or in the parameters or no hash algorithm is specified for hashing certificates signed using the signatureAlgorithm. Note that for EdDSA, a hash algorithm is specified in <xref section="3.3" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-3.3" derivedContent="RFC9481"/>, such that the hashAlg field is not needed for EdDSA. Otherwise, the certHash value
<bcp14>SHALL</bcp14> be computed using the same hash algorithm as used to create and verify
the certificate signature or as specified for hashing certificates signed using the signatureAlgorithm. If hashAlg is used, the CMP version indicated
by the certConf message header must be cmp2021(3).</t>
          <t indent="0" pn="section-5.3.18-4">For any particular CertStatus, omission of the statusInfo field
indicates acceptance of the specified certificate.  Alternatively,
explicit status details (with respect to acceptance or rejection) <bcp14>MAY</bcp14>
be provided in the statusInfo field, perhaps for auditing purposes at
the CA/RA.</t>
          <t indent="0" pn="section-5.3.18-5">Within CertConfirmContent, omission of a CertStatus structure
corresponding to a certificate supplied in the previous response
message indicates rejection of the certificate.  Thus, an empty
CertConfirmContent (a zero-length SEQUENCE) <bcp14>MAY</bcp14> be used to indicate
rejection of all supplied certificates.  See <xref target="sect-5.2.8.3.2" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.2"/>
for a discussion of the certHash field with respect to
POP.</t>
        </section>
        <section anchor="sect-5.3.19" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19">
          <name slugifiedName="name-pki-general-message-content">PKI General Message Content</name>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.19-1">
  InfoTypeAndValue ::= SEQUENCE {
     infoType               OBJECT IDENTIFIER,
     infoValue              ANY DEFINED BY infoType  OPTIONAL
  }

  -- where {id-it} = {id-pkix 4} = {1 3 6 1 5 5 7 4}
  GenMsgContent ::= SEQUENCE OF InfoTypeAndValue
</sourcecode>
          <section anchor="sect-5.3.19.1" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.1">
            <name slugifiedName="name-ca-protocol-encryption-cert">CA Protocol Encryption Certificate</name>
            <t indent="0" pn="section-5.3.19.1-1">This <bcp14>MAY</bcp14> be used by the end entity to get a certificate from the CA to use to
protect sensitive information during the protocol.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.1-2">
  GenMsg:    {id-it 1}, &lt; absent &gt;
  GenRep:    {id-it 1}, Certificate | &lt; absent &gt;
</sourcecode>
            <t indent="0" pn="section-5.3.19.1-3">End entities <bcp14>MUST</bcp14> ensure that the correct certificate is used for this
purpose.</t>
          </section>
          <section anchor="sect-5.3.19.2" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.2">
            <name slugifiedName="name-signing-key-pair-types">Signing Key Pair Types</name>
            <t indent="0" pn="section-5.3.19.2-1">This <bcp14>MAY</bcp14> be used by the end entity to get the list of signature algorithms whose subject
public key values the CA is willing to
certify.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.2-2">
  GenMsg:    {id-it 2}, &lt; absent &gt;
  GenRep:    {id-it 2}, SEQUENCE SIZE (1..MAX) OF
                          AlgorithmIdentifier
</sourcecode>
            <t indent="0" pn="section-5.3.19.2-3">Note: For the purposes of this exchange, rsaEncryption and sha256WithRSAEncryption, for
example, are considered to be equivalent; the question being asked is, "Is
the CA willing to certify an RSA public key?"</t>
            <t indent="0" pn="section-5.3.19.2-4">Note: In case several elliptic curves are supported, several id-ecPublicKey elements
as defined in <xref target="RFC5480" format="default" sectionFormat="of" derivedContent="RFC5480"/> need to be given, one per named curve.</t>
          </section>
          <section anchor="sect-5.3.19.3" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.3">
            <name slugifiedName="name-encryption-key-agreement-ke">Encryption / Key Agreement Key Pair Types</name>
            <t indent="0" pn="section-5.3.19.3-1">This <bcp14>MAY</bcp14> be used by the client to get the list of encryption / key
agreement algorithms whose subject public key values the CA is
willing to certify.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.3-2">
  GenMsg:    {id-it 3}, &lt; absent &gt;
  GenRep:    {id-it 3}, SEQUENCE SIZE (1..MAX) OF
                          AlgorithmIdentifier
</sourcecode>
            <t indent="0" pn="section-5.3.19.3-3">Note: In case several elliptic curves are supported, several id-ecPublicKey elements
as defined in <xref target="RFC5480" format="default" sectionFormat="of" derivedContent="RFC5480"/> need to be given, one per named curve.</t>
          </section>
          <section anchor="sect-5.3.19.4" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.4">
            <name slugifiedName="name-preferred-symmetric-algorit">Preferred Symmetric Algorithm</name>
            <t indent="0" pn="section-5.3.19.4-1">This <bcp14>MAY</bcp14> be used by the client to get the CA-preferred symmetric
encryption algorithm for any confidential information that needs to
be exchanged between the end entity and the CA (for example, if the end entity wants
to send its private decryption key to the CA for archival purposes).</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.4-2">
  GenMsg:    {id-it 4}, &lt; absent &gt;
  GenRep:    {id-it 4}, AlgorithmIdentifier
</sourcecode>
          </section>
          <section anchor="sect-5.3.19.5" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.5">
            <name slugifiedName="name-updated-ca-key-pair">Updated CA Key Pair</name>
            <t indent="0" pn="section-5.3.19.5-1">This <bcp14>MAY</bcp14> be used by the CA to announce a CA key update event.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.5-2">
  GenMsg:    {id-it 18}, RootCaKeyUpdateValue
</sourcecode>
            <t indent="0" pn="section-5.3.19.5-3">See <xref target="sect-5.3.13" format="default" sectionFormat="of" derivedContent="Section 5.3.13"/> for details of CA key update announcements.</t>
          </section>
          <section anchor="sect-5.3.19.6" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.6">
            <name slugifiedName="name-crl">CRL</name>
            <t indent="0" pn="section-5.3.19.6-1">This <bcp14>MAY</bcp14> be used by the client to get a copy of the latest CRL.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.6-2">
  GenMsg:    {id-it 6}, &lt; absent &gt;
  GenRep:    {id-it 6}, CertificateList
</sourcecode>
          </section>
          <section anchor="sect-5.3.19.7" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.7">
            <name slugifiedName="name-unsupported-object-identifi">Unsupported Object Identifiers</name>
            <t indent="0" pn="section-5.3.19.7-1">This is used by the server to return a list of object identifiers
that it does not recognize or support from the list submitted by the
client.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.7-2">
  GenRep:    {id-it 7}, SEQUENCE SIZE (1..MAX) OF OBJECT IDENTIFIER
</sourcecode>
          </section>
          <section anchor="sect-5.3.19.8" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.8">
            <name slugifiedName="name-key-pair-parameters">Key Pair Parameters</name>
            <t indent="0" pn="section-5.3.19.8-1">This <bcp14>MAY</bcp14> be used by the end entity to request the domain parameters to use
for generating the key pair for certain public-key algorithms.  It
can be used, for example, to request the appropriate P, Q, and G to
generate the DH/DSA key or to request a set of well-known elliptic
curves.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.8-2">
  GenMsg:    {id-it 10}, OBJECT IDENTIFIER -- (Algorithm object-id)
  GenRep:    {id-it 11}, AlgorithmIdentifier | &lt; absent &gt;
</sourcecode>
            <t indent="0" pn="section-5.3.19.8-3">An absent infoValue in the GenRep indicates that the algorithm
specified in GenMsg is not supported.</t>
            <t indent="0" pn="section-5.3.19.8-4">End entities <bcp14>MUST</bcp14> ensure that the parameters are acceptable to it and that the
GenRep message is authenticated (to avoid substitution attacks).</t>
          </section>
          <section anchor="sect-5.3.19.9" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.9">
            <name slugifiedName="name-revocation-passphrase">Revocation Passphrase</name>
            <t indent="0" pn="section-5.3.19.9-1">This <bcp14>MAY</bcp14> be used by the end entity to send a passphrase to a CA/RA for the purpose
of authenticating a later revocation request (in the case that the appropriate
signing private key is no longer available to authenticate the request).
See <xref target="sect-b" format="default" sectionFormat="of" derivedContent="Appendix B"/> for further details on the use of this mechanism.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.9-2">
  GenMsg:    {id-it 12}, EncryptedKey
  GenRep:    {id-it 12}, &lt; absent &gt;
</sourcecode>
            <t indent="0" pn="section-5.3.19.9-3">The use of EncryptedKey is described in <xref target="sect-5.2.2" format="default" sectionFormat="of" derivedContent="Section 5.2.2"/>.</t>
          </section>
          <section anchor="sect-5.3.19.10" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.10">
            <name slugifiedName="name-implicitconfirm-2">ImplicitConfirm</name>
            <t indent="0" pn="section-5.3.19.10-1">See <xref target="sect-5.1.1.1" format="default" sectionFormat="of" derivedContent="Section 5.1.1.1"/> for the definition and use of {id-it 13}.</t>
          </section>
          <section anchor="sect-5.3.19.11" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.11">
            <name slugifiedName="name-confirmwaittime-2">ConfirmWaitTime</name>
            <t indent="0" pn="section-5.3.19.11-1">See <xref target="sect-5.1.1.2" format="default" sectionFormat="of" derivedContent="Section 5.1.1.2"/> for the definition and use of {id-it 14}.</t>
          </section>
          <section anchor="sect-5.3.19.12" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.12">
            <name slugifiedName="name-original-pkimessage">Original PKIMessage</name>
            <t indent="0" pn="section-5.3.19.12-1">See <xref target="sect-5.1.1.3" format="default" sectionFormat="of" derivedContent="Section 5.1.1.3"/> for the definition and use of {id-it 15}.</t>
          </section>
          <section anchor="sect-5.3.19.13" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.13">
            <name slugifiedName="name-supported-language-tags">Supported Language Tags</name>
            <t indent="0" pn="section-5.3.19.13-1">This <bcp14>MAY</bcp14> be used to determine the appropriate language tag <xref target="RFC5646" format="default" sectionFormat="of" derivedContent="RFC5646"/> to use in
subsequent messages.  The sender sends its list of supported
languages (in order of most to least preferred); the receiver returns
the one it wishes to use.  (Note: Each UTF8String <bcp14>MUST</bcp14> include a
language tag.)  If none of the offered tags are supported, an error
<bcp14>MUST</bcp14> be returned.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.13-2">
  GenMsg:    {id-it 16}, SEQUENCE SIZE (1..MAX) OF UTF8String
  GenRep:    {id-it 16}, SEQUENCE SIZE (1) OF UTF8String
</sourcecode>
          </section>
          <section anchor="sect-5.3.19.14" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.14">
            <name slugifiedName="name-ca-certificates">CA Certificates</name>
            <t indent="0" pn="section-5.3.19.14-1">This <bcp14>MAY</bcp14> be used by the client to get CA certificates.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.14-2">
  GenMsg:    {id-it 17}, &lt; absent &gt;
  GenRep:    {id-it 17}, SEQUENCE SIZE (1..MAX) OF
                           CMPCertificate | &lt; absent &gt;
</sourcecode>
          </section>
          <section anchor="sect-5.3.19.15" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.15">
            <name slugifiedName="name-root-ca-update">Root CA Update</name>
            <t indent="0" pn="section-5.3.19.15-1">This <bcp14>MAY</bcp14> be used by the client to get an update of a root CA certificate,
which is provided in the body of the request message.  In contrast to the
ckuann message, this approach follows the request/response model.</t>
            <t indent="0" pn="section-5.3.19.15-2">The end entity <bcp14>SHOULD</bcp14> reference its current trust anchor in RootCaCertValue
in the request body, giving the root CA certificate if available.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.15-3">
  GenMsg:    {id-it 20}, RootCaCertValue | &lt; absent &gt;
  GenRep:    {id-it 18}, RootCaKeyUpdateValue | &lt; absent &gt;
</sourcecode>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.15-4">
  RootCaCertValue ::= CMPCertificate

  RootCaKeyUpdateValue ::= RootCaKeyUpdateContent

  RootCaKeyUpdateContent ::= SEQUENCE {
     newWithNew              CMPCertificate,
     newWithOld          [0] CMPCertificate OPTIONAL,
     oldWithNew          [1] CMPCertificate OPTIONAL
  }
</sourcecode>
            <t indent="0" pn="section-5.3.19.15-5">Note: In contrast to CAKeyUpdAnnContent (which was deprecated with pvno cmp2021),
RootCaKeyUpdateContent offers omitting newWithOld and oldWithNew,
depending on the needs of the end entity.</t>
          </section>
          <section anchor="sect-5.3.19.16" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.16">
            <name slugifiedName="name-certificate-request-templat">Certificate Request Template</name>
            <t indent="0" pn="section-5.3.19.16-1">This <bcp14>MAY</bcp14> be used by the client to get a template containing requirements
for certificate request attributes and extensions. The controls id-regCtrl-algId
and id-regCtrl-rsaKeyLen <bcp14>MAY</bcp14> contain details on the types of subject public
keys the CA is willing to certify.</t>
            <t indent="0" pn="section-5.3.19.16-2">The id-regCtrl-algId control <bcp14>MAY</bcp14> be used to identify a cryptographic algorithm
(see <xref section="4.1.2.7" target="RFC5280" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.1.2.7" derivedContent="RFC5280"/>) other than rsaEncryption. The algorithm
field <bcp14>SHALL</bcp14> identify a cryptographic
algorithm. The contents of the optional parameters field will vary according
to the algorithm identified. For example, when the algorithm is set to id-ecPublicKey,
the parameters identify the elliptic curve to be used; see <xref target="RFC5480" format="default" sectionFormat="of" derivedContent="RFC5480"/>.</t>
            <t indent="0" pn="section-5.3.19.16-3">Note: The client may specify a profile name in the certProfile field (see <xref target="sect-5.1.1.4" format="default" sectionFormat="of" derivedContent="Section 5.1.1.4"/>).</t>
            <t indent="0" pn="section-5.3.19.16-4">The id-regCtrl-rsaKeyLen control <bcp14>SHALL</bcp14> be used for algorithm rsaEncryption
and <bcp14>SHALL</bcp14> contain the intended modulus bit length of the RSA key.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.16-5">
  GenMsg:    {id-it 19}, &lt; absent &gt;
  GenRep:    {id-it 19}, CertReqTemplateContent | &lt; absent &gt;
</sourcecode>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.16-6">
  CertReqTemplateValue  ::= CertReqTemplateContent

  CertReqTemplateContent ::= SEQUENCE {
     certTemplate           CertTemplate,
     keySpec                Controls OPTIONAL }

  Controls  ::= SEQUENCE SIZE (1..MAX) OF AttributeTypeAndValue

  id-regCtrl-algId OBJECT IDENTIFIER ::= { iso(1)
     identified-organization(3) dod(6) internet(1) security(5)
     mechanisms(5) pkix(7) pkip(5) regCtrl(1) 11 }

  AlgIdCtrl ::= AlgorithmIdentifier{ALGORITHM, {...}}

  id-regCtrl-rsaKeyLen OBJECT IDENTIFIER ::= { iso(1)
     identified-organization(3) dod(6) internet(1) security(5)
     mechanisms(5) pkix(7) pkip(5) regCtrl(1) 12 }

  RsaKeyLenCtrl ::= INTEGER (1..MAX)
</sourcecode>
            <t indent="0" pn="section-5.3.19.16-7">The CertReqTemplateValue contains the prefilled certTemplate to be used for
a future certificate request.  The publicKey field in the certTemplate <bcp14>MUST NOT</bcp14> be used.  In case the PKI management entity wishes to specify supported
public-key algorithms, the keySpec field <bcp14>MUST</bcp14> be used.  One AttributeTypeAndValue
per supported algorithm or RSA key length <bcp14>MUST</bcp14> be used.</t>
            <t indent="0" pn="section-5.3.19.16-8">Note: The controls for an ASN.1 type are defined in <xref section="6" target="RFC4211" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc4211#section-6" derivedContent="RFC4211">CRMF</xref>.</t>
          </section>
          <section anchor="sect-5.3.19.17" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.17">
            <name slugifiedName="name-crl-update-retrieval">CRL Update Retrieval</name>
            <t indent="0" pn="section-5.3.19.17-1">This <bcp14>MAY</bcp14> be used by the client to get new CRLs, specifying the source of
the CRLs and the thisUpdate value of the latest CRL it already has, if available.
A CRL source is given either by a DistributionPointName or the GeneralNames
of the issuing CA.  The DistributionPointName should be treated as an internal
pointer to identify a CRL that the server already has and not as a way to
ask the server to fetch CRLs from external locations. The server <bcp14>SHALL</bcp14> only provide
those CRLs that are more recent than the ones indicated by the client.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.17-2">
  GenMsg:    {id-it 22}, SEQUENCE SIZE (1..MAX) OF CRLStatus
  GenRep:    {id-it 23}, SEQUENCE SIZE (1..MAX) OF
                           CertificateList  |  &lt; absent &gt;
</sourcecode>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.17-3">
  CRLSource ::= CHOICE {
     dpn          [0] DistributionPointName,
     issuer       [1] GeneralNames }

  CRLStatus ::= SEQUENCE {
     source       CRLSource,
     thisUpdate   Time OPTIONAL }
</sourcecode>
          </section>
          <section anchor="sect-5.3.19.18" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.19.18">
            <name slugifiedName="name-kem-ciphertext">KEM Ciphertext</name>
            <t indent="0" pn="section-5.3.19.18-1">This <bcp14>MAY</bcp14> be used by a PKI entity to get the KEM ciphertext for MAC-based message protection using KEM (see <xref target="sect-5.1.3.4" format="default" sectionFormat="of" derivedContent="Section 5.1.3.4"/>).</t>
            <t indent="0" pn="section-5.3.19.18-2">The PKI entity that possesses a KEM key pair can request the ciphertext by sending an InfoTypeAndValue structure of type KemCiphertextInfo where the infoValue is absent. The ciphertext can be provided in the following genp message with an InfoTypeAndValue structure of the same type.</t>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.18-3">
  GenMsg:    {id-it 24}, &lt; absent &gt;
  GenRep:    {id-it 24}, KemCiphertextInfo
</sourcecode>
            <sourcecode type="asn.1" markers="false" pn="section-5.3.19.18-4">
  KemCiphertextInfo ::= SEQUENCE {
    kem              AlgorithmIdentifier{KEM-ALGORITHM, {...}},
    ct               OCTET STRING
  }
</sourcecode>
            <t indent="0" pn="section-5.3.19.18-5">kem is the algorithm identifier of the KEM algorithm, and any associated parameters, used to generate the ciphertext (ct).</t>
            <t indent="0" pn="section-5.3.19.18-6">ct is the ciphertext output from the KEM Encapsulate function.</t>
            <t indent="0" pn="section-5.3.19.18-7">Note: These InfoTypeAndValue structures can also be transferred in the generalInfo field of the PKIHeader in messages of other types (see <xref target="sect-5.1.1.5" format="default" sectionFormat="of" derivedContent="Section 5.1.1.5"/>).</t>
          </section>
        </section>
        <section anchor="sect-5.3.20" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.20">
          <name slugifiedName="name-pki-general-response-conten">PKI General Response Content</name>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.20-1">
  GenRepContent ::= SEQUENCE OF InfoTypeAndValue
</sourcecode>
          <t indent="0" pn="section-5.3.20-2">Examples of GenReps that <bcp14>MAY</bcp14> be supported include those listed in the
subsections of <xref target="sect-5.3.19" format="default" sectionFormat="of" derivedContent="Section 5.3.19"/>.</t>
        </section>
        <section anchor="sect-5.3.21" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.21">
          <name slugifiedName="name-error-message-content">Error Message Content</name>
          <t indent="0" pn="section-5.3.21-1">This data structure <bcp14>MAY</bcp14> be used by an end entity, CA, or RA to convey error information and
by a PKI management entity to initiate delayed delivery of responses.</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.21-2">
  ErrorMsgContent ::= SEQUENCE {
     pKIStatusInfo          PKIStatusInfo,
     errorCode              INTEGER           OPTIONAL,
     errorDetails           PKIFreeText       OPTIONAL
  }
</sourcecode>
          <t indent="0" pn="section-5.3.21-3">This message <bcp14>MAY</bcp14> be generated at any time during a PKI transaction. If the
client sends this request, the server <bcp14>MUST</bcp14> respond with a pkiconf response
or another error message if any part of the header is not valid.</t>
          <t indent="0" pn="section-5.3.21-4">In case a PKI management entity sends an error message to the end entity with the
pKIStatusInfo field containing the status "waiting", the end entity <bcp14>SHOULD</bcp14> initiate
polling as described in <xref target="sect-5.3.22" format="default" sectionFormat="of" derivedContent="Section 5.3.22"/>.
If the end entity does not initiate polling, both sides <bcp14>MUST</bcp14> treat this message
as the end of the transaction (if a transaction is in progress).</t>
          <t indent="0" pn="section-5.3.21-5">If protection is desired on the message, the client <bcp14>MUST</bcp14> protect it
using the same technique (i.e., signature or MAC) as the starting
message of the transaction.  The CA <bcp14>MUST</bcp14> always sign it with a
signature key.</t>
        </section>
        <section anchor="sect-5.3.22" numbered="true" removeInRFC="false" toc="include" pn="section-5.3.22">
          <name slugifiedName="name-polling-request-and-respons">Polling Request and Response</name>
          <t indent="0" pn="section-5.3.22-1">This pair of messages is intended to handle scenarios in which the client
needs to poll the server to determine the status of an outstanding response
(i.e., when the "waiting" PKIStatus has been received).</t>
          <sourcecode type="asn.1" markers="false" pn="section-5.3.22-2">
  PollReqContent ::= SEQUENCE OF SEQUENCE {
     certReqId    INTEGER }

  PollRepContent ::= SEQUENCE OF SEQUENCE {
     certReqId    INTEGER,
     checkAfter   INTEGER,  -- time in seconds
     reason       PKIFreeText OPTIONAL }
</sourcecode>
          <t indent="0" pn="section-5.3.22-3">Unless implicit confirmation has been requested and granted, in response to an ir, cr, p10cr, kur, krr, or ccr request message, polling is initiated
with an ip, cp, kup, krp, or ccp response message containing status "waiting". For
any type of request message, polling can be initiated with an error response
message with status "waiting". The following clauses describe how polling
messages are used.  It is assumed that multiple certConf messages can be
sent during transactions.  There will be one sent in response to each ip,
	  cp, kup, krp, or ccp that contains a CertStatus for an issued certificate.</t>
          <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-5.3.22-4">
	    <li pn="section-5.3.22-4.1" derivedCounter="1.">In response to an ip, cp, kup, krp, or ccp message, an end entity will
	    send a certConf for all issued certificates and expect a pkiconf
	    for each certConf.  An end entity will send a pollReq message in response
	    to each CertResponse element of an ip, cp, or kup message with
	    status "waiting" and in response to an error message with status
	    "waiting".  Its certReqId <bcp14>MUST</bcp14> be either the index
	    of a CertResponse data structure with status "waiting" or -1
	    referring to the complete response.</li>
            <li pn="section-5.3.22-4.2" derivedCounter="2.">In response to a pollReq, a CA/RA will return an ip, cp, kup,
            krp, or ccp if one or more of the still pending requested certificates
            are ready or the final response to some other type of request is
            available; otherwise, it will return a pollRep.</li>
            <li pn="section-5.3.22-4.3" derivedCounter="3.">
              <t indent="0" pn="section-5.3.22-4.3.1">If the end entity receives a pollRep, it will wait for at least the
              number of seconds given in the checkAfter field before sending
              another pollReq.</t>
              <t indent="0" pn="section-5.3.22-4.3.2">Note that the checkAfter value heavily depends on the
              certificate management environment. There are different possible reasons
              for a delayed delivery of response messages, e.g., high
              load on the server's backend, offline transfer of messages
              between two PKI management entities, or required RA operator
              approval. Therefore, the checkAfter time can vary greatly. This
              should also be considered by the transfer protocol.</t>
            </li>
            <li pn="section-5.3.22-4.4" derivedCounter="4.">If the end entity receives an ip, cp, kup, krp, or ccp, then it will
            be treated in the same way as the initial response; if it receives
            any other response, then this will be treated as the final
            response to the original request.</li>
          </ol>
          <t indent="0" pn="section-5.3.22-5">The following client-side state machine describes polling for individual
CertResponse elements at the example of an ir request message.</t>
          <artset pn="section-5.3.22-6">
            <artwork type="svg" align="left" pn="section-5.3.22-6.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="504" viewBox="0 0 504 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 32,192 L 32,224" fill="none" stroke="black"/>
                <path d="M 176,384 L 176,416" fill="none" stroke="black"/>
                <path d="M 240,48 L 240,64" fill="none" stroke="black"/>
                <path d="M 240,96 L 240,112" fill="none" stroke="black"/>
                <path d="M 240,176 L 240,224" fill="none" stroke="black"/>
                <path d="M 320,384 L 320,416" fill="none" stroke="black"/>
                <path d="M 352,336 L 352,352" fill="none" stroke="black"/>
                <path d="M 352,384 L 352,416" fill="none" stroke="black"/>
                <path d="M 400,192 L 400,224" fill="none" stroke="black"/>
                <path d="M 480,384 L 480,416" fill="none" stroke="black"/>
                <path d="M 496,144 L 496,336" fill="none" stroke="black"/>
                <path d="M 296,144 L 496,144" fill="none" stroke="black"/>
                <path d="M 32,192 L 232,192" fill="none" stroke="black"/>
                <path d="M 248,192 L 400,192" fill="none" stroke="black"/>
                <path d="M 72,240 L 160,240" fill="none" stroke="black"/>
                <path d="M 328,240 L 376,240" fill="none" stroke="black"/>
                <path d="M 352,336 L 496,336" fill="none" stroke="black"/>
                <path d="M 72,368 L 104,368" fill="none" stroke="black"/>
                <path d="M 384,368 L 464,368" fill="none" stroke="black"/>
                <path d="M 176,416 L 320,416" fill="none" stroke="black"/>
                <path d="M 352,416 L 480,416" fill="none" stroke="black"/>
                <path d="M 248,272 L 288,352" fill="none" stroke="black"/>
                <path d="M 192,352 L 232,272" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="472,368 460,362.4 460,373.6" fill="black" transform="rotate(0,464,368)"/>
                <polygon class="arrowhead" points="384,240 372,234.4 372,245.6" fill="black" transform="rotate(0,376,240)"/>
                <polygon class="arrowhead" points="360,384 348,378.4 348,389.6" fill="black" transform="rotate(270,352,384)"/>
                <polygon class="arrowhead" points="328,384 316,378.4 316,389.6" fill="black" transform="rotate(270,320,384)"/>
                <polygon class="arrowhead" points="304,144 292,138.4 292,149.6" fill="black" transform="rotate(180,296,144)"/>
                <polygon class="arrowhead" points="296,352 284,346.4 284,357.6" fill="black" transform="rotate(63.43494882292201,288,352)"/>
                <polygon class="arrowhead" points="256,192 244,186.4 244,197.6" fill="black" transform="rotate(180,248,192)"/>
                <polygon class="arrowhead" points="248,224 236,218.4 236,229.6" fill="black" transform="rotate(90,240,224)"/>
                <polygon class="arrowhead" points="248,112 236,106.4 236,117.6" fill="black" transform="rotate(90,240,112)"/>
                <polygon class="arrowhead" points="248,64 236,58.4 236,69.6" fill="black" transform="rotate(90,240,64)"/>
                <polygon class="arrowhead" points="240,192 228,186.4 228,197.6" fill="black" transform="rotate(0,232,192)"/>
                <polygon class="arrowhead" points="200,352 188,346.4 188,357.6" fill="black" transform="rotate(116.56505117707799,192,352)"/>
                <polygon class="arrowhead" points="80,368 68,362.4 68,373.6" fill="black" transform="rotate(180,72,368)"/>
                <polygon class="arrowhead" points="80,240 68,234.4 68,245.6" fill="black" transform="rotate(180,72,240)"/>
                <g class="text">
                  <text x="240" y="36">START</text>
                  <text x="228" y="84">Send</text>
                  <text x="260" y="84">ir</text>
                  <text x="260" y="100">ip</text>
                  <text x="216" y="132">Check</text>
                  <text x="268" y="132">status</text>
                  <text x="204" y="148">of</text>
                  <text x="252" y="148">returned</text>
                  <text x="240" y="164">certs</text>
                  <text x="132" y="228">(issued)</text>
                  <text x="336" y="228">(waiting)</text>
                  <text x="24" y="244">Add</text>
                  <text x="52" y="244">to</text>
                  <text x="192" y="244">Check</text>
                  <text x="268" y="244">CertResponse</text>
                  <text x="400" y="244">Add</text>
                  <text x="428" y="244">to</text>
                  <text x="20" y="260">conf</text>
                  <text x="60" y="260">list</text>
                  <text x="176" y="260">for</text>
                  <text x="212" y="260">each</text>
                  <text x="280" y="260">certificate</text>
                  <text x="400" y="260">pending</text>
                  <text x="452" y="260">list</text>
                  <text x="300" y="292">(empty</text>
                  <text x="348" y="292">conf</text>
                  <text x="392" y="292">list)</text>
                  <text x="136" y="308">(conf</text>
                  <text x="184" y="308">list)</text>
                  <text x="396" y="324">ip</text>
                  <text x="44" y="356">(empty</text>
                  <text x="104" y="356">pending</text>
                  <text x="160" y="356">list)</text>
                  <text x="416" y="356">pollRep</text>
                  <text x="48" y="372">END</text>
                  <text x="132" y="372">Send</text>
                  <text x="188" y="372">certConf</text>
                  <text x="300" y="372">Send</text>
                  <text x="352" y="372">pollReq</text>
                  <text x="484" y="372">Wait</text>
                  <text x="228" y="436">(pending</text>
                  <text x="288" y="436">list)</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="left" pn="section-5.3.22-6.2">
                            START
                              |
                              v
                           Send ir
                              | ip
                              v
                         Check status
                         of returned &lt;------------------------+
                            certs                             |
                              |                               |
    +------------------------&gt;|&lt;------------------+           |
    |                         |                   |           |
    |        (issued)         v       (waiting)   |           |
  Add to &lt;----------- Check CertResponse ------&gt; Add to       |
 conf list           for each certificate      pending list   |
                             / \                              |
                            /   \  (empty conf list)          |
               (conf list) /     \                            |
                          /       \              ip           |
                         /         \        +-----------------+
   (empty pending list) V           V       |    pollRep
     END &lt;---- Send certConf        Send pollReq----------&gt;Wait
                      |                 ^   ^               |
                      |                 |   |               |
                      +-----------------+   +---------------+
                         (pending list)
</artwork>
          </artset>
          <t indent="0" pn="section-5.3.22-7">In the following exchange, the end entity is enrolling for two certificates
in one request.</t>
          <artset pn="section-5.3.22-8">
            <artwork type="svg" align="left" pn="section-5.3.22-8.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="672" width="560" viewBox="0 0 560 672" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,48 L 552,48" fill="none" stroke="black"/>
                <path d="M 184,80 L 200,80" fill="none" stroke="black"/>
                <path d="M 288,80 L 304,80" fill="none" stroke="black"/>
                <path d="M 184,144 L 200,144" fill="none" stroke="black"/>
                <path d="M 288,144 L 304,144" fill="none" stroke="black"/>
                <path d="M 184,192 L 200,192" fill="none" stroke="black"/>
                <path d="M 288,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 184,256 L 200,256" fill="none" stroke="black"/>
                <path d="M 288,256 L 304,256" fill="none" stroke="black"/>
                <path d="M 184,304 L 200,304" fill="none" stroke="black"/>
                <path d="M 288,304 L 304,304" fill="none" stroke="black"/>
                <path d="M 184,368 L 200,368" fill="none" stroke="black"/>
                <path d="M 288,368 L 304,368" fill="none" stroke="black"/>
                <path d="M 184,416 L 200,416" fill="none" stroke="black"/>
                <path d="M 288,416 L 304,416" fill="none" stroke="black"/>
                <path d="M 184,464 L 200,464" fill="none" stroke="black"/>
                <path d="M 288,464 L 304,464" fill="none" stroke="black"/>
                <path d="M 184,496 L 200,496" fill="none" stroke="black"/>
                <path d="M 288,496 L 304,496" fill="none" stroke="black"/>
                <path d="M 184,560 L 200,560" fill="none" stroke="black"/>
                <path d="M 288,560 L 304,560" fill="none" stroke="black"/>
                <path d="M 184,608 L 200,608" fill="none" stroke="black"/>
                <path d="M 288,608 L 304,608" fill="none" stroke="black"/>
                <path d="M 184,656 L 200,656" fill="none" stroke="black"/>
                <path d="M 288,656 L 304,656" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,608 300,602.4 300,613.6" fill="black" transform="rotate(0,304,608)"/>
                <polygon class="arrowhead" points="312,496 300,490.4 300,501.6" fill="black" transform="rotate(0,304,496)"/>
                <polygon class="arrowhead" points="312,416 300,410.4 300,421.6" fill="black" transform="rotate(0,304,416)"/>
                <polygon class="arrowhead" points="312,304 300,298.4 300,309.6" fill="black" transform="rotate(0,304,304)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,80 300,74.4 300,85.6" fill="black" transform="rotate(0,304,80)"/>
                <polygon class="arrowhead" points="296,656 284,650.4 284,661.6" fill="black" transform="rotate(180,288,656)"/>
                <polygon class="arrowhead" points="296,560 284,554.4 284,565.6" fill="black" transform="rotate(180,288,560)"/>
                <polygon class="arrowhead" points="296,464 284,458.4 284,469.6" fill="black" transform="rotate(180,288,464)"/>
                <polygon class="arrowhead" points="296,368 284,362.4 284,373.6" fill="black" transform="rotate(180,288,368)"/>
                <polygon class="arrowhead" points="296,256 284,250.4 284,261.6" fill="black" transform="rotate(180,288,256)"/>
                <polygon class="arrowhead" points="296,144 284,138.4 284,149.6" fill="black" transform="rotate(180,288,144)"/>
                <polygon class="arrowhead" points="208,608 196,602.4 196,613.6" fill="black" transform="rotate(0,200,608)"/>
                <polygon class="arrowhead" points="208,496 196,490.4 196,501.6" fill="black" transform="rotate(0,200,496)"/>
                <polygon class="arrowhead" points="208,416 196,410.4 196,421.6" fill="black" transform="rotate(0,200,416)"/>
                <polygon class="arrowhead" points="208,304 196,298.4 196,309.6" fill="black" transform="rotate(0,200,304)"/>
                <polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
                <polygon class="arrowhead" points="208,80 196,74.4 196,85.6" fill="black" transform="rotate(0,200,80)"/>
                <polygon class="arrowhead" points="192,656 180,650.4 180,661.6" fill="black" transform="rotate(180,184,656)"/>
                <polygon class="arrowhead" points="192,560 180,554.4 180,565.6" fill="black" transform="rotate(180,184,560)"/>
                <polygon class="arrowhead" points="192,464 180,458.4 180,469.6" fill="black" transform="rotate(180,184,464)"/>
                <polygon class="arrowhead" points="192,368 180,362.4 180,373.6" fill="black" transform="rotate(180,184,368)"/>
                <polygon class="arrowhead" points="192,256 180,250.4 180,261.6" fill="black" transform="rotate(180,184,256)"/>
                <polygon class="arrowhead" points="192,144 180,138.4 180,149.6" fill="black" transform="rotate(180,184,144)"/>
                <g class="text">
                  <text x="24" y="36">Step#</text>
                  <text x="64" y="36">End</text>
                  <text x="108" y="36">entity</text>
                  <text x="328" y="36">PKI</text>
                  <text x="24" y="68">1</text>
                  <text x="76" y="68">format</text>
                  <text x="116" y="68">ir</text>
                  <text x="24" y="84">2</text>
                  <text x="220" y="84">ir</text>
                  <text x="24" y="100">3</text>
                  <text x="340" y="100">handle</text>
                  <text x="380" y="100">ir</text>
                  <text x="24" y="116">4</text>
                  <text x="340" y="116">manual</text>
                  <text x="420" y="116">intervention</text>
                  <text x="484" y="116">is</text>
                  <text x="364" y="132">required</text>
                  <text x="416" y="132">for</text>
                  <text x="452" y="132">both</text>
                  <text x="496" y="132">certs</text>
                  <text x="24" y="148">5</text>
                  <text x="220" y="148">ip</text>
                  <text x="24" y="164">6</text>
                  <text x="80" y="164">process</text>
                  <text x="124" y="164">ip</text>
                  <text x="24" y="180">7</text>
                  <text x="76" y="180">format</text>
                  <text x="136" y="180">pollReq</text>
                  <text x="24" y="196">8</text>
                  <text x="240" y="196">pollReq</text>
                  <text x="24" y="212">9</text>
                  <text x="336" y="212">check</text>
                  <text x="388" y="212">status</text>
                  <text x="428" y="212">of</text>
                  <text x="460" y="212">cert</text>
                  <text x="520" y="212">requests,</text>
                  <text x="380" y="228">certificates</text>
                  <text x="448" y="228">not</text>
                  <text x="488" y="228">ready</text>
                  <text x="20" y="244">10</text>
                  <text x="340" y="244">format</text>
                  <text x="400" y="244">pollRep</text>
                  <text x="20" y="260">11</text>
                  <text x="240" y="260">pollRep</text>
                  <text x="20" y="276">12</text>
                  <text x="68" y="276">wait</text>
                  <text x="20" y="292">13</text>
                  <text x="76" y="292">format</text>
                  <text x="136" y="292">pollReq</text>
                  <text x="20" y="308">14</text>
                  <text x="240" y="308">pollReq</text>
                  <text x="20" y="324">15</text>
                  <text x="336" y="324">check</text>
                  <text x="388" y="324">status</text>
                  <text x="428" y="324">of</text>
                  <text x="460" y="324">cert</text>
                  <text x="520" y="324">requests,</text>
                  <text x="344" y="340">one</text>
                  <text x="408" y="340">certificate</text>
                  <text x="468" y="340">is</text>
                  <text x="504" y="340">ready</text>
                  <text x="20" y="356">16</text>
                  <text x="340" y="356">format</text>
                  <text x="380" y="356">ip</text>
                  <text x="20" y="372">17</text>
                  <text x="220" y="372">ip</text>
                  <text x="20" y="388">18</text>
                  <text x="76" y="388">handle</text>
                  <text x="116" y="388">ip</text>
                  <text x="20" y="404">19</text>
                  <text x="76" y="404">format</text>
                  <text x="140" y="404">certConf</text>
                  <text x="20" y="420">20</text>
                  <text x="244" y="420">certConf</text>
                  <text x="20" y="436">21</text>
                  <text x="340" y="436">handle</text>
                  <text x="404" y="436">certConf</text>
                  <text x="20" y="452">22</text>
                  <text x="340" y="452">format</text>
                  <text x="384" y="452">ack</text>
                  <text x="20" y="468">23</text>
                  <text x="240" y="468">pkiconf</text>
                  <text x="20" y="484">24</text>
                  <text x="76" y="484">format</text>
                  <text x="136" y="484">pollReq</text>
                  <text x="20" y="500">25</text>
                  <text x="240" y="500">pollReq</text>
                  <text x="20" y="516">26</text>
                  <text x="336" y="516">check</text>
                  <text x="388" y="516">status</text>
                  <text x="428" y="516">of</text>
                  <text x="492" y="516">certificate,</text>
                  <text x="376" y="532">certificate</text>
                  <text x="436" y="532">is</text>
                  <text x="472" y="532">ready</text>
                  <text x="20" y="548">27</text>
                  <text x="340" y="548">format</text>
                  <text x="380" y="548">ip</text>
                  <text x="20" y="564">28</text>
                  <text x="220" y="564">ip</text>
                  <text x="20" y="580">29</text>
                  <text x="76" y="580">handle</text>
                  <text x="116" y="580">ip</text>
                  <text x="20" y="596">30</text>
                  <text x="76" y="596">format</text>
                  <text x="140" y="596">certConf</text>
                  <text x="20" y="612">31</text>
                  <text x="244" y="612">certConf</text>
                  <text x="20" y="628">32</text>
                  <text x="340" y="628">handle</text>
                  <text x="404" y="628">certConf</text>
                  <text x="20" y="644">33</text>
                  <text x="340" y="644">format</text>
                  <text x="384" y="644">ack</text>
                  <text x="20" y="660">34</text>
                  <text x="240" y="660">pkiconf</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="left" pn="section-5.3.22-8.2">
Step# End entity                       PKI
---------------------------------------------------------------------
  1   format ir
  2                   --&gt; ir       --&gt;
  3                                    handle ir
  4                                    manual intervention is
                                         required for both certs
  5                   &lt;-- ip       &lt;--
  6   process ip
  7   format pollReq
  8                   --&gt; pollReq  --&gt;
  9                                    check status of cert requests,
                                         certificates not ready
 10                                    format pollRep
 11                   &lt;-- pollRep  &lt;--
 12   wait
 13   format pollReq
 14                   --&gt; pollReq  --&gt;
 15                                    check status of cert requests,
                                         one certificate is ready
 16                                    format ip
 17                   &lt;-- ip       &lt;--
 18   handle ip
 19   format certConf
 20                   --&gt; certConf --&gt;
 21                                    handle certConf
 22                                    format ack
 23                   &lt;-- pkiconf  &lt;--
 24   format pollReq
 25                   --&gt; pollReq  --&gt;
 26                                    check status of certificate,
                                         certificate is ready
 27                                    format ip
 28                   &lt;-- ip       &lt;--
 29   handle ip
 30   format certConf
 31                   --&gt; certConf --&gt;
 32                                    handle certConf
 33                                    format ack
 34                   &lt;-- pkiconf  &lt;--
</artwork>
          </artset>
          <t indent="0" pn="section-5.3.22-9">The following client-side state machine describes polling for a complete
response message.</t>
          <artset pn="section-5.3.22-10">
            <artwork type="svg" align="left" pn="section-5.3.22-10.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="416" width="520" viewBox="0 0 520 416" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,192 L 8,288" fill="none" stroke="black"/>
                <path d="M 104,96 L 104,176" fill="none" stroke="black"/>
                <path d="M 104,208 L 104,280" fill="none" stroke="black"/>
                <path d="M 272,48 L 272,80" fill="none" stroke="black"/>
                <path d="M 272,288 L 272,320" fill="none" stroke="black"/>
                <path d="M 272,352 L 272,368" fill="none" stroke="black"/>
                <path d="M 440,96 L 440,288" fill="none" stroke="black"/>
                <path d="M 104,96 L 192,96" fill="none" stroke="black"/>
                <path d="M 344,96 L 440,96" fill="none" stroke="black"/>
                <path d="M 8,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 8,288 L 264,288" fill="none" stroke="black"/>
                <path d="M 280,288 L 440,288" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="288,288 276,282.4 276,293.6" fill="black" transform="rotate(180,280,288)"/>
                <polygon class="arrowhead" points="280,368 268,362.4 268,373.6" fill="black" transform="rotate(90,272,368)"/>
                <polygon class="arrowhead" points="280,320 268,314.4 268,325.6" fill="black" transform="rotate(90,272,320)"/>
                <polygon class="arrowhead" points="280,80 268,74.4 268,85.6" fill="black" transform="rotate(90,272,80)"/>
                <polygon class="arrowhead" points="272,288 260,282.4 260,293.6" fill="black" transform="rotate(0,264,288)"/>
                <polygon class="arrowhead" points="112,280 100,274.4 100,285.6" fill="black" transform="rotate(90,104,280)"/>
                <polygon class="arrowhead" points="112,176 100,170.4 100,181.6" fill="black" transform="rotate(90,104,176)"/>
                <polygon class="arrowhead" points="72,192 60,186.4 60,197.6" fill="black" transform="rotate(0,64,192)"/>
                <g class="text">
                  <text x="272" y="36">Start</text>
                  <text x="300" y="68">Send</text>
                  <text x="352" y="68">request</text>
                  <text x="232" y="100">Receive</text>
                  <text x="300" y="100">response</text>
                  <text x="208" y="132">ip/cp/kup/krp/ccp/error</text>
                  <text x="324" y="132">with</text>
                  <text x="472" y="132">other</text>
                  <text x="140" y="148">status</text>
                  <text x="208" y="148">"waiting"</text>
                  <text x="484" y="148">response</text>
                  <text x="104" y="196">Polling</text>
                  <text x="132" y="228">Send</text>
                  <text x="184" y="228">pollReq</text>
                  <text x="144" y="244">Receive</text>
                  <text x="212" y="244">response</text>
                  <text x="64" y="308">pollRep</text>
                  <text x="136" y="308">other</text>
                  <text x="196" y="308">response</text>
                  <text x="244" y="340">Handle</text>
                  <text x="308" y="340">response</text>
                  <text x="272" y="388">End</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="left" pn="section-5.3.22-10.2">
                                Start
                                  |
                                  | Send request
                                  v
             +----------- Receive response ------------+
             |                                         |
             | ip/cp/kup/krp/ccp/error with            | other
             | status "waiting"                        | response
             |                                         |
             v                                         |
 +------&gt; Polling                                      |
 |           |                                         |
 |           | Send pollReq                            |
 |           | Receive response                        |
 |           |                                         |
 |           v                                         |
 +-----------+-------------------&gt;+&lt;-------------------+
     pollRep   other response     |
                                  v
                            Handle response
                                  |
                                  v
                                 End
</artwork>
          </artset>
          <t indent="0" pn="section-5.3.22-11">In the following exchange, the end entity is sending a general message request,
and the response is delayed by the server.</t>
          <artset pn="section-5.3.22-12">
            <artwork type="svg" align="left" pn="section-5.3.22-12.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="448" width="560" viewBox="0 0 560 448" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,48 L 552,48" fill="none" stroke="black"/>
                <path d="M 176,80 L 192,80" fill="none" stroke="black"/>
                <path d="M 272,80 L 288,80" fill="none" stroke="black"/>
                <path d="M 176,160 L 192,160" fill="none" stroke="black"/>
                <path d="M 272,160 L 288,160" fill="none" stroke="black"/>
                <path d="M 176,208 L 192,208" fill="none" stroke="black"/>
                <path d="M 272,208 L 288,208" fill="none" stroke="black"/>
                <path d="M 176,288 L 192,288" fill="none" stroke="black"/>
                <path d="M 272,288 L 288,288" fill="none" stroke="black"/>
                <path d="M 176,336 L 192,336" fill="none" stroke="black"/>
                <path d="M 272,336 L 288,336" fill="none" stroke="black"/>
                <path d="M 176,416 L 192,416" fill="none" stroke="black"/>
                <path d="M 272,416 L 288,416" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="296,336 284,330.4 284,341.6" fill="black" transform="rotate(0,288,336)"/>
                <polygon class="arrowhead" points="296,208 284,202.4 284,213.6" fill="black" transform="rotate(0,288,208)"/>
                <polygon class="arrowhead" points="296,80 284,74.4 284,85.6" fill="black" transform="rotate(0,288,80)"/>
                <polygon class="arrowhead" points="280,416 268,410.4 268,421.6" fill="black" transform="rotate(180,272,416)"/>
                <polygon class="arrowhead" points="280,288 268,282.4 268,293.6" fill="black" transform="rotate(180,272,288)"/>
                <polygon class="arrowhead" points="280,160 268,154.4 268,165.6" fill="black" transform="rotate(180,272,160)"/>
                <polygon class="arrowhead" points="200,336 188,330.4 188,341.6" fill="black" transform="rotate(0,192,336)"/>
                <polygon class="arrowhead" points="200,208 188,202.4 188,213.6" fill="black" transform="rotate(0,192,208)"/>
                <polygon class="arrowhead" points="200,80 188,74.4 188,85.6" fill="black" transform="rotate(0,192,80)"/>
                <polygon class="arrowhead" points="184,416 172,410.4 172,421.6" fill="black" transform="rotate(180,176,416)"/>
                <polygon class="arrowhead" points="184,288 172,282.4 172,293.6" fill="black" transform="rotate(180,176,288)"/>
                <polygon class="arrowhead" points="184,160 172,154.4 172,165.6" fill="black" transform="rotate(180,176,160)"/>
                <g class="text">
                  <text x="24" y="36">Step#</text>
                  <text x="64" y="36">End</text>
                  <text x="108" y="36">entity</text>
                  <text x="328" y="36">PKI</text>
                  <text x="24" y="68">1</text>
                  <text x="76" y="68">format</text>
                  <text x="124" y="68">genm</text>
                  <text x="24" y="84">2</text>
                  <text x="220" y="84">genm</text>
                  <text x="24" y="100">3</text>
                  <text x="316" y="100">handle</text>
                  <text x="364" y="100">genm</text>
                  <text x="24" y="116">4</text>
                  <text x="312" y="116">delay</text>
                  <text x="348" y="116">in</text>
                  <text x="396" y="116">response</text>
                  <text x="444" y="116">is</text>
                  <text x="496" y="116">necessary</text>
                  <text x="24" y="132">5</text>
                  <text x="316" y="132">format</text>
                  <text x="368" y="132">error</text>
                  <text x="424" y="132">message</text>
                  <text x="496" y="132">"waiting"</text>
                  <text x="324" y="148">with</text>
                  <text x="384" y="148">certReqId</text>
                  <text x="440" y="148">set</text>
                  <text x="468" y="148">to</text>
                  <text x="492" y="148">-1</text>
                  <text x="24" y="164">6</text>
                  <text x="224" y="164">error</text>
                  <text x="24" y="180">7</text>
                  <text x="80" y="180">process</text>
                  <text x="136" y="180">error</text>
                  <text x="24" y="196">8</text>
                  <text x="76" y="196">format</text>
                  <text x="136" y="196">pollReq</text>
                  <text x="24" y="212">9</text>
                  <text x="232" y="212">pollReq</text>
                  <text x="20" y="228">10</text>
                  <text x="312" y="228">check</text>
                  <text x="364" y="228">status</text>
                  <text x="404" y="228">of</text>
                  <text x="452" y="228">original</text>
                  <text x="524" y="228">request,</text>
                  <text x="336" y="244">general</text>
                  <text x="400" y="244">message</text>
                  <text x="468" y="244">response</text>
                  <text x="520" y="244">not</text>
                  <text x="328" y="260">ready</text>
                  <text x="20" y="276">11</text>
                  <text x="316" y="276">format</text>
                  <text x="376" y="276">pollRep</text>
                  <text x="20" y="292">12</text>
                  <text x="232" y="292">pollRep</text>
                  <text x="20" y="308">13</text>
                  <text x="68" y="308">wait</text>
                  <text x="20" y="324">14</text>
                  <text x="76" y="324">format</text>
                  <text x="136" y="324">pollReq</text>
                  <text x="20" y="340">15</text>
                  <text x="232" y="340">pollReq</text>
                  <text x="20" y="356">16</text>
                  <text x="312" y="356">check</text>
                  <text x="364" y="356">status</text>
                  <text x="404" y="356">of</text>
                  <text x="452" y="356">original</text>
                  <text x="524" y="356">request,</text>
                  <text x="336" y="372">general</text>
                  <text x="400" y="372">message</text>
                  <text x="468" y="372">response</text>
                  <text x="516" y="372">is</text>
                  <text x="328" y="388">ready</text>
                  <text x="20" y="404">17</text>
                  <text x="316" y="404">format</text>
                  <text x="364" y="404">genp</text>
                  <text x="20" y="420">18</text>
                  <text x="220" y="420">genp</text>
                  <text x="20" y="436">19</text>
                  <text x="76" y="436">handle</text>
                  <text x="124" y="436">genp</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="left" pn="section-5.3.22-12.2">
Step# End entity                       PKI
---------------------------------------------------------------------
  1   format genm
  2                  --&gt; genm    --&gt;
  3                                 handle genm
  4                                 delay in response is necessary
  5                                 format error message "waiting"
                                      with certReqId set to -1
  6                  &lt;-- error   &lt;--
  7   process error
  8   format pollReq
  9                  --&gt; pollReq --&gt;
 10                                 check status of original request,
                                      general message response not
                                      ready
 11                                 format pollRep
 12                  &lt;-- pollRep &lt;--
 13   wait
 14   format pollReq
 15                  --&gt; pollReq --&gt;
 16                                 check status of original request,
                                      general message response is
                                      ready
 17                                 format genp
 18                  &lt;-- genp    &lt;--
 19   handle genp
</artwork>
          </artset>
        </section>
      </section>
    </section>
    <section anchor="sect-6" numbered="true" removeInRFC="false" toc="include" pn="section-6">
      <name slugifiedName="name-mandatory-pki-management-fu">Mandatory PKI Management Functions</name>
      <t indent="0" pn="section-6-1">Some of the PKI management functions outlined in <xref target="sect-3.1" format="default" sectionFormat="of" derivedContent="Section 3.1"/> are
described in this section.</t>
      <t indent="0" pn="section-6-2">This section deals with functions that are "mandatory" in the sense
that all end entity and CA/RA implementations <bcp14>MUST</bcp14> be able to provide
the functionality described.  This part is effectively the profile of
the PKI management functionality that <bcp14>MUST</bcp14> be supported.  Note,
however, that the management functions described in this section do
not need to be accomplished using the PKI messages defined in <xref target="sect-5" format="default" sectionFormat="of" derivedContent="Section 5"/>
if alternate means are suitable for a given environment. See
<xref section="7" target="RFC9483" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9483#section-7" derivedContent="RFC9483"/> and <xref target="sect-c" format="default" sectionFormat="of" derivedContent="Appendix C"/> for profiles of the PKIMessage structures
that <bcp14>MUST</bcp14> be supported for specific use cases.</t>
      <section anchor="sect-6.1" numbered="true" removeInRFC="false" toc="include" pn="section-6.1">
        <name slugifiedName="name-root-ca-initialization">Root CA Initialization</name>
        <t indent="0" pn="section-6.1-1">[See <xref target="sect-3.1.1.2" format="default" sectionFormat="of" derivedContent="Section 3.1.1.2"/> for this document's definition of "root CA".]</t>
        <t indent="0" pn="section-6.1-2">If a newly created root CA is at the top of a PKI hierarchy, it usually
produces a "self-certificate", which is a
certificate structure with the profile defined for the "newWithNew"
certificate issued following a root CA key update.</t>
        <t indent="0" pn="section-6.1-3">In order to make the CA's self-certificate useful to end entities
that do not acquire the self-certificate via "out-of-band" means, the
CA must also produce a fingerprint for its certificate.  End entities
that acquire this fingerprint securely via some "out-of-band" means
can then verify the CA's self-certificate and, hence, the other
attributes contained therein.</t>
        <t indent="0" pn="section-6.1-4">The data structure used to carry the fingerprint may be the OOBCertHash (see <xref target="sect-5.2.5" format="default" sectionFormat="of" derivedContent="Section 5.2.5"/>).</t>
      </section>
      <section anchor="sect-6.2" numbered="true" removeInRFC="false" toc="include" pn="section-6.2">
        <name slugifiedName="name-root-ca-key-update-2">Root CA Key Update</name>
        <t indent="0" pn="section-6.2-1">CA keys (as all other keys) have a finite lifetime and will have to
be updated on a periodic basis.  The certificates NewWithNew,
NewWithOld, and OldWithNew (see <xref target="sect-4.4.1" format="default" sectionFormat="of" derivedContent="Section 4.4.1"/>) <bcp14>MAY</bcp14> be issued by the
CA to aid existing end entities who hold the current root CA
certificate (OldWithOld) to transition securely to the new root
CA certificate (NewWithNew) and to aid new end entities who
will hold NewWithNew to acquire OldWithOld securely for verification
of existing data.</t>
      </section>
      <section anchor="sect-6.3" numbered="true" removeInRFC="false" toc="include" pn="section-6.3">
        <name slugifiedName="name-subordinate-ca-initializati">Subordinate CA Initialization</name>
        <t indent="0" pn="section-6.3-1">[See <xref target="sect-3.1.1.2" format="default" sectionFormat="of" derivedContent="Section 3.1.1.2"/> for this document's definition of "subordinate CA".]</t>
        <t indent="0" pn="section-6.3-2">From the perspective of PKI management protocols, the initialization of a
subordinate CA is the same as the initialization of an end entity.  The only
difference is that the subordinate CA must also produce an initial revocation
list.</t>
      </section>
      <section anchor="sect-6.4" numbered="true" removeInRFC="false" toc="include" pn="section-6.4">
        <name slugifiedName="name-crl-production">CRL Production</name>
        <t indent="0" pn="section-6.4-1">Before issuing any certificates, a newly established CA (which issues
CRLs) must produce "empty" versions of each CRL, which are to be
periodically produced.</t>
      </section>
      <section anchor="sect-6.5" numbered="true" removeInRFC="false" toc="include" pn="section-6.5">
        <name slugifiedName="name-pki-information-request">PKI Information Request</name>
        <t indent="0" pn="section-6.5-1">When a PKI entity (CA, RA, or end entity) wishes to acquire information about
the current status of a CA, it <bcp14>MAY</bcp14> send that CA a request for such
information.</t>
        <t indent="0" pn="section-6.5-2">The CA <bcp14>MUST</bcp14> respond to the request by providing (at least) all of the
information requested by the requester.  If some of the information
cannot be provided, then an error must be conveyed to the requester.</t>
        <t indent="0" pn="section-6.5-3">If PKIMessages are used to request and supply this PKI information,
then the request <bcp14>MUST</bcp14> be the GenMsg message, the response <bcp14>MUST</bcp14> be the
GenRep message, and the error <bcp14>MUST</bcp14> be the Error message.  These
messages are protected using a MAC based on shared secret information
(e.g., password-based MAC; see <xref section="6.1" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-6.1" derivedContent="RFC9481">"CMP Algorithms"</xref>) or using any asymmetric authentication means such as a
signature (if the end entity has an existing certificate).</t>
      </section>
      <section anchor="sect-6.6" numbered="true" removeInRFC="false" toc="include" pn="section-6.6">
        <name slugifiedName="name-cross-certification">Cross-Certification</name>
        <t indent="0" pn="section-6.6-1">The requester CA is the CA that will become the subject of the
cross-certificate; the responder CA will become the issuer of the
cross-certificate.</t>
        <t indent="0" pn="section-6.6-2">The requester CA must be "up and running" before initiating the
cross-certification operation.</t>
        <section anchor="sect-6.6.1" numbered="true" removeInRFC="false" toc="include" pn="section-6.6.1">
          <name slugifiedName="name-one-way-request-response-sc">One-Way Request-Response Scheme</name>
          <t indent="0" pn="section-6.6.1-1">The cross-certification scheme is essentially a one-way operation;
that is, when successful, this operation results in the creation of
one new cross-certificate.  If the requirement is that cross-certificates
be created in "both directions", then each CA, in turn,
must initiate a cross-certification operation (or use another
scheme).</t>
          <t indent="0" pn="section-6.6.1-2">This scheme is suitable where the two CAs in question can already
verify each other's signatures (they have some common points of
trust) or where there is an out-of-band verification of the origin of
the certification request.</t>
          <t indent="0" pn="section-6.6.1-3">Detailed Description:</t>
          <t indent="3" pn="section-6.6.1-4">Cross-certification is initiated at one CA known as the responder.
The CA administrator for the responder identifies the CA it wants to
cross-certify and the responder CA equipment generates an
authorization code.  The responder CA administrator passes this
authorization code by out-of-band means to the requester CA
administrator.  The requester CA administrator enters the
authorization code at the requester CA in order to initiate the
online exchange.</t>
          <t indent="3" pn="section-6.6.1-5">The authorization code is used for authentication and integrity
purposes.  This is done by generating a symmetric key based on the
authorization code and using the symmetric key for generating MACs on all messages exchanged.
(Authentication may alternatively be done using signatures instead of
MACs, if the CAs are able to retrieve and validate the required
public keys by some means, such as an out-of-band hash comparison.)</t>
          <t indent="3" pn="section-6.6.1-6">The requester CA initiates the exchange by generating a cross-certification
request (ccr) with a fresh random number (requester random number).
The requester CA then sends the ccr message to the responder CA.
The fields in this message are protected from modification with a
MAC based on the authorization code.</t>
          <t indent="3" pn="section-6.6.1-7">Upon receipt of the ccr message, the responder CA validates the
message and the MAC, saves the requester random number, and generates
its own random number (responder random number).  It then generates
(and archives, if desired) a new requester certificate that contains
the requester CA public key and is signed with the responder CA
signature private key.  The responder CA responds with the cross-certification response (ccp) message.  The fields in this message are
protected from modification with a MAC based on the authorization
code.</t>
          <t indent="3" pn="section-6.6.1-8">Upon receipt of the ccp message, the requester CA validates the
message (including the received random numbers) and the MAC.  The
requester CA responds with the certConf message.  The fields in this
message are protected from modification with a MAC based on the
authorization code.  The requester CA <bcp14>MAY</bcp14> write the requester
certificate to the Repository as an aid to later certificate path
construction.</t>
          <t indent="3" pn="section-6.6.1-9">Upon receipt of the certConf message, the responder CA validates the
message and the MAC and sends back an acknowledgement using the
pkiconf message.  It <bcp14>MAY</bcp14> also publish the requester certificate as
an aid to later path construction.</t>
          <t indent="0" pn="section-6.6.1-10">Notes:</t>
          <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-6.6.1-11"><li pn="section-6.6.1-11.1" derivedCounter="1.">
              <t indent="0" pn="section-6.6.1-11.1.1">The ccr message must contain a "complete" certification request;
  that is, all fields except the serial number (including, e.g., a
  BasicConstraints extension) must be specified by the requester
  CA.</t>
            </li>
            <li pn="section-6.6.1-11.2" derivedCounter="2.">
              <t indent="0" pn="section-6.6.1-11.2.1">The ccp message <bcp14>SHOULD</bcp14> contain the verification certificate of
  the responder CA; if present, the requester CA must then verify
  this certificate (for example, via the "out-of-band" mechanism).</t>
            </li>
          </ol>
          <t indent="0" pn="section-6.6.1-12">(A simpler, non-interactive model of cross-certification may also be
envisioned, in which the issuing CA acquires the subject CA's public
key from some repository, verifies it via some out-of-band mechanism,
and creates and publishes the cross-certificate without the subject
CA's explicit involvement.  This model may be perfectly legitimate
for many environments, but since it does not require any protocol
message exchanges, its detailed description is outside the scope of
this specification.)</t>
        </section>
      </section>
      <section anchor="sect-6.7" numbered="true" removeInRFC="false" toc="include" pn="section-6.7">
        <name slugifiedName="name-end-entity-initialization-2">End Entity Initialization</name>
        <t indent="0" pn="section-6.7-1">As with CAs, end entities must be initialized.  Initialization of end entities
requires at least two steps:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.7-2">
          <li pn="section-6.7-2.1">
            <t indent="0" pn="section-6.7-2.1.1">acquisition of PKI information</t>
          </li>
          <li pn="section-6.7-2.2">
            <t indent="0" pn="section-6.7-2.2.1">out-of-band verification of one root-CA public key</t>
          </li>
        </ul>
        <t indent="0" pn="section-6.7-3">(Other possible steps include the retrieval of trust condition
information and/or out-of-band verification of other CA public keys.)</t>
        <section anchor="sect-6.7.1" numbered="true" removeInRFC="false" toc="include" pn="section-6.7.1">
          <name slugifiedName="name-acquisition-of-pki-informat">Acquisition of PKI Information</name>
          <t indent="0" pn="section-6.7.1-1">The information <bcp14>REQUIRED</bcp14> is:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.7.1-2">
            <li pn="section-6.7.1-2.1">
              <t indent="0" pn="section-6.7.1-2.1.1">the current root-CA public key</t>
            </li>
            <li pn="section-6.7.1-2.2">
              <t indent="0" pn="section-6.7.1-2.2.1">(if the certifying CA is not a root-CA) the certification path
from the root CA to the certifying CA together with appropriate
revocation lists</t>
            </li>
            <li pn="section-6.7.1-2.3">
              <t indent="0" pn="section-6.7.1-2.3.1">the algorithms and algorithm parameters that the certifying CA
supports for each relevant usage</t>
            </li>
          </ul>
          <t indent="0" pn="section-6.7.1-3">Additional information could be required (e.g., supported extensions
or CA policy information) in order to produce a certification request
that will be successful.  However, for simplicity, we do not mandate
that the end entity acquires this information via the PKI messages.
The end result is simply that some certification requests may fail
(e.g., if the end entity wants to generate its own encryption key,
but the CA doesn't allow that).</t>
          <t indent="0" pn="section-6.7.1-4">The required information <bcp14>MAY</bcp14> be acquired as described in <xref target="sect-6.5" format="default" sectionFormat="of" derivedContent="Section 6.5"/>.</t>
        </section>
        <section anchor="sect-6.7.2" numbered="true" removeInRFC="false" toc="include" pn="section-6.7.2">
          <name slugifiedName="name-out-of-band-verification-of">Out-of-Band Verification of the Root CA Key</name>
          <t indent="0" pn="section-6.7.2-1">An end entity must securely possess the public key of its root CA.
One method to achieve this is to provide the end entity with the CA's
self-certificate fingerprint via some secure "out-of-band" means.
The end entity can then securely use the CA's self-certificate.</t>
          <t indent="0" pn="section-6.7.2-2">See <xref target="sect-6.1" format="default" sectionFormat="of" derivedContent="Section 6.1"/> for further details.</t>
        </section>
      </section>
      <section anchor="sect-6.8" numbered="true" removeInRFC="false" toc="include" pn="section-6.8">
        <name slugifiedName="name-certificate-request">Certificate Request</name>
        <t indent="0" pn="section-6.8-1">An initialized end entity <bcp14>MAY</bcp14> request an additional certificate at
any time (for any purpose).  This request will be made using the
certification request (cr) message.  If the end entity already
possesses a signing key pair (with a corresponding verification
certificate), then this cr message will typically be protected by the
entity's digital signature.  The CA returns the new certificate (if
the request is successful) in a CertRepMessage.</t>
      </section>
      <section anchor="sect-6.9" numbered="true" removeInRFC="false" toc="include" pn="section-6.9">
        <name slugifiedName="name-key-update">Key Update</name>
        <t indent="0" pn="section-6.9-1">When a key pair is due to expire, the relevant end entity <bcp14>MAY</bcp14> request
a key update; that is, it <bcp14>MAY</bcp14> request that the CA issue a new
certificate for a new key pair (or, in certain circumstances, a new
certificate for the same key pair).  The request is made using a key
update request (kur) message (referred to, in some environments, as a
"Certificate Update" operation).  If the end entity already possesses
a signing key pair (with a corresponding verification certificate),
then this message will typically be protected by the entity's digital
signature.  The CA returns the new certificate (if the request is
successful) in a key update response (kup) message, which is
syntactically identical to a CertRepMessage.</t>
      </section>
    </section>
    <section anchor="sect-7" numbered="true" removeInRFC="false" toc="include" pn="section-7">
      <name slugifiedName="name-version-negotiation">Version Negotiation</name>
      <t indent="0" pn="section-7-1">This section defines the version negotiation used to support older
protocols between clients and servers.</t>
      <t indent="0" pn="section-7-2">If a client knows the protocol version(s) supported by the server (e.g.,
from a previous PKIMessage exchange or via some out-of-band means), then
it <bcp14>MUST</bcp14> send a PKIMessage with the highest version supported by both it and
the server.  If a client does not know what version(s) the server supports,
then it <bcp14>MUST</bcp14> send a PKIMessage using the highest version it supports with
the following exception: Version cmp2021 <bcp14>SHOULD</bcp14> only be used if cmp2021 syntax
is needed for the request being sent or for the expected response.</t>
      <t indent="0" pn="section-7-3">Note: Using cmp2000 as the default pvno value is done to avoid extra
  message exchanges for version negotiation and to foster compatibility
  with cmp2000 implementations.
Version cmp2021 syntax is only needed if a message exchange uses EnvelopedData,
hashAlg (in CertStatus), POPOPrivKey with agreeMAC, or ckuann with RootCaKeyUpdateContent.</t>
      <t indent="0" pn="section-7-4">If a server receives a message with a version that it supports, then
the version of the response message <bcp14>MUST</bcp14> be the same as the received
version.  If a server receives a message with a version higher or
lower than it supports, then it <bcp14>MUST</bcp14> send back an ErrorMsg with the
unsupportedVersion bit set (in the failureInfo field of the
pKIStatusInfo).  If the received version is higher than the highest
supported version, then the version in the error message <bcp14>MUST</bcp14> be the
highest version the server supports; if the received version is lower
than the lowest supported version, then the version in the error
message <bcp14>MUST</bcp14> be the lowest version the server supports.</t>
      <t indent="0" pn="section-7-5">If a client gets back an ErrorMsgContent with the unsupportedVersion
bit set and a version it supports, then it <bcp14>MAY</bcp14> retry the request with
that version.</t>
      <section anchor="sect-7.1" numbered="true" removeInRFC="false" toc="include" pn="section-7.1">
        <name slugifiedName="name-supporting-rfc-2510-impleme">Supporting RFC 2510 Implementations</name>
        <t indent="0" pn="section-7.1-1"><xref target="RFC2510" format="default" sectionFormat="of" derivedContent="RFC2510"/> did not specify the behavior of implementations receiving
versions they did not understand since there was only one version in
existence.  With the introduction of the revision in <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/>, the following versioning behavior is recommended.</t>
        <section anchor="sect-7.1.1" numbered="true" removeInRFC="false" toc="include" pn="section-7.1.1">
          <name slugifiedName="name-clients-talking-to-rfc-2510">Clients Talking to RFC 2510 Servers</name>
          <t indent="0" pn="section-7.1.1-1">If, after sending a message with a pvno value higher than cmp1999, a
  client receives an ErrorMsgContent with a version of cmp1999, then it <bcp14>MUST</bcp14>
abort the current transaction.</t>
          <t indent="0" pn="section-7.1.1-2">If a client receives a non-error PKIMessage with a version of
cmp1999, then it <bcp14>MAY</bcp14> decide to continue the transaction (if the
transaction hasn't finished) using the semantics described in <xref target="RFC2510" format="default" sectionFormat="of" derivedContent="RFC2510"/>.  If it does
not choose to do so and the transaction is not finished, then it <bcp14>MUST</bcp14>
abort the transaction and send an ErrorMsgContent with a version of
cmp1999.</t>
        </section>
        <section anchor="sect-7.1.2" numbered="true" removeInRFC="false" toc="include" pn="section-7.1.2">
          <name slugifiedName="name-servers-receiving-version-c">Servers Receiving Version cmp1999 PKIMessages</name>
          <t indent="0" pn="section-7.1.2-1">If a server receives a version cmp1999 message, it <bcp14>MAY</bcp14> revert to the behavior described in <xref target="RFC2510" format="default" sectionFormat="of" derivedContent="RFC2510"/> and respond with version cmp1999 messages.  If it does
not choose to do so, then it <bcp14>MUST</bcp14> send back an ErrorMsgContent as
described above in <xref target="sect-7" format="default" sectionFormat="of" derivedContent="Section 7"/>.</t>
        </section>
      </section>
    </section>
    <section anchor="sect-8" numbered="true" removeInRFC="false" toc="include" pn="section-8">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <section anchor="sect-8.1" numbered="true" removeInRFC="false" toc="include" pn="section-8.1">
        <name slugifiedName="name-on-the-necessity-of-pop">On the Necessity of POP</name>
        <t indent="0" pn="section-8.1-1">It is well established that the role of a CA is to
verify that the name and public key belong to the end entity prior to
issuing a certificate. If an entity holding a private key obtains a certificate containing the corresponding public key issued for a different entity, it can authenticate as the entity named in the certificate. This facilitates masquerading. It is not entirely clear what security guarantees are lost if an end entity is able to obtain a certificate containing a public key that they do not possess the corresponding private key for. There are some scenarios,
described as "forwarding attacks" in Appendix A of <xref target="Gueneysu" format="default" sectionFormat="of" derivedContent="Gueneysu"/>, in
which this can lead to protocol attacks against a naively implemented
sign-then-encrypt protocol, but in general, it merely results in the
end entity obtaining a certificate that they cannot use.</t>
      </section>
      <section anchor="sect-8.2" numbered="true" removeInRFC="false" toc="include" pn="section-8.2">
        <name slugifiedName="name-pop-with-a-decryption-key">POP with a Decryption Key</name>
        <t indent="0" pn="section-8.2-1">Some cryptographic considerations are worth explicitly spelling out.
In the protocols specified above, when an end entity is required to
prove possession of a decryption key, it is effectively challenged to
decrypt something (its own certificate).  This scheme (and many
others!) could be vulnerable to an attack if the possessor of the
decryption key in question could be fooled into decrypting an
arbitrary challenge and returning the cleartext to an attacker.
Although in this specification a number of other failures in security
are required in order for this attack to succeed, it is conceivable
that some future services (e.g., notary, trusted time) could
potentially be vulnerable to such attacks.  For this reason, we
reiterate the general rule that implementations should be very careful
about decrypting arbitrary "ciphertext" and revealing recovered
"plaintext" since such a practice can lead to serious security
vulnerabilities.</t>
        <t indent="0" pn="section-8.2-2">The client <bcp14>MUST</bcp14> return the decrypted values only if they match the expected content type. In an indirect method, the decrypted value <bcp14>MUST</bcp14> be a valid certificate, and in a direct method, the decrypted value <bcp14>MUST</bcp14> be a Rand as defined in <xref target="sect-5.2.8.3.3" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.3"/>.</t>
      </section>
      <section anchor="sect-8.3" numbered="true" removeInRFC="false" toc="include" pn="section-8.3">
        <name slugifiedName="name-pop-by-exposing-the-private">POP by Exposing the Private Key</name>
        <t indent="0" pn="section-8.3-1">Note also that exposing a private key to the CA/RA as a
POP technique can carry some security risks (depending
upon whether or not the CA/RA can be trusted to handle such material
appropriately).  Implementers are advised to:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-8.3-2">
          <li pn="section-8.3-2.1">
            <t indent="0" pn="section-8.3-2.1.1">Exercise caution in selecting and using this particular POP
mechanism.</t>
          </li>
          <li pn="section-8.3-2.2">
            <t indent="0" pn="section-8.3-2.2.1">Only use this POP mechanism if archival of the private key is desired.</t>
          </li>
          <li pn="section-8.3-2.3">
            <t indent="0" pn="section-8.3-2.3.1">When appropriate, have the user of the application explicitly
state that they are willing to trust the CA/RA to have a copy of
their private key before proceeding to reveal the private key.</t>
          </li>
        </ul>
      </section>
      <section anchor="sect-8.4" numbered="true" removeInRFC="false" toc="include" pn="section-8.4">
        <name slugifiedName="name-attack-against-dh-key-excha">Attack Against DH Key Exchange</name>
        <t indent="0" pn="section-8.4-1">A small subgroup attack during a DH key exchange may be
carried out as follows.  A malicious end entity may deliberately
choose DH parameters that enable it to derive (a significant
number of bits of) the DH private key of the CA during a key
archival or key recovery operation.  Armed with this knowledge, the
end entity would then be able to retrieve the decryption private key of
another unsuspecting end entity, EE2, during EE2's legitimate key
archival or key recovery operation with that CA.  In order to avoid
the possibility of such an attack, two courses of action are
available.  (1) The CA may generate a fresh DH key pair to be used
as a protocol encryption key pair for each end entity with which it
interacts.  (2) The CA may enter into a key validation protocol (not
specified in this document) with each requesting end entity to ensure
that the end entity's protocol encryption key pair will not facilitate this
attack.  Option (1) is clearly simpler (requiring no extra protocol
exchanges from either party) and is therefore <bcp14>RECOMMENDED</bcp14>.</t>
      </section>
      <section anchor="sect-8.5" numbered="true" removeInRFC="false" toc="include" pn="section-8.5">
        <name slugifiedName="name-perfect-forward-secrecy">Perfect Forward Secrecy</name>
        <t indent="0" pn="section-8.5-1">Long-term security typically requires perfect forward secrecy (pfs).
When transferring encrypted long-term confidential values such as centrally generated private keys or revocation passphrases, pfs is likely important.
Yet, it is not needed for CMP message protection providing integrity and authenticity because transfer of PKI messages is usually completed in very limited time.
For the same reason, it is not typically required for the indirect method to provide a POP (<xref target="sect-5.2.8.3.2" format="default" sectionFormat="of" derivedContent="Section 5.2.8.3.2"/>) delivering the newly issued certificate in encrypted form.</t>
        <t indent="0" pn="section-8.5-2">Encrypted values (<xref target="sect-5.2.2" format="default" sectionFormat="of" derivedContent="Section 5.2.2"/>) are transferred using CMS EnvelopedData <xref target="RFC5652" format="default" sectionFormat="of" derivedContent="RFC5652"/>, which does not offer pfs. In cases where long-term security is needed, CMP messages <bcp14>SHOULD</bcp14> be transferred over a mechanism that provides pfs, such as TLS with appropriate cipher suites selected.</t>
      </section>
      <section anchor="sect-8.6" numbered="true" removeInRFC="false" toc="include" pn="section-8.6">
        <name slugifiedName="name-private-keys-for-certificat">Private Keys for Certificate Signing and CMP Message Protection</name>
        <t indent="0" pn="section-8.6-1">A CA should not reuse its certificate signing key for other purposes, such
as protecting CMP responses and TLS connections. This way, exposure to other
parts of the system and the number of uses of this particularly critical
key are reduced to a minimum.</t>
      </section>
      <section anchor="sect-8.7" numbered="true" removeInRFC="false" toc="include" pn="section-8.7">
        <name slugifiedName="name-entropy-of-random-numbers-k">Entropy of Random Numbers, Key Pairs, and Shared Secret Information</name>
        <t indent="0" pn="section-8.7-1">Implementations must generate nonces and private keys from random input.
The use of inadequate pseudorandom number generators (PRNGs) to generate
cryptographic keys can result in little or no security. An attacker may find
it much easier to reproduce the PRNG environment that produced the keys and
to search the resulting small set of possibilities than brute-force searching the whole key space. As an example of predictable random numbers, see <xref target="CVE-2008-0166" format="default" sectionFormat="of" derivedContent="CVE-2008-0166"/>; consequences of low-entropy random numbers are discussed in <xref target="MiningPsQs" format="default" sectionFormat="of" derivedContent="MiningPsQs">Mining Your Ps and Qs</xref>. The generation of quality random numbers is difficult. <xref target="ISO.20543-2019" format="default" sectionFormat="of" derivedContent="ISO.20543-2019">ISO/IEC 20543:2019</xref>, <xref target="NIST.SP.800_90Ar1" format="default" sectionFormat="of" derivedContent="NIST.SP.800_90Ar1">NIST SP 800-90A Rev.1</xref>, <xref target="AIS31" format="default" sectionFormat="of" derivedContent="AIS31">BSI AIS 31 V2.0</xref>, and other specifications offer valuable guidance in this area.</t>
        <t indent="0" pn="section-8.7-2">If shared secret information is generated by a cryptographically secure random number
generator (CSRNG), it is safe to assume that the entropy of the shared secret
information equals its bit length. If no CSRNG is used, the entropy of
shared secret information depends on the details of the generation process
and cannot be measured securely after it has been generated.
  If user-generated passwords are used as shared secret information,
  their entropy cannot be measured. Passwords generated from user-supplied entropy
  are typically insufficient for protected delivery of
  centrally generated keys or trust anchors.</t>
        <t indent="0" pn="section-8.7-3">If the entropy of shared secret information protecting the delivery of
a centrally generated key pair is known, it should not be less than the security
strength of that key pair; if the shared secret information is reused for
different key pairs, the security of the shared secret information should
exceed the security strength of each individual key pair.</t>
        <t indent="0" pn="section-8.7-4">For the case of a PKI management operation that delivers a new trust anchor
(e.g., a root CA certificate), using caPubs or genp that is (a) not concluded
in a timely manner or (b) where the shared secret information is reused
for several key management operations, the entropy of the shared secret information,
if known, should not be less than the security strength of the trust anchor
being managed by the operation. The shared secret information should have
an entropy that at least matches the security strength of the key material
being managed by the operation. Certain use cases may require shared secret
information that may be of a low security strength, e.g., a human-generated
password. It is <bcp14>RECOMMENDED</bcp14> that such secret information be limited to a
single PKI management operation.</t>
        <t indent="0" pn="section-8.7-5">Importantly for this section, further information about algorithm use profiles
and their security strength is available in <xref section="7" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-7" derivedContent="RFC9481">CMP Algorithms</xref>.</t>
      </section>
      <section anchor="sect-8.8" numbered="true" removeInRFC="false" toc="include" pn="section-8.8">
        <name slugifiedName="name-recurring-usage-of-kem-keys">Recurring Usage of KEM Keys for Message Protection</name>
        <t indent="0" pn="section-8.8-1">For each PKI management operation using MAC-based message protection involving KEM (see <xref target="sect-5.1.3.4" format="default" sectionFormat="of" derivedContent="Section 5.1.3.4"/>), the KEM Encapsulate() function, providing a fresh KEM ciphertext (ct) and shared secret (ss), <bcp14>MUST</bcp14> be invoked.</t>
        <t indent="0" pn="section-8.8-2">It is assumed that the overall data size of the CMP messages
in a PKI management operation protected by a single shared secret key
is small enough not to introduce extra security risks.</t>
        <t indent="0" pn="section-8.8-3">To be appropriate for use with this specification, the KEM algorithm
<bcp14>MUST</bcp14> explicitly be designed to be secure when the public key is used
many times. For example, a KEM algorithm with a single-use public
key is not appropriate because the public key is expected to be
carried in a long-lived certificate <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> and used over and over.
Thus, KEM algorithms that offer indistinguishability under adaptive
chosen ciphertext attack (IND-CCA2) security are appropriate. A
common design pattern for obtaining IND-CCA2 security with public key
reuse is to apply the Fujisaki-Okamoto (FO) transform <xref target="Fujisaki" format="default" sectionFormat="of" derivedContent="Fujisaki"/> or a
variant of the FO transform <xref target="Hofheinz" format="default" sectionFormat="of" derivedContent="Hofheinz"/>.</t>
        <t indent="0" pn="section-8.8-4">Therefore, given a long-term public key using an IND-CCA2-secure KEM
algorithm, there is no limit to the number of CMP messages that can
be authenticated using KEM keys for MAC-based message protection.</t>
      </section>
      <section anchor="sect-8.9" numbered="true" removeInRFC="false" toc="include" pn="section-8.9">
        <name slugifiedName="name-trust-anchor-provisioning-u">Trust Anchor Provisioning Using CMP Messages</name>
        <t indent="0" pn="section-8.9-1">A provider of trust anchors, which may be an RA involved in configuration
management of its clients, <bcp14>MUST NOT</bcp14> include to-be-trusted CA certificates
in a CMP message unless the specific deployment scenario can ensure that
it is adequate that the receiving end entity trusts these certificates, e.g., by
loading them into its trust store.</t>
        <t indent="0" pn="section-8.9-2">Whenever an end entity receives in a CMP message a CA certificate to be used
as a trust anchor (for example, in the caPubs field of a certificate response
or in a general response), it <bcp14>MUST</bcp14> properly authenticate the message sender with
existing trust anchors without requiring new trust anchor information included in the
message.</t>
        <t indent="0" pn="section-8.9-3">Additionally, the end entity <bcp14>MUST</bcp14> verify that the sender is an authorized source
of trust anchors.  This authorization is governed by local policy and typically
indicated using shared secret information or with a signature-based message
protection using a certificate issued by a PKI that is explicitly authorized
for this purpose.</t>
      </section>
      <section anchor="sect-8.10" numbered="true" removeInRFC="false" toc="include" pn="section-8.10">
        <name slugifiedName="name-authorizing-requests-for-ce">Authorizing Requests for Certificates with Specific EKUs</name>
        <t indent="0" pn="section-8.10-1">When a CA issues a certificate containing EKU extensions as
defined in <xref target="sect-4.5" format="default" sectionFormat="of" derivedContent="Section 4.5"/>, this expresses delegation of an authorization that
originally is only with the CA certificate itself.
Such delegation is a very sensitive action in a PKI, and therefore,
special care must be taken when approving such certificate requests to
ensure that only legitimate entities receive a certificate containing
such an EKU.</t>
      </section>
      <section anchor="sect-8.11" numbered="true" removeInRFC="false" toc="include" pn="section-8.11">
        <name slugifiedName="name-usage-of-ct-logs">Usage of CT Logs</name>
        <t indent="0" pn="section-8.11-1">CAs that support indirect POP <bcp14>MUST NOT</bcp14> also publish final certificates to CT logs <xref target="RFC9162" format="default" sectionFormat="of" derivedContent="RFC9162"/> before having received the certConf message containing the certHash of that certificate to complete the POP. The risk is that a malicious actor could fetch the final certificate from the CT log and use that to spoof a response to the implicit POP challenge via a certConf response. This risk does not apply to CT precertificates, so those are OK to publish.</t>
        <t indent="0" pn="section-8.11-2">If a certificate or its precertificate was published in a CT log, it must be revoked if a required certConf message could not be verified, especially when the implicit POP was used.</t>
      </section>
    </section>
    <section anchor="sect-9" numbered="true" removeInRFC="false" toc="include" pn="section-9">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t indent="0" pn="section-9-1">This document updates the ASN.1 modules in <xref section="A.2" target="RFC9480" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9480#appendix-A.2" derivedContent="RFC9480">CMP Updates</xref>. The OID 116 (id-mod-cmp2023-02) was registered in the "SMI Security for PKIX Module Identifier" registry to identify the updated ASN.1 module.</t>
      <t indent="0" pn="section-9-2">IANA has added the following entry in the "SMI Security for PKIX CMP Information Types" registry within the SMI Numbers registry group (see <eref brackets="angle" target="https://www.iana.org/assignments/smi-numbers"/>) <xref target="RFC7299" format="default" sectionFormat="of" derivedContent="RFC7299"/>: </t>
      <dl spacing="compact" newline="false" indent="3" pn="section-9-3">
        <dt pn="section-9-3.1">Decimal:</dt>
        <dd pn="section-9-3.2">24</dd>
        <dt pn="section-9-3.3">Description:</dt>
        <dd pn="section-9-3.4">id-it-KemCiphertextInfo</dd>
        <dt pn="section-9-3.5">Reference:</dt>
        <dd pn="section-9-3.6">RFC 9810</dd>
      </dl>
      <t indent="0" pn="section-9-4"> Note that the new OID 1.2.840.113533.7.66.16 was registered by Entrust,
  and not by IANA, for id-KemBasedMac in the arc 1.2.840.113533.7.66.
  This was done to match the previous registrations for id-PasswordBasedMac 
  and id-DHBasedMac, which are also on the Entrust private
  arc.</t>
      <t indent="0" pn="section-9-5">All existing references to <xref target="RFC2510" format="default" sectionFormat="of" derivedContent="RFC2510"/>, <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/>, and <xref target="RFC9480" format="default" sectionFormat="of" derivedContent="RFC9480"/> at <eref brackets="angle" target="https://www.iana.org/assignments/smi-numbers"/> except those in the "SMI Security for PKIX Module Identifier" registry have been replaced with references to this document.</t>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-lamps-kyber-certificates" to="ML-KEM"/>
    <references anchor="sec-combined-references" pn="section-10">
      <name slugifiedName="name-references">References</name>
      <references anchor="sec-normative-references" pn="section-10.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="MvOV97" target="https://cacr.uwaterloo.ca/hac/" quoteTitle="true" derivedAnchor="MvOV97">
          <front>
            <title>Handbook of Applied Cryptography</title>
            <author initials="A." surname="Menezes" fullname="A. Menezes">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="van Oorschot" fullname="P. van Oorschot">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Vanstone" fullname="S. Vanstone">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1996"/>
          </front>
          <seriesInfo name="CRC" value="Press ISBN 0-8493-8523-7"/>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC2985" target="https://www.rfc-editor.org/info/rfc2985" quoteTitle="true" derivedAnchor="RFC2985">
          <front>
            <title>PKCS #9: Selected Object Classes and Attribute Types Version 2.0</title>
            <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="November" year="2000"/>
            <abstract>
              <t indent="0">This memo represents a republication of PKCS #9 v2.0 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from that specification. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2985"/>
          <seriesInfo name="DOI" value="10.17487/RFC2985"/>
        </reference>
        <reference anchor="RFC2986" target="https://www.rfc-editor.org/info/rfc2986" quoteTitle="true" derivedAnchor="RFC2986">
          <front>
            <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
            <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="November" year="2000"/>
            <abstract>
              <t indent="0">This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2986"/>
          <seriesInfo name="DOI" value="10.17487/RFC2986"/>
        </reference>
        <reference anchor="RFC3629" target="https://www.rfc-editor.org/info/rfc3629" quoteTitle="true" derivedAnchor="RFC3629">
          <front>
            <title>UTF-8, a transformation format of ISO 10646</title>
            <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
            <date month="November" year="2003"/>
            <abstract>
              <t indent="0">ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="63"/>
          <seriesInfo name="RFC" value="3629"/>
          <seriesInfo name="DOI" value="10.17487/RFC3629"/>
        </reference>
        <reference anchor="RFC4211" target="https://www.rfc-editor.org/info/rfc4211" quoteTitle="true" derivedAnchor="RFC4211">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate Request Message Format (CRMF)</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="September" year="2005"/>
            <abstract>
              <t indent="0">This document describes the Certificate Request Message Format (CRMF) syntax and semantics. This syntax is used to convey a request for a certificate to a Certification Authority (CA), possibly via a Registration Authority (RA), for the purposes of X.509 certificate production. The request will typically include a public key and the associated registration information. This document does not define a certificate request protocol. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4211"/>
          <seriesInfo name="DOI" value="10.17487/RFC4211"/>
        </reference>
        <reference anchor="RFC5280" target="https://www.rfc-editor.org/info/rfc5280" quoteTitle="true" derivedAnchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t indent="0">This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC5480" target="https://www.rfc-editor.org/info/rfc5480" quoteTitle="true" derivedAnchor="RFC5480">
          <front>
            <title>Elliptic Curve Cryptography Subject Public Key Information</title>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <author fullname="D. Brown" initials="D." surname="Brown"/>
            <author fullname="K. Yiu" initials="K." surname="Yiu"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="T. Polk" initials="T." surname="Polk"/>
            <date month="March" year="2009"/>
            <abstract>
              <t indent="0">This document specifies the syntax and semantics for the Subject Public Key Information field in certificates that support Elliptic Curve Cryptography. This document updates Sections 2.3.5 and 5, and the ASN.1 module of "Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile", RFC 3279. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5480"/>
          <seriesInfo name="DOI" value="10.17487/RFC5480"/>
        </reference>
        <reference anchor="RFC5646" target="https://www.rfc-editor.org/info/rfc5646" quoteTitle="true" derivedAnchor="RFC5646">
          <front>
            <title>Tags for Identifying Languages</title>
            <author fullname="A. Phillips" initials="A." role="editor" surname="Phillips"/>
            <author fullname="M. Davis" initials="M." role="editor" surname="Davis"/>
            <date month="September" year="2009"/>
            <abstract>
              <t indent="0">This document describes the structure, content, construction, and semantics of language tags for use in cases where it is desirable to indicate the language used in an information object. It also describes how to register values for use in language tags and the creation of user-defined extensions for private interchange. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="47"/>
          <seriesInfo name="RFC" value="5646"/>
          <seriesInfo name="DOI" value="10.17487/RFC5646"/>
        </reference>
        <reference anchor="RFC5652" target="https://www.rfc-editor.org/info/rfc5652" quoteTitle="true" derivedAnchor="RFC5652">
          <front>
            <title>Cryptographic Message Syntax (CMS)</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="September" year="2009"/>
            <abstract>
              <t indent="0">This document describes the Cryptographic Message Syntax (CMS). This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary message content. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="70"/>
          <seriesInfo name="RFC" value="5652"/>
          <seriesInfo name="DOI" value="10.17487/RFC5652"/>
        </reference>
        <reference anchor="RFC5958" target="https://www.rfc-editor.org/info/rfc5958" quoteTitle="true" derivedAnchor="RFC5958">
          <front>
            <title>Asymmetric Key Packages</title>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <date month="August" year="2010"/>
            <abstract>
              <t indent="0">This document defines the syntax for private-key information and a content type for it. Private-key information includes a private key for a specified public-key algorithm and a set of attributes. The Cryptographic Message Syntax (CMS), as defined in RFC 5652, can be used to digitally sign, digest, authenticate, or encrypt the asymmetric key format content type. This document obsoletes RFC 5208. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5958"/>
          <seriesInfo name="DOI" value="10.17487/RFC5958"/>
        </reference>
        <reference anchor="RFC6402" target="https://www.rfc-editor.org/info/rfc6402" quoteTitle="true" derivedAnchor="RFC6402">
          <front>
            <title>Certificate Management over CMS (CMC) Updates</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="November" year="2011"/>
            <abstract>
              <t indent="0">This document contains a set of updates to the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This document updates RFC 5272, RFC 5273, and RFC 5274.</t>
              <t indent="0">The new items in this document are: new controls for future work in doing server side key generation, definition of a Subject Information Access value to identify CMC servers, and the registration of a port number for TCP/IP for the CMC service to run on. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6402"/>
          <seriesInfo name="DOI" value="10.17487/RFC6402"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8933" target="https://www.rfc-editor.org/info/rfc8933" quoteTitle="true" derivedAnchor="RFC8933">
          <front>
            <title>Update to the Cryptographic Message Syntax (CMS) for Algorithm Identifier Protection</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="October" year="2020"/>
            <abstract>
              <t indent="0">This document updates the Cryptographic Message Syntax (CMS) specified in RFC 5652 to ensure that algorithm identifiers in signed-data and authenticated-data content types are adequately protected.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8933"/>
          <seriesInfo name="DOI" value="10.17487/RFC8933"/>
        </reference>
        <reference anchor="RFC9045" target="https://www.rfc-editor.org/info/rfc9045" quoteTitle="true" derivedAnchor="RFC9045">
          <front>
            <title>Algorithm Requirements Update to the Internet X.509 Public Key Infrastructure Certificate Request Message Format (CRMF)</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="June" year="2021"/>
            <abstract>
              <t indent="0">This document updates the cryptographic algorithm requirements for the Password-Based Message Authentication Code in the Internet X.509 Public Key Infrastructure Certificate Request Message Format (CRMF) specified in RFC 4211.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9045"/>
          <seriesInfo name="DOI" value="10.17487/RFC9045"/>
        </reference>
        <reference anchor="RFC9481" target="https://www.rfc-editor.org/info/rfc9481" quoteTitle="true" derivedAnchor="RFC9481">
          <front>
            <title>Certificate Management Protocol (CMP) Algorithms</title>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <author fullname="H. Aschauer" initials="H." surname="Aschauer"/>
            <author fullname="M. Ounsworth" initials="M." surname="Ounsworth"/>
            <author fullname="J. Gray" initials="J." surname="Gray"/>
            <date month="November" year="2023"/>
            <abstract>
              <t indent="0">This document describes the conventions for using several
cryptographic algorithms with the Certificate Management Protocol
(CMP). CMP is used to enroll and further manage the lifecycle of
X.509 certificates. This document also updates the algorithm use
profile from Appendix D.2 of RFC 4210.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9481"/>
          <seriesInfo name="DOI" value="10.17487/RFC9481"/>
        </reference>
        <reference anchor="RFC9629" target="https://www.rfc-editor.org/info/rfc9629" quoteTitle="true" derivedAnchor="RFC9629">
          <front>
            <title>Using Key Encapsulation Mechanism (KEM) Algorithms in the Cryptographic Message Syntax (CMS)</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="J. Gray" initials="J." surname="Gray"/>
            <author fullname="T. Okubo" initials="T." surname="Okubo"/>
            <date month="August" year="2024"/>
            <abstract>
              <t indent="0">The Cryptographic Message Syntax (CMS) supports key transport and key agreement algorithms. In recent years, cryptographers have been specifying Key Encapsulation Mechanism (KEM) algorithms, including quantum-secure KEM algorithms. This document defines conventions for the use of KEM algorithms by the originator and recipients to encrypt and decrypt CMS content. This document updates RFC 5652.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9629"/>
          <seriesInfo name="DOI" value="10.17487/RFC9629"/>
        </reference>
      </references>
      <references anchor="sec-informative-references" pn="section-10.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="AIS31" target="https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Zertifizierung/Interpretationen/AIS_31_Functionality_classes_for_random_number_generators_e.pdf" quoteTitle="true" derivedAnchor="AIS31">
          <front>
            <title>A proposal for: Functionality classes for random number generators - Version 2.0</title>
            <author initials="W." surname="Killmann" fullname="Wolfgang Killmann">
              <organization showOnFrontPage="true">T-Systems GEI GmbH</organization>
            </author>
            <author initials="W." surname="Schindler" fullname="Werner Schindler">
              <organization showOnFrontPage="true">Federal Office for Information Security (BSI)</organization>
            </author>
            <date year="2011" month="September"/>
          </front>
          <refcontent>Federal Office for Information Security (BSI)</refcontent>
        </reference>
        <reference anchor="CVE-2008-0166" target="https://nvd.nist.gov/vuln/detail/CVE-2008-0166" quoteTitle="true" derivedAnchor="CVE-2008-0166">
          <front>
            <title>National Vulnerability Database - CVE-2008-0166</title>
            <author>
              <organization showOnFrontPage="true">National Institute of Science and Technology (NIST)</organization>
            </author>
            <date year="2008" month="May"/>
          </front>
        </reference>
        <reference anchor="ETSI-3GPP.33.310" target="http://www.3gpp.org/ftp/Specs/html-info/33310.htm" quoteTitle="true" derivedAnchor="ETSI-3GPP.33.310">
          <front>
            <title>Network Domain Security (NDS); Authentication Framework (AF)</title>
            <author>
              <organization showOnFrontPage="true">3GPP</organization>
            </author>
            <date year="2020" month="December"/>
          </front>
          <seriesInfo name="3GPP TS" value="33.310 16.6.0"/>
        </reference>
        <reference anchor="Fujisaki" quoteTitle="true" target="https://doi.org/10.1007/s00145-011-9114-1" derivedAnchor="Fujisaki">
          <front>
            <title>Secure Integration of Asymmetric and Symmetric Encryption Schemes</title>
            <author fullname="Eiichiro Fujisaki" initials="E." surname="Fujisaki">
              <organization showOnFrontPage="true"/>
            </author>
            <author fullname="Tatsuaki Okamoto" initials="T." surname="Okamoto">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="December" year="2011"/>
          </front>
          <refcontent>Journal of Cryptology, vol. 26, no. 1, pp. 80-101</refcontent>
          <seriesInfo name="DOI" value="10.1007/s00145-011-9114-1"/>
        </reference>
        <reference anchor="Gueneysu" target="https://eprint.iacr.org/2022/703" quoteTitle="true" derivedAnchor="Gueneysu">
          <front>
            <title>Proof-of-possession for KEM certificates using verifiable generation</title>
            <author initials="T." surname="Gueneysu" fullname="Tim Gueneysu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Hodges" fullname="Philip Hodges">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Land" fullname="Georg Land">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Ounsworth" fullname="Mike Ounsworth">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Stebila" fullname="Douglas Stebila">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Zaverucha" fullname="Greg Zaverucha">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2022"/>
          </front>
          <refcontent>Cryptology ePrint Archive, Paper 2022/703</refcontent>
        </reference>
        <reference anchor="Hofheinz" quoteTitle="true" target="https://doi.org/10.1007/978-3-319-70500-2_12" derivedAnchor="Hofheinz">
          <front>
            <title>A Modular Analysis of the Fujisaki-Okamoto Transformation</title>
            <author fullname="Dennis Hofheinz" initials="D." surname="Hofheinz">
              <organization showOnFrontPage="true"/>
            </author>
            <author fullname="Kathrin Hövelmanns" initials="K." surname="Hövelmanns">
              <organization showOnFrontPage="true"/>
            </author>
            <author fullname="Eike Kiltz" initials="E." surname="Kiltz">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="November" year="2017"/>
          </front>
          <refcontent>Theory of Cryptography (TCC 2017), Lecture Notes in Computer Science, vol. 10677, pp. 341-371</refcontent>
          <seriesInfo name="DOI" value="10.1007/978-3-319-70500-2_12"/>
        </reference>
        <reference anchor="IEEE.802.1AR-2018" quoteTitle="true" target="https://doi.org/10.1109/ieeestd.2018.8423794" derivedAnchor="IEEE.802.1AR-2018">
          <front>
            <title>IEEE Standard for Local and Metropolitan Area Networks - Secure Device Identity</title>
            <author>
              <organization showOnFrontPage="true">IEEE</organization>
            </author>
            <date month="August" year="2018"/>
          </front>
          <seriesInfo name="IEEE Std" value="802.1AR-2018"/>
          <seriesInfo name="DOI" value="10.1109/ieeestd.2018.8423794"/>
        </reference>
        <reference anchor="ISO.20543-2019" target="https://www.iso.org/standard/68296.html" quoteTitle="true" derivedAnchor="ISO.20543-2019">
          <front>
            <title>Information technology -- Security techniques -- Test and analysis methods for random bit generators within ISO/IEC 19790 and ISO/IEC 15408</title>
            <author>
              <organization showOnFrontPage="true">ISO/IEC</organization>
            </author>
            <date year="2019" month="October"/>
          </front>
          <seriesInfo name="ISO/IEC" value="20543:2019"/>
        </reference>
        <reference anchor="MiningPsQs" target="https://www.usenix.org/conference/usenixsecurity12/technical-sessions/presentation/heninger" quoteTitle="true" derivedAnchor="MiningPsQs">
          <front>
            <title>Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices</title>
            <author initials="N." surname="Heninger" fullname="Nadia Heninger">
              <organization showOnFrontPage="true">UC San Diego</organization>
            </author>
            <author initials="Z." surname="Durumeric" fullname="Zakir Durumeric">
              <organization showOnFrontPage="true">University of Michigan</organization>
            </author>
            <author initials="E." surname="Wustrow" fullname="Eric Wustrow">
              <organization showOnFrontPage="true">University of Michigan</organization>
            </author>
            <author initials="J. A." surname="Halderman" fullname="J. Alex Halderman">
              <organization showOnFrontPage="true">University of Michigan</organization>
            </author>
            <date year="2012" month="August"/>
          </front>
          <refcontent>21st USENIX Security Symposium (USENIX Security 12)</refcontent>
        </reference>
        <reference anchor="I-D.ietf-lamps-kyber-certificates" target="https://datatracker.ietf.org/doc/html/draft-ietf-lamps-kyber-certificates-11" quoteTitle="true" derivedAnchor="ML-KEM">
          <front>
            <title>Internet X.509 Public Key Infrastructure - Algorithm Identifiers for the Module-Lattice-Based Key-Encapsulation Mechanism (ML-KEM)</title>
            <author fullname="Sean Turner" initials="S." surname="Turner">
              <organization showOnFrontPage="true">sn3rd</organization>
            </author>
            <author fullname="Panos Kampanakis" initials="P." surname="Kampanakis">
              <organization showOnFrontPage="true">AWS</organization>
            </author>
            <author fullname="Jake Massimo" initials="J." surname="Massimo">
              <organization showOnFrontPage="true">AWS</organization>
            </author>
            <author fullname="Bas Westerbaan" initials="B." surname="Westerbaan">
              <organization showOnFrontPage="true">Cloudflare</organization>
            </author>
            <date day="22" month="July" year="2025"/>
            <abstract>
              <t indent="0">The Module-Lattice-Based Key-Encapsulation Mechanism (ML-KEM) is a quantum-resistant key-encapsulation mechanism (KEM). This document specifies the conventions for using the ML-KEM in X.509 Public Key Infrastructure. The conventions for the subject public keys and private keys are also specified.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-lamps-kyber-certificates-11"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="NIST.SP.800_90Ar1" target="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-90Ar1.pdf" quoteTitle="true" derivedAnchor="NIST.SP.800_90Ar1">
          <front>
            <title>Recommendation for Random Number Generation Using Deterministic Random Bit Generators</title>
            <author fullname="Elaine B. Barker" surname="Barker">
              <organization showOnFrontPage="true">Information Technology Laboratory</organization>
            </author>
            <author fullname="John M. Kelsey" surname="Kelsey">
              <organization showOnFrontPage="true">Information Technology Laboratory</organization>
            </author>
            <date month="June" year="2015"/>
          </front>
          <seriesInfo name="NIST SP" value="800-90Ar1"/>
          <seriesInfo name="DOI" value="10.6028/NIST.SP.800-90Ar1"/>
        </reference>
        <reference anchor="RFC1847" target="https://www.rfc-editor.org/info/rfc1847" quoteTitle="true" derivedAnchor="RFC1847">
          <front>
            <title>Security Multiparts for MIME: Multipart/Signed and Multipart/Encrypted</title>
            <author fullname="J. Galvin" initials="J." surname="Galvin"/>
            <author fullname="S. Murphy" initials="S." surname="Murphy"/>
            <author fullname="S. Crocker" initials="S." surname="Crocker"/>
            <author fullname="N. Freed" initials="N." surname="Freed"/>
            <date month="October" year="1995"/>
            <abstract>
              <t indent="0">This document defines a framework within which security services may be applied to MIME body parts. [STANDARDS-TRACK] This memo defines a new Simple Mail Transfer Protocol (SMTP) [1] reply code, 521, which one may use to indicate that an Internet host does not accept incoming mail. This memo defines an Experimental Protocol for the Internet community. This memo defines an extension to the SMTP service whereby an interrupted SMTP transaction can be restarted at a later time without having to repeat all of the commands and message content sent prior to the interruption. This memo defines an Experimental Protocol for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="1847"/>
          <seriesInfo name="DOI" value="10.17487/RFC1847"/>
        </reference>
        <reference anchor="RFC2510" target="https://www.rfc-editor.org/info/rfc2510" quoteTitle="true" derivedAnchor="RFC2510">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate Management Protocols</title>
            <author fullname="C. Adams" initials="C." surname="Adams"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <date month="March" year="1999"/>
            <abstract>
              <t indent="0">This document describes the Internet X.509 Public Key Infrastructure (PKI) Certificate Management Protocols. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2510"/>
          <seriesInfo name="DOI" value="10.17487/RFC2510"/>
        </reference>
        <reference anchor="RFC2585" target="https://www.rfc-editor.org/info/rfc2585" quoteTitle="true" derivedAnchor="RFC2585">
          <front>
            <title>Internet X.509 Public Key Infrastructure Operational Protocols: FTP and HTTP</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
            <date month="May" year="1999"/>
            <abstract>
              <t indent="0">The protocol conventions described in this document satisfy some of the operational requirements of the Internet Public Key Infrastructure (PKI). This document specifies the conventions for using the File Transfer Protocol (FTP) and the Hypertext Transfer Protocol (HTTP) to obtain certificates and certificate revocation lists (CRLs) from PKI repositories. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2585"/>
          <seriesInfo name="DOI" value="10.17487/RFC2585"/>
        </reference>
        <reference anchor="RFC4210" target="https://www.rfc-editor.org/info/rfc4210" quoteTitle="true" derivedAnchor="RFC4210">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate Management Protocol (CMP)</title>
            <author fullname="C. Adams" initials="C." surname="Adams"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="T. Kause" initials="T." surname="Kause"/>
            <author fullname="T. Mononen" initials="T." surname="Mononen"/>
            <date month="September" year="2005"/>
            <abstract>
              <t indent="0">This document describes the Internet X.509 Public Key Infrastructure (PKI) Certificate Management Protocol (CMP). Protocol messages are defined for X.509v3 certificate creation and management. CMP provides on-line interactions between PKI components, including an exchange between a Certification Authority (CA) and a client system. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4210"/>
          <seriesInfo name="DOI" value="10.17487/RFC4210"/>
        </reference>
        <reference anchor="RFC4212" target="https://www.rfc-editor.org/info/rfc4212" quoteTitle="true" derivedAnchor="RFC4212">
          <front>
            <title>Alternative Certificate Formats for the Public-Key Infrastructure Using X.509 (PKIX) Certificate Management Protocols</title>
            <author fullname="M. Blinov" initials="M." surname="Blinov"/>
            <author fullname="C. Adams" initials="C." surname="Adams"/>
            <date month="October" year="2005"/>
            <abstract>
              <t indent="0">The Public-Key Infrastructure using X.509 (PKIX) Working Group of the Internet Engineering Task Force (IETF) has defined a number of certificate management protocols. These protocols are primarily focused on X.509v3 public-key certificates. However, it is sometimes desirable to manage certificates in alternative formats as well. This document specifies how such certificates may be requested using the Certificate Request Message Format (CRMF) syntax that is used by several different protocols. It also explains how alternative certificate formats may be incorporated into such popular protocols as PKIX Certificate Management Protocol (PKIX-CMP) and Certificate Management Messages over CMS (CMC). This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4212"/>
          <seriesInfo name="DOI" value="10.17487/RFC4212"/>
        </reference>
        <reference anchor="RFC4303" target="https://www.rfc-editor.org/info/rfc4303" quoteTitle="true" derivedAnchor="RFC4303">
          <front>
            <title>IP Encapsulating Security Payload (ESP)</title>
            <author fullname="S. Kent" initials="S." surname="Kent"/>
            <date month="December" year="2005"/>
            <abstract>
              <t indent="0">This document describes an updated version of the Encapsulating Security Payload (ESP) protocol, which is designed to provide a mix of security services in IPv4 and IPv6. ESP is used to provide confidentiality, data origin authentication, connectionless integrity, an anti-replay service (a form of partial sequence integrity), and limited traffic flow confidentiality. This document obsoletes RFC 2406 (November 1998). [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4303"/>
          <seriesInfo name="DOI" value="10.17487/RFC4303"/>
        </reference>
        <reference anchor="RFC4511" target="https://www.rfc-editor.org/info/rfc4511" quoteTitle="true" derivedAnchor="RFC4511">
          <front>
            <title>Lightweight Directory Access Protocol (LDAP): The Protocol</title>
            <author fullname="J. Sermersheim" initials="J." role="editor" surname="Sermersheim"/>
            <date month="June" year="2006"/>
            <abstract>
              <t indent="0">This document describes the protocol elements, along with their semantics and encodings, of the Lightweight Directory Access Protocol (LDAP). LDAP provides access to distributed directory services that act in accordance with X.500 data and service models. These protocol elements are based on those described in the X.500 Directory Access Protocol (DAP). [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4511"/>
          <seriesInfo name="DOI" value="10.17487/RFC4511"/>
        </reference>
        <reference anchor="RFC5912" target="https://www.rfc-editor.org/info/rfc5912" quoteTitle="true" derivedAnchor="RFC5912">
          <front>
            <title>New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)</title>
            <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="June" year="2010"/>
            <abstract>
              <t indent="0">The Public Key Infrastructure using X.509 (PKIX) certificate format, and many associated formats, are expressed using ASN.1. The current ASN.1 modules conform to the 1988 version of ASN.1. This document updates those ASN.1 modules to conform to the 2002 version of ASN.1. There are no bits-on-the-wire changes to any of the formats; this is simply a change to the syntax. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5912"/>
          <seriesInfo name="DOI" value="10.17487/RFC5912"/>
        </reference>
        <reference anchor="RFC6268" target="https://www.rfc-editor.org/info/rfc6268" quoteTitle="true" derivedAnchor="RFC6268">
          <front>
            <title>Additional New ASN.1 Modules for the Cryptographic Message Syntax (CMS) and the Public Key Infrastructure Using X.509 (PKIX)</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <date month="July" year="2011"/>
            <abstract>
              <t indent="0">The Cryptographic Message Syntax (CMS) format, and many associated formats, are expressed using ASN.1. The current ASN.1 modules conform to the 1988 version of ASN.1. This document updates some auxiliary ASN.1 modules to conform to the 2008 version of ASN.1; the 1988 ASN.1 modules remain the normative version. There are no bits- on-the-wire changes to any of the formats; this is simply a change to the syntax. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6268"/>
          <seriesInfo name="DOI" value="10.17487/RFC6268"/>
        </reference>
        <reference anchor="RFC6712" target="https://www.rfc-editor.org/info/rfc6712" quoteTitle="true" derivedAnchor="RFC6712">
          <front>
            <title>Internet X.509 Public Key Infrastructure -- HTTP Transfer for the Certificate Management Protocol (CMP)</title>
            <author fullname="T. Kause" initials="T." surname="Kause"/>
            <author fullname="M. Peylo" initials="M." surname="Peylo"/>
            <date month="September" year="2012"/>
            <abstract>
              <t indent="0">This document describes how to layer the Certificate Management Protocol (CMP) over HTTP. It is the "CMPtrans" document referenced in RFC 4210; therefore, this document updates the reference given therein. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6712"/>
          <seriesInfo name="DOI" value="10.17487/RFC6712"/>
        </reference>
        <reference anchor="RFC7296" target="https://www.rfc-editor.org/info/rfc7296" quoteTitle="true" derivedAnchor="RFC7296">
          <front>
            <title>Internet Key Exchange Protocol Version 2 (IKEv2)</title>
            <author fullname="C. Kaufman" initials="C." surname="Kaufman"/>
            <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
            <author fullname="Y. Nir" initials="Y." surname="Nir"/>
            <author fullname="P. Eronen" initials="P." surname="Eronen"/>
            <author fullname="T. Kivinen" initials="T." surname="Kivinen"/>
            <date month="October" year="2014"/>
            <abstract>
              <t indent="0">This document describes version 2 of the Internet Key Exchange (IKE) protocol. IKE is a component of IPsec used for performing mutual authentication and establishing and maintaining Security Associations (SAs). This document obsoletes RFC 5996, and includes all of the errata for it. It advances IKEv2 to be an Internet Standard.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="79"/>
          <seriesInfo name="RFC" value="7296"/>
          <seriesInfo name="DOI" value="10.17487/RFC7296"/>
        </reference>
        <reference anchor="RFC7299" target="https://www.rfc-editor.org/info/rfc7299" quoteTitle="true" derivedAnchor="RFC7299">
          <front>
            <title>Object Identifier Registry for the PKIX Working Group</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="July" year="2014"/>
            <abstract>
              <t indent="0">When the Public-Key Infrastructure using X.509 (PKIX) Working Group was chartered, an object identifier arc was allocated by IANA for use by that working group. This document describes the object identifiers that were assigned in that arc, returns control of that arc to IANA, and establishes IANA allocation policies for any future assignments within that arc.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7299"/>
          <seriesInfo name="DOI" value="10.17487/RFC7299"/>
        </reference>
        <reference anchor="RFC8446" target="https://www.rfc-editor.org/info/rfc8446" quoteTitle="true" derivedAnchor="RFC8446">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
            <date month="August" year="2018"/>
            <abstract>
              <t indent="0">This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t indent="0">This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
        <reference anchor="RFC8572" target="https://www.rfc-editor.org/info/rfc8572" quoteTitle="true" derivedAnchor="RFC8572">
          <front>
            <title>Secure Zero Touch Provisioning (SZTP)</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="I. Farrer" initials="I." surname="Farrer"/>
            <author fullname="M. Abrahamsson" initials="M." surname="Abrahamsson"/>
            <date month="April" year="2019"/>
            <abstract>
              <t indent="0">This document presents a technique to securely provision a networking device when it is booting in a factory-default state. Variations in the solution enable it to be used on both public and private networks. The provisioning steps are able to update the boot image, commit an initial configuration, and execute arbitrary scripts to address auxiliary needs. The updated device is subsequently able to establish secure connections with other systems. For instance, a device may establish NETCONF (RFC 6241) and/or RESTCONF (RFC 8040) connections with deployment-specific network management systems.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8572"/>
          <seriesInfo name="DOI" value="10.17487/RFC8572"/>
        </reference>
        <reference anchor="RFC8649" target="https://www.rfc-editor.org/info/rfc8649" quoteTitle="true" derivedAnchor="RFC8649">
          <front>
            <title>Hash Of Root Key Certificate Extension</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="August" year="2019"/>
            <abstract>
              <t indent="0">This document specifies the Hash Of Root Key certificate extension. This certificate extension is carried in the self-signed certificate for a trust anchor, which is often called a Root Certification Authority (CA) certificate. This certificate extension unambiguously identifies the next public key that will be used at some point in the future as the next Root CA certificate, eventually replacing the current one.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8649"/>
          <seriesInfo name="DOI" value="10.17487/RFC8649"/>
        </reference>
        <reference anchor="RFC8995" target="https://www.rfc-editor.org/info/rfc8995" quoteTitle="true" derivedAnchor="RFC8995">
          <front>
            <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
            <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="T. Eckert" initials="T." surname="Eckert"/>
            <author fullname="M. Behringer" initials="M." surname="Behringer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="May" year="2021"/>
            <abstract>
              <t indent="0">This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8995"/>
          <seriesInfo name="DOI" value="10.17487/RFC8995"/>
        </reference>
        <reference anchor="RFC9147" target="https://www.rfc-editor.org/info/rfc9147" quoteTitle="true" derivedAnchor="RFC9147">
          <front>
            <title>The Datagram Transport Layer Security (DTLS) Protocol Version 1.3</title>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
            <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
            <author fullname="N. Modadugu" initials="N." surname="Modadugu"/>
            <date month="April" year="2022"/>
            <abstract>
              <t indent="0">This document specifies version 1.3 of the Datagram Transport Layer Security (DTLS) protocol. DTLS 1.3 allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t indent="0">The DTLS 1.3 protocol is based on the Transport Layer Security (TLS) 1.3 protocol and provides equivalent security guarantees with the exception of order protection / non-replayability. Datagram semantics of the underlying transport are preserved by the DTLS protocol.</t>
              <t indent="0">This document obsoletes RFC 6347.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9147"/>
          <seriesInfo name="DOI" value="10.17487/RFC9147"/>
        </reference>
        <reference anchor="RFC9162" target="https://www.rfc-editor.org/info/rfc9162" quoteTitle="true" derivedAnchor="RFC9162">
          <front>
            <title>Certificate Transparency Version 2.0</title>
            <author fullname="B. Laurie" initials="B." surname="Laurie"/>
            <author fullname="E. Messeri" initials="E." surname="Messeri"/>
            <author fullname="R. Stradling" initials="R." surname="Stradling"/>
            <date month="December" year="2021"/>
            <abstract>
              <t indent="0">This document describes version 2.0 of the Certificate Transparency (CT) protocol for publicly logging the existence of Transport Layer Security (TLS) server certificates as they are issued or observed, in a manner that allows anyone to audit certification authority (CA) activity and notice the issuance of suspect certificates as well as to audit the certificate logs themselves. The intent is that eventually clients would refuse to honor certificates that do not appear in a log, effectively forcing CAs to add all issued certificates to the logs.</t>
              <t indent="0">This document obsoletes RFC 6962. It also specifies a new TLS extension that is used to send various CT log artifacts.</t>
              <t indent="0">Logs are network services that implement the protocol operations for submissions and queries that are defined in this document.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9162"/>
          <seriesInfo name="DOI" value="10.17487/RFC9162"/>
        </reference>
        <reference anchor="RFC9480" target="https://www.rfc-editor.org/info/rfc9480" quoteTitle="true" derivedAnchor="RFC9480">
          <front>
            <title>Certificate Management Protocol (CMP) Updates</title>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
            <author fullname="J. Gray" initials="J." surname="Gray"/>
            <date month="November" year="2023"/>
            <abstract>
              <t indent="0">This document contains a set of updates to the syntax of Certificate Management Protocol (CMP) version 2 and its HTTP transfer mechanism. This document updates RFCs 4210, 5912, and 6712.</t>
              <t indent="0">The aspects of CMP updated in this document are using EnvelopedData instead of EncryptedValue, clarifying the handling of p10cr messages, improving the crypto agility, as well as adding new general message types, extended key usages to identify certificates for use with CMP, and well-known URI path segments.</t>
              <t indent="0">CMP version 3 is introduced to enable signaling support of EnvelopedData instead of EncryptedValue and signal the use of an explicit hash AlgorithmIdentifier in certConf messages, as far as needed.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9480"/>
          <seriesInfo name="DOI" value="10.17487/RFC9480"/>
        </reference>
        <reference anchor="RFC9482" target="https://www.rfc-editor.org/info/rfc9482" quoteTitle="true" derivedAnchor="RFC9482">
          <front>
            <title>Constrained Application Protocol (CoAP) Transfer for the Certificate Management Protocol</title>
            <author fullname="M. Sahni" initials="M." role="editor" surname="Sahni"/>
            <author fullname="S. Tripathi" initials="S." role="editor" surname="Tripathi"/>
            <date month="November" year="2023"/>
            <abstract>
              <t indent="0">This document specifies the use of the Constrained Application Protocol (CoAP) as a transfer mechanism for the Certificate Management Protocol (CMP). CMP defines the interaction between various PKI entities for the purpose of certificate creation and management. CoAP is an HTTP-like client-server protocol used by various constrained devices in the Internet of Things space.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9482"/>
          <seriesInfo name="DOI" value="10.17487/RFC9482"/>
        </reference>
        <reference anchor="RFC9483" target="https://www.rfc-editor.org/info/rfc9483" quoteTitle="true" derivedAnchor="RFC9483">
          <front>
            <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
            <author fullname="S. Fries" initials="S." surname="Fries"/>
            <date month="November" year="2023"/>
            <abstract>
              <t indent="0">This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9483"/>
          <seriesInfo name="DOI" value="10.17487/RFC9483"/>
        </reference>
        <reference anchor="RFC9733" target="https://www.rfc-editor.org/info/rfc9733" quoteTitle="true" derivedAnchor="RFC9733">
          <front>
            <title>BRSKI with Alternative Enrollment (BRSKI-AE)</title>
            <author fullname="D. von Oheimb" initials="D." role="editor" surname="von Oheimb"/>
            <author fullname="S. Fries" initials="S." surname="Fries"/>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <date month="March" year="2025"/>
            <abstract>
              <t indent="0">This document defines enhancements to the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol, known as BRSKI with Alternative Enrollment (BRSKI-AE). BRSKI-AE extends BRSKI to support certificate enrollment mechanisms instead of the originally specified use of Enrollment over Secure Transport (EST). It supports certificate enrollment protocols such as the Certificate Management Protocol (CMP) that use authenticated self-contained signed objects for certification messages, allowing for flexibility in network device onboarding scenarios. The enhancements address use cases where the existing enrollment mechanism may not be feasible or optimal, providing a framework for integrating suitable alternative enrollment protocols. This document also updates the BRSKI reference architecture to accommodate these alternative methods, ensuring secure and scalable deployment across a range of network environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9733"/>
          <seriesInfo name="DOI" value="10.17487/RFC9733"/>
        </reference>
        <reference anchor="RFC9811" target="https://www.rfc-editor.org/info/rfc9811" quoteTitle="true" derivedAnchor="RFC9811">
          <front>
            <title>Internet X.509 Public Key Infrastructure -- HTTP Transfer for the Certificate Management Protocol (CMP)</title>
            <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
              <organization showOnFrontPage="true">Siemens</organization>
            </author>
            <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
              <organization showOnFrontPage="true">Siemens</organization>
            </author>
            <author fullname="Mike Ounsworth" initials="M." surname="Ounsworth">
              <organization showOnFrontPage="true">Entrust</organization>
            </author>
            <author fullname="John Gray" initials="J." surname="Gray">
              <organization showOnFrontPage="true">Entrust</organization>
            </author>
            <date month="July" year="2025"/>
          </front>
          <seriesInfo name="RFC" value="9811"/>
        </reference>
        <reference anchor="UNISIG.Subset-137" target="https://www.era.europa.eu/system/files/2023-01/sos3_index083_-_subset-137_v100.pdf" quoteTitle="true" derivedAnchor="UNISIG.Subset-137">
          <front>
            <title>ERTMS/ETCS On-line Key Management FFFIS</title>
            <author>
              <organization showOnFrontPage="true">UNISIG</organization>
            </author>
            <date year="2015" month="December"/>
          </front>
          <refcontent>Subset-137, V1.0.0</refcontent>
        </reference>
        <reference anchor="X509.2019" target="https://handle.itu.int/11.1002/1000/14033" quoteTitle="true" derivedAnchor="X509.2019">
          <front>
            <title>Information technology - Open Systems Interconnection - The Directory: Public-key and attribute certificate frameworks</title>
            <author>
              <organization showOnFrontPage="true">ITU-T</organization>
            </author>
            <date year="2019" month="October"/>
          </front>
          <seriesInfo name="ITU-T Recommendation" value="X.509 (10/2019)"/>
        </reference>
      </references>
    </references>
    <section anchor="sect-a" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a">
      <name slugifiedName="name-reasons-for-the-presence-of">Reasons for the Presence of RAs</name>
      <t indent="0" pn="section-appendix.a-1">The reasons that justify the presence of an RA can be split into
those that are due to technical factors and those that are
organizational in nature.  Technical reasons include the following.</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.a-2">
        <li pn="section-appendix.a-2.1">
          <t indent="0" pn="section-appendix.a-2.1.1">If hardware tokens are in use, then not all end entities will have
the equipment needed to initialize these; the RA equipment can
include the necessary functionality (this may also be a matter of
policy).</t>
        </li>
        <li pn="section-appendix.a-2.2">
          <t indent="0" pn="section-appendix.a-2.2.1">Some end entities may not have the capability to publish
certificates; again, the RA may be suitably placed for this.</t>
        </li>
        <li pn="section-appendix.a-2.3">
          <t indent="0" pn="section-appendix.a-2.3.1">The RA will be able to issue signed revocation requests on behalf
of end entities associated with it, whereas the end entity may not
be able to do this (if the key pair is completely lost).</t>
        </li>
      </ul>
      <t indent="0" pn="section-appendix.a-3">Some of the organizational reasons that argue for the presence of an
RA are the following.</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.a-4">
        <li pn="section-appendix.a-4.1">
          <t indent="0" pn="section-appendix.a-4.1.1">It may be more cost effective to concentrate functionality in the
RA equipment than to supply functionality to all end entities
(especially if special token initialization equipment is to be
used).</t>
        </li>
        <li pn="section-appendix.a-4.2">
          <t indent="0" pn="section-appendix.a-4.2.1">Establishing RAs within an organization can reduce the number of
CAs required, which is sometimes desirable.</t>
        </li>
        <li pn="section-appendix.a-4.3">
          <t indent="0" pn="section-appendix.a-4.3.1">RAs may be better placed to identify people with their
"electronic" names, especially if the CA is physically remote from
the end entity.</t>
        </li>
        <li pn="section-appendix.a-4.4">
          <t indent="0" pn="section-appendix.a-4.4.1">For many applications, there will already be some
administrative structure in place so that candidates for the role of RA are
easy to find (which may not be true of the CA).</t>
        </li>
      </ul>
      <t indent="0" pn="section-appendix.a-5">Further reasons relevant for automated machine-to-machine certificate lifecycle
management are available in the Lightweight CMP Profile <xref target="RFC9483" format="default" sectionFormat="of" derivedContent="RFC9483"/>.</t>
    </section>
    <section anchor="sect-b" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-the-use-of-revocation-passp">The Use of Revocation Passphrase</name>
      <t indent="0" pn="section-appendix.b-1">A revocation request must incorporate suitable security mechanisms,
including proper authentication, in order to reduce the probability
of successful denial-of-service attacks.  A digital signature or DH/KEM-based message protection on the
request -- <bcp14>REQUIRED</bcp14> to support within this specification depending on the key type used if
revocation requests are supported -- can provide the authentication
required, but there are circumstances under which an alternative
mechanism may be desirable (e.g., when the private key is no longer
accessible and the entity wishes to request a revocation prior to
re-certification of another key pair).  In order to accommodate such
circumstances, a password-based MAC (see <xref section="6.1" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-6.1" derivedContent="RFC9481">CMP Algorithms</xref>) on the request is also <bcp14>REQUIRED</bcp14> to
support within this specification (subject to local security policy
for a given environment) if revocation requests are supported and if
shared secret information can be established between the requester
and the responder prior to the need for revocation.</t>
      <t indent="0" pn="section-appendix.b-2">A mechanism that has seen use in some environments is "revocation passphrase",
in which a value of sufficient entropy (i.e., a
relatively long passphrase rather than a short password) is shared
between (only) the entity and the CA/RA at some point prior to
revocation; this value is later used to authenticate the revocation
request.</t>
      <t indent="0" pn="section-appendix.b-3">In this specification, the following technique to establish shared
secret information (i.e., a revocation passphrase) is <bcp14>OPTIONAL</bcp14> to
support.  Its precise use in CMP messages is as follows.</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.b-4">
        <li pn="section-appendix.b-4.1">
          <t indent="0" pn="section-appendix.b-4.1.1">The OID and value specified in <xref target="sect-5.3.19.9" format="default" sectionFormat="of" derivedContent="Section 5.3.19.9"/> <bcp14>MAY</bcp14> be sent in a GenMsg message
at any time or <bcp14>MAY</bcp14> be sent in the generalInfo
field of the PKIHeader of any PKIMessage at any time.  (In particular, the
EncryptedKey structure as described in <xref target="sect-5.2.2" format="default" sectionFormat="of" derivedContent="Section 5.2.2"/> may be sent in the header
of the certConf message that confirms acceptance
of certificates requested in an initialization request or certificate request
message.)  This conveys a revocation passphrase chosen by the entity to the
relevant CA/RA. When EnvelopedData is used, this is in the decrypted bytes
of the encryptedContent field. When EncryptedValue is used, this is in the decrypted
bytes of the encValue field. Furthermore, the transfer is accomplished with
appropriate confidentiality characteristics.</t>
        </li>
        <li pn="section-appendix.b-4.2">
          <t indent="0" pn="section-appendix.b-4.2.1">If a CA/RA receives the revocation passphrase (OID and value
specified in <xref target="sect-5.3.19.9" format="default" sectionFormat="of" derivedContent="Section 5.3.19.9"/>) in a GenMsg, it <bcp14>MUST</bcp14> construct and
send a GenRep message that includes the OID (with absent value)
specified in <xref target="sect-5.3.19.9" format="default" sectionFormat="of" derivedContent="Section 5.3.19.9"/>. If the CA/RA receives the
revocation passphrase in the generalInfo field of a PKIHeader of
any PKIMessage, it <bcp14>MUST</bcp14> include the OID (with absent value) in the
generalInfo field of the PKIHeader of the corresponding response
PKIMessage.  If the CA/RA is unable to return the appropriate
response message for any reason, it <bcp14>MUST</bcp14> send an error message
with a status of "rejection" and, optionally, a failInfo reason
set.</t>
        </li>
        <li pn="section-appendix.b-4.3">
          <t indent="0" pn="section-appendix.b-4.3.1">Either the localKeyId attribute of EnvelopedData as specified in
<xref target="RFC2985" format="default" sectionFormat="of" derivedContent="RFC2985"/> or the valueHint field of EncryptedValue <bcp14>MAY</bcp14>
contain a key identifier (chosen
by the entity, along with the passphrase itself) to assist in later retrieval
of the correct passphrase (e.g., when the revocation request is constructed
by the end entity and received by the CA/RA).</t>
        </li>
        <li pn="section-appendix.b-4.4">
          <t indent="0" pn="section-appendix.b-4.4.1">The revocation request message is protected by a password-based MAC (see
<xref section="6.1" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-6.1" derivedContent="RFC9481">"CMP Algorithms"</xref>)
with the revocation passphrase as the key.  If appropriate, the
senderKID field in the PKIHeader <bcp14>MAY</bcp14> contain the value previously
transmitted in localKeyId or valueHint.</t>
        </li>
      </ul>
      <t indent="0" pn="section-appendix.b-5">Note: For a message transferring a revocation passphrase indicating cmp2021(3) in the pvno field of the PKIHeader, the encrypted passphrase <bcp14>MUST</bcp14> be transferred in the envelopedData choice of EncryptedKey as defined in <xref target="sect-5.2.2" format="default" sectionFormat="of" derivedContent="Section 5.2.2"/>.  When using cmp2000(2) in the message header for backward compatibility, the encryptedValue is used. This allows the necessary conveyance and protection of the passphrase while maintaining bits-on-the-wire compatibility with <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/>. The encryptedValue choice has been deprecated in favor of encryptedData.</t>
      <t indent="0" pn="section-appendix.b-6">Using the technique specified above, the revocation passphrase may be
initially established and updated at any time without requiring extra
messages or out-of-band exchanges.  For example, the revocation
request message itself (protected and authenticated through a MAC
that uses the revocation passphrase as a key) may contain, in the
PKIHeader, a new revocation passphrase to be used for authenticating
future revocation requests for any of the entity's other
certificates.  In some environments, this may be preferable to
mechanisms that reveal the passphrase in the revocation request
message, since this can allow a denial-of-service attack in which the
revealed passphrase is used by an unauthorized third party to
authenticate revocation requests on the entity's other certificates.
However, because the passphrase is not revealed in the request
message, there is no requirement that the passphrase must always be
updated when a revocation request is made (that is, the same
passphrase <bcp14>MAY</bcp14> be used by an entity to authenticate revocation
requests for different certificates at different times).</t>
      <t indent="0" pn="section-appendix.b-7">Furthermore, the above technique can provide strong cryptographic
protection over the entire revocation request message even when a
digital signature is not used.  Techniques that do authentication of
the revocation request by simply revealing the revocation passphrase
typically do not provide cryptographic protection over the fields of
the request message (so that a request for revocation of one
certificate may be modified by an unauthorized third party to a
request for revocation of another certificate for that entity).</t>
    </section>
    <section anchor="sect-c" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c">
      <name slugifiedName="name-pki-management-message-prof">PKI Management Message Profiles (<bcp14>REQUIRED</bcp14>)</name>
      <t indent="0" pn="section-appendix.c-1">This appendix contains detailed profiles for those PKIMessages that
<bcp14>MUST</bcp14> be supported by conforming implementations (see <xref target="sect-6" format="default" sectionFormat="of" derivedContent="Section 6"/>).</t>
      <t indent="0" pn="section-appendix.c-2">Note: Appendices <xref target="sect-c" format="counter" sectionFormat="of" derivedContent="C"/> and <xref format="counter" target="sect-d" sectionFormat="of" derivedContent="D"/> focus on PKI management operations
managing certificates for human end entities.
In contrast, the Lightweight CMP Profile <xref target="RFC9483" format="default" sectionFormat="of" derivedContent="RFC9483"/> focuses on typical use
cases of industrial and IoT scenarios supporting highly automated certificate
lifecycle management scenarios.</t>
      <t indent="0" pn="section-appendix.c-3">Profiles for the PKIMessages used in the following PKI management
operations are provided:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.c-4">
        <li pn="section-appendix.c-4.1">
          <t indent="0" pn="section-appendix.c-4.1.1">initial registration/certification</t>
        </li>
        <li pn="section-appendix.c-4.2">
          <t indent="0" pn="section-appendix.c-4.2.1">basic authenticated scheme</t>
        </li>
        <li pn="section-appendix.c-4.3">
          <t indent="0" pn="section-appendix.c-4.3.1">certificate request</t>
        </li>
        <li pn="section-appendix.c-4.4">
          <t indent="0" pn="section-appendix.c-4.4.1">key update</t>
        </li>
      </ul>
      <section anchor="sect-c.1" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.1">
        <name slugifiedName="name-general-rules-for-interpret">General Rules for Interpretation of These Profiles</name>
        <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-appendix.c.1-1"><li pn="section-appendix.c.1-1.1" derivedCounter="1.">
            <t indent="0" pn="section-appendix.c.1-1.1.1">Where <bcp14>OPTIONAL</bcp14> or DEFAULT fields are not mentioned in individual
  profiles, they <bcp14>SHOULD</bcp14> be absent from the relevant message (i.e.,
  a receiver can validly reject a message containing such fields as
  being syntactically incorrect).  Mandatory fields are not
  mentioned if they have an obvious value. The protocol version number <bcp14>MUST</bcp14> be set as specified in <xref target="sect-7" format="default" sectionFormat="of" derivedContent="Section 7"/>).</t>
          </li>
          <li pn="section-appendix.c.1-1.2" derivedCounter="2.">
            <t indent="0" pn="section-appendix.c.1-1.2.1">Where structures occur in more than one message, they are
  separately profiled as appropriate.</t>
          </li>
          <li pn="section-appendix.c.1-1.3" derivedCounter="3.">
            <t indent="0" pn="section-appendix.c.1-1.3.1">The algorithmIdentifiers from PKIMessage structures are profiled
  separately.</t>
          </li>
          <li pn="section-appendix.c.1-1.4" derivedCounter="4.">
            <t indent="0" pn="section-appendix.c.1-1.4.1">A "special" X.500 DN is called the "NULL-DN"; this means a DN
  containing a zero-length SEQUENCE OF RelativeDistinguishedNames
  (its DER encoding is then '3000'H).</t>
          </li>
          <li pn="section-appendix.c.1-1.5" derivedCounter="5.">
            <t indent="0" pn="section-appendix.c.1-1.5.1">Where a GeneralName is required for a field, but no suitable
  value is available (e.g., an end entity produces a request before
  knowing its name), then the GeneralName is to be an X.500 NULL-DN
  (i.e., the Name field of the CHOICE is to contain a NULL-DN).</t>
          </li>
          <li pn="section-appendix.c.1-1.6" derivedCounter="6.">
            <t indent="0" pn="section-appendix.c.1-1.6.1">Where a profile omits to specify the value for a GeneralName,
  then the NULL-DN value is to be present in the relevant
  PKIMessage field.  This occurs with the sender field of the
  PKIHeader for some messages.</t>
          </li>
          <li pn="section-appendix.c.1-1.7" derivedCounter="7.">
            <t indent="0" pn="section-appendix.c.1-1.7.1">Where any ambiguity arises due to naming of fields, the profile
  names these using a "dot" notation (e.g., "certTemplate.subject"
  means the subject field within a field called certTemplate).</t>
          </li>
          <li pn="section-appendix.c.1-1.8" derivedCounter="8.">
            <t indent="0" pn="section-appendix.c.1-1.8.1">Where a "SEQUENCE OF types" is part of a message, a zero-based
  array notation is used to describe fields within the SEQUENCE OF
  (e.g., crm[0].certReq.certTemplate.subject refers to a subfield
  of the first CertReqMsg contained in a request message).</t>
          </li>
          <li pn="section-appendix.c.1-1.9" derivedCounter="9.">
            <t indent="0" pn="section-appendix.c.1-1.9.1">All PKI message exchanges in Appendices <xref target="sect-c.4" format="counter" sectionFormat="of" derivedContent="C.4"/> to <xref format="counter" target="sect-c.6" sectionFormat="of" derivedContent="C.6"/> require a
  certConf message to be sent by the initiating entity and a
  pkiconf message to be sent by the responding entity.  The pkiconf
  is not included in some of the profiles given since its body is
  NULL and its header contents are clear from the context.  Any
  authenticated means can be used for the protectionAlg (e.g.,
  password-based MAC, if shared secret information is known, or
  signature).</t>
          </li>
        </ol>
      </section>
      <section anchor="sect-c.2" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.2">
        <name slugifiedName="name-algorithm-use-profile">Algorithm Use Profile</name>
        <t indent="0" pn="section-appendix.c.2-1">For specifications of algorithm identifiers and respective conventions for
conforming implementations, please refer to <xref section="7.1" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-7.1" derivedContent="RFC9481">CMP Algorithms</xref>.</t>
      </section>
      <section anchor="sect-c.3" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.3">
        <name slugifiedName="name-pop-profile">POP Profile</name>
        <t indent="0" pn="section-appendix.c.3-1">The table below describes the POP fields for use (in signature field of
 pop field of ProofOfPossession structure) when proving possession of a
 private signing key that corresponds to a public verification key for
 which a certificate has been requested.</t>
        <table align="center" pn="table-2">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Field</th>
              <th align="left" colspan="1" rowspan="1">Value</th>
              <th align="left" colspan="1" rowspan="1">Comment</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">algorithmIdentifier</td>
              <td align="left" colspan="1" rowspan="1">MSG_SIG_ALG</td>
              <td align="left" colspan="1" rowspan="1">only signature protection is allowed for this proof</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">signature</td>
              <td align="left" colspan="1" rowspan="1">present</td>
              <td align="left" colspan="1" rowspan="1">bits calculated using MSG_SIG_ALG</td>
            </tr>
          </tbody>
        </table>
        <t indent="0" pn="section-appendix.c.3-3">Note: For examples of MSG_SIG_ALG OIDs, see <xref section="3" target="RFC9481" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc9481#section-3" derivedContent="RFC9481">CMP Algorithms</xref>.</t>
        <t indent="0" pn="section-appendix.c.3-4">POP of a private decryption key that corresponds to a
public encryption key for which a certificate has been requested does
not use this profile; the CertHash field of the certConf message is
used instead.</t>
        <t indent="0" pn="section-appendix.c.3-5">Not every CA/RA will do POP (of signing key,
decryption key, or key agreement key) in the PKIX-CMP in-band
certification request protocol (how POP is done <bcp14>MAY</bcp14> ultimately be a
policy issue that is made explicit for any given CA in its publicized
Policy OID and Certification Practice Statement).  However, this
specification mandates that CA/RA entities <bcp14>MUST</bcp14> do POP (by some
means) as part of the certification process.  All end entities <bcp14>MUST</bcp14>
be prepared to provide POP (i.e., these components of the PKIX-CMP
protocol <bcp14>MUST</bcp14> be supported).</t>
      </section>
      <section anchor="sect-c.4" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.4">
        <name slugifiedName="name-initial-registration-certific">Initial Registration/Certification (Basic Authenticated Scheme)</name>
        <t indent="0" pn="section-appendix.c.4-1">An (uninitialized) end entity requests a (first) certificate from a
CA.  When the CA responds with a message containing a certificate,
the end entity replies with a certificate confirmation.  The CA sends
a pkiconf message back, closing the transaction.  All messages are
authenticated.</t>
        <t indent="0" pn="section-appendix.c.4-2">This scheme allows the end entity to request certification of a
locally generated public key (typically a signature key).  The end entity
<bcp14>MAY</bcp14> also choose to request the centralized generation and
certification of another key pair (typically an encryption key pair).</t>
        <t indent="0" pn="section-appendix.c.4-3">Certification may only be requested for one locally generated public
key (for more, use separate PKIMessages).</t>
        <t indent="0" pn="section-appendix.c.4-4">The end entity <bcp14>MUST</bcp14> support POP of the private key
associated with the locally generated public key.</t>
        <t indent="0" pn="section-appendix.c.4-5">Preconditions:</t>
        <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-appendix.c.4-6"><li pn="section-appendix.c.4-6.1" derivedCounter="1.">
            <t indent="0" pn="section-appendix.c.4-6.1.1">The end entity can authenticate the CA's signature based on
out-of-band means.</t>
          </li>
          <li pn="section-appendix.c.4-6.2" derivedCounter="2.">
            <t indent="0" pn="section-appendix.c.4-6.2.1">The end entity and the CA share a symmetric MACing key.</t>
          </li>
        </ol>
        <t indent="0" pn="section-appendix.c.4-7">Message Flow:</t>
        <artset pn="section-appendix.c.4-8">
          <artwork type="svg" align="left" pn="section-appendix.c.4-8.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="560" viewBox="0 0 560 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,48 L 552,48" fill="none" stroke="black"/>
              <path d="M 200,80 L 216,80" fill="none" stroke="black"/>
              <path d="M 312,80 L 328,80" fill="none" stroke="black"/>
              <path d="M 200,128 L 216,128" fill="none" stroke="black"/>
              <path d="M 312,128 L 328,128" fill="none" stroke="black"/>
              <path d="M 200,176 L 216,176" fill="none" stroke="black"/>
              <path d="M 312,176 L 328,176" fill="none" stroke="black"/>
              <path d="M 200,224 L 216,224" fill="none" stroke="black"/>
              <path d="M 312,224 L 328,224" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="336,176 324,170.4 324,181.6" fill="black" transform="rotate(0,328,176)"/>
              <polygon class="arrowhead" points="336,80 324,74.4 324,85.6" fill="black" transform="rotate(0,328,80)"/>
              <polygon class="arrowhead" points="320,224 308,218.4 308,229.6" fill="black" transform="rotate(180,312,224)"/>
              <polygon class="arrowhead" points="320,128 308,122.4 308,133.6" fill="black" transform="rotate(180,312,128)"/>
              <polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
              <polygon class="arrowhead" points="224,80 212,74.4 212,85.6" fill="black" transform="rotate(0,216,80)"/>
              <polygon class="arrowhead" points="208,224 196,218.4 196,229.6" fill="black" transform="rotate(180,200,224)"/>
              <polygon class="arrowhead" points="208,128 196,122.4 196,133.6" fill="black" transform="rotate(180,200,128)"/>
              <g class="text">
                <text x="24" y="36">Step#</text>
                <text x="64" y="36">End</text>
                <text x="108" y="36">entity</text>
                <text x="360" y="36">PKI</text>
                <text x="24" y="68">1</text>
                <text x="76" y="68">format</text>
                <text x="116" y="68">ir</text>
                <text x="24" y="84">2</text>
                <text x="252" y="84">ir</text>
                <text x="24" y="100">3</text>
                <text x="372" y="100">handle</text>
                <text x="412" y="100">ir</text>
                <text x="24" y="116">4</text>
                <text x="372" y="116">format</text>
                <text x="412" y="116">ip</text>
                <text x="24" y="132">5</text>
                <text x="252" y="132">ip</text>
                <text x="24" y="148">6</text>
                <text x="76" y="148">handle</text>
                <text x="116" y="148">ip</text>
                <text x="24" y="164">7</text>
                <text x="76" y="164">format</text>
                <text x="140" y="164">certConf</text>
                <text x="24" y="180">8</text>
                <text x="268" y="180">certConf</text>
                <text x="24" y="196">9</text>
                <text x="372" y="196">handle</text>
                <text x="436" y="196">certConf</text>
                <text x="20" y="212">10</text>
                <text x="372" y="212">format</text>
                <text x="432" y="212">pkiconf</text>
                <text x="20" y="228">11</text>
                <text x="264" y="228">pkiconf</text>
                <text x="20" y="244">12</text>
                <text x="76" y="244">handle</text>
                <text x="136" y="244">pkiconf</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="left" pn="section-appendix.c.4-8.2">
Step# End entity                           PKI
---------------------------------------------------------------------
  1   format ir
  2                     --&gt;   ir      --&gt;
  3                                        handle ir
  4                                        format ip
  5                     &lt;--   ip      &lt;--
  6   handle ip
  7   format certConf
  8                     --&gt;  certConf --&gt;
  9                                        handle certConf
 10                                        format pkiconf
 11                     &lt;--  pkiconf  &lt;--
 12   handle pkiconf
</artwork>
        </artset>
        <t indent="0" pn="section-appendix.c.4-9">For this profile, we mandate that the end entity <bcp14>MUST</bcp14> include all
(i.e., one or two) CertReqMsg in a single PKIMessage and that the
PKI (CA) <bcp14>MUST</bcp14> produce a single response PKIMessage that contains the
complete response (i.e., including the <bcp14>OPTIONAL</bcp14> second key pair, if
it was requested and if centralized key generation is supported).
For simplicity, we also mandate that this message <bcp14>MUST</bcp14> be the final
	one (i.e., no use of "waiting" status value).</t>
        <t indent="0" pn="section-appendix.c.4-10">The end entity has an out-of-band interaction with the CA/RA.  This
transaction established the shared secret, the referenceNumber, and
optionally the DN used for both the sender and subject
name in the certificate template. See <xref target="sect-8.7" format="default" sectionFormat="of" derivedContent="Section 8.7"/> for security
	considerations on quality of shared secret information.</t>
        <t indent="0" pn="section-appendix.c.4-11">Initialization Request -- ir</t>
        <artwork align="left" pn="section-appendix.c.4-12">	
Field                Value

recipient            CA name
  -- the name of the CA who is being asked to produce a certificate
protectionAlg        MSG_MAC_ALG
  -- only MAC protection is allowed for this request, based
  -- on initial authentication key
senderKID            referenceNum
  -- the reference number that the CA has previously issued
  -- to the end entity (together with the MACing key)
transactionID        present
  -- implementation-specific value, meaningful to end
  -- entity.
  -- [If already in use at the CA, then a rejection message MUST
  -- be produced by the CA]

senderNonce          present
  -- 128 (pseudo-)random bits
freeText             any valid value
body                 ir (CertReqMessages)
                     only one or two CertReqMsg
                     are allowed
  -- if more certificates are required, requests MUST be
  -- packaged in separate PKIMessages

CertReqMsg           one or two present
  -- see below for details, note: crm[0] means the first
  -- (which MUST be present), crm[1] means the second (which
  -- is OPTIONAL, and used to ask for a centrally generated key)

crm[0].certReq.      fixed value of zero
   certReqId
  -- this is the index of the template within the message
crm[0].certReq       present
   certTemplate
  -- MUST include subject public key value, otherwise unconstrained
crm[0].pop...        optionally present if public key
   POPOSigningKey    from crm[0].certReq.certTemplate is
                     a signing key
  -- POP MAY be required in this exchange
  -- (see Appendix D.3 for details)
crm[0].certReq.      optionally present
   controls.archiveOptions
  -- the end entity MAY request that the locally generated
  -- private key be archived

crm[0].certReq.      optionally present
   controls.publicationInfo
  -- the end entity MAY ask for publication of resulting cert.

crm[1].certReq       fixed value of one
      certReqId
     -- the index of the template within the message
   crm[1].certReq       present
      certTemplate
      -- MUST NOT include actual public key bits, otherwise
      -- unconstrained (e.g., the names need not be the same as in
      -- crm[0]).  Note that subjectPublicKeyInfo MAY be present
      -- and contain an AlgorithmIdentifier followed by a
      -- zero-length BIT STRING for the subjectPublicKey if it is
      -- desired to inform the CA/RA of algorithm and parameter
      -- preferences regarding the to-be-generated key pair.

   crm[1].certReq.      present [object identifier MUST be
                                 PROT_ENC_ALG]

      controls.protocolEncrKey
     -- if centralized key generation is supported by this CA,
     -- this short-term asymmetric encryption key (generated by
     -- the end entity) will be used by the CA to encrypt (a
     -- symmetric key used to encrypt) a private key generated by
     -- the CA on behalf of the end entity

crm[1].certReq.      optionally present
   controls.archiveOptions
crm[1].certReq.      optionally present
   controls.publicationInfo
protection           present
  -- bits calculated using MSG_MAC_ALG
</artwork>
        <t indent="0" pn="section-appendix.c.4-13">Initialization Response -- ip</t>
        <artwork align="left" pn="section-appendix.c.4-14">
Field                Value

sender               CA name
  -- the name of the CA who produced the message
messageTime          present
  -- time at which CA produced message
protectionAlg        MSG_MAC_ALG
  -- only MAC protection is allowed for this response
senderKID             referenceNum
  -- the reference number that the CA has previously issued to the
  -- end entity (together with the MACing key)
transactionID        present
  -- value from corresponding ir message
senderNonce          present
  -- 128 (pseudo-)random bits
recipNonce           present
  -- value from senderNonce in corresponding ir message
freeText             any valid value
body                 ip (CertRepMessage)
                     contains exactly one response
                     for each request
  -- The PKI (CA) responds to either one or two requests as
  -- appropriate.  crc[0] denotes the first (always present);
  -- crc[1] denotes the second (only present if the ir message
  -- contained two requests and if the CA supports centralized
  -- key generation).
crc[0].              fixed value of zero
   certReqId
  -- MUST contain the response to the first request in the
  -- corresponding ir message
crc[0].status.       present, positive values allowed:
   status               "accepted", "grantedWithMods"
                     negative values allowed:
                        "rejection"
crc[0].status.       present if and only if
   failInfo          crc[0].status.status is "rejection"
crc[0].              present if and only if
   certifiedKeyPair  crc[0].status.status is
                        "accepted" or "grantedWithMods"
certificate          present unless end entity's public
                     key is an encryption key and POP
                     is done in this in-band exchange
encryptedCert        present if and only if end entity's
                     public key is an encryption key and
                     POP done in this in-band exchange
publicationInfo      optionally present

  -- indicates where certificate has been published (present
  -- at discretion of CA)

crc[1].              fixed value of one
   certReqId
  -- MUST contain the response to the second request in the
  -- corresponding ir message
crc[1].status.       present, positive values allowed:
   status               "accepted", "grantedWithMods"
                     negative values allowed:
                        "rejection"
crc[1].status.       present if and only if
   failInfo          crc[0].status.status is "rejection"
crc[1].              present if and only if
   certifiedKeyPair  crc[0].status.status is "accepted"
                     or "grantedWithMods"
certificate          present
privateKey           present
  -- Use EnvelopedData; if backward compatibility is required,
  -- use EncryptedValue, see Section 5.2.2
publicationInfo      optionally present
  -- indicates where certificate has been published (present
  -- at discretion of CA)

protection           present
  -- bits calculated using MSG_MAC_ALG
extraCerts           optionally present
  -- the CA MAY provide additional certificates to the end
  -- entity
</artwork>
        <t indent="0" pn="section-appendix.c.4-15">Certificate confirm -- certConf</t>
        <artwork align="left" pn="section-appendix.c.4-16">
Field                Value

sender               present
  -- same as in ir
recipient            CA name
  -- the name of the CA who was asked to produce a certificate
transactionID        present
  -- value from corresponding ir and ip messages
senderNonce          present
  -- 128 (pseudo-)random bits
recipNonce           present
  -- value from senderNonce in corresponding ip message
protectionAlg        MSG_MAC_ALG
  -- only MAC protection is allowed for this message.  The
  -- MAC is based on the initial authentication key shared
  -- between the end entity and the CA.

senderKID            referenceNum
  -- the reference number that the CA has previously issued
  -- to the end entity (together with the MACing key)

body                 certConf
  -- see Section 5.3.18, "PKI Confirmation Content", for the
  -- contents of the certConf fields.
  -- Note: two CertStatus structures are required if both an
  -- encryption and a signing certificate were sent.

protection           present
  -- bits calculated using MSG_MAC_ALG
</artwork>
        <t indent="0" pn="section-appendix.c.4-17">Confirmation -- pkiconf</t>
        <artwork align="left" pn="section-appendix.c.4-18">
Field                Value

sender               present
  -- same as in ip
recipient            present
  -- sender name from certConf
transactionID        present
  -- value from certConf message
senderNonce          present
  -- 128 (pseudo-)random bits
recipNonce           present
  -- value from senderNonce from certConf message
protectionAlg        MSG_MAC_ALG
  -- only MAC protection is allowed for this message.
senderKID            referenceNum
body                 pkiconf
protection           present
  -- bits calculated using MSG_MAC_ALG
</artwork>
      </section>
      <section anchor="sect-c.5" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.5">
        <name slugifiedName="name-certificate-request-2">Certificate Request</name>
        <t indent="0" pn="section-appendix.c.5-1">An (initialized) end entity requests a certificate from a CA (for any
reason).  When the CA responds with a message containing a
certificate, the end entity replies with a certificate confirmation.
The CA replies with a pkiconf message to close the transaction.  All
messages are authenticated.</t>
        <t indent="0" pn="section-appendix.c.5-2">The profile for this exchange is identical to that given in <xref target="sect-c.4" format="default" sectionFormat="of" derivedContent="Appendix C.4"/>,
with the following exceptions:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.c.5-3">
          <li pn="section-appendix.c.5-3.1">
            <t indent="0" pn="section-appendix.c.5-3.1.1">sender name <bcp14>SHOULD</bcp14> be present;</t>
          </li>
          <li pn="section-appendix.c.5-3.2">
            <t indent="0" pn="section-appendix.c.5-3.2.1">protectionAlg of MSG_SIG_ALG <bcp14>MUST</bcp14> be supported (MSG_MAC_ALG <bcp14>MAY</bcp14>
also be supported) in request, response, certConf, and
pkiconf messages;</t>
          </li>
          <li pn="section-appendix.c.5-3.3">
            <t indent="0" pn="section-appendix.c.5-3.3.1">senderKID and recipKID are only present if required for message
verification;</t>
          </li>
          <li pn="section-appendix.c.5-3.4">
            <t indent="0" pn="section-appendix.c.5-3.4.1">body is cr or cp;</t>
          </li>
          <li pn="section-appendix.c.5-3.5">
            <t indent="0" pn="section-appendix.c.5-3.5.1">body may contain one or two CertReqMsg structures, but either
CertReqMsg may be used to request certification of a
locally generated public key or a centrally generated public key
(i.e., the position-dependence requirement of <xref target="sect-c.4" format="default" sectionFormat="of" derivedContent="Appendix C.4"/> is
removed); and</t>
          </li>
          <li pn="section-appendix.c.5-3.6">
            <t indent="0" pn="section-appendix.c.5-3.6.1">protection bits are calculated according to the protectionAlg
field.</t>
          </li>
        </ul>
      </section>
      <section anchor="sect-c.6" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.6">
        <name slugifiedName="name-key-update-request">Key Update Request</name>
        <t indent="0" pn="section-appendix.c.6-1">An (initialized) end entity requests a certificate from a CA (to
update the key pair and/or corresponding certificate that it already
possesses).  When the CA responds with a message containing a
certificate, the end entity replies with a certificate confirmation.
The CA replies with a PKIConfirm to close the transaction.  All
messages are authenticated.</t>
        <t indent="0" pn="section-appendix.c.6-2">The profile for this exchange is identical to that given in <xref target="sect-c.4" format="default" sectionFormat="of" derivedContent="Appendix C.4"/>,
	with the following exceptions:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.c.6-3">
          <li pn="section-appendix.c.6-3.1">
            <t indent="0" pn="section-appendix.c.6-3.1.1">sender name <bcp14>SHOULD</bcp14> be present;</t>
          </li>
          <li pn="section-appendix.c.6-3.2">
            <t indent="0" pn="section-appendix.c.6-3.2.1">protectionAlg of MSG_SIG_ALG <bcp14>MUST</bcp14> be supported (MSG_MAC_ALG <bcp14>MAY</bcp14>
  also be supported) in request, response, certConfirm, and
  PKIConfirm messages;</t>
          </li>
          <li pn="section-appendix.c.6-3.3">
            <t indent="0" pn="section-appendix.c.6-3.3.1">senderKID and recipKID are only present if required for message
  verification;</t>
          </li>
          <li pn="section-appendix.c.6-3.4">
            <t indent="0" pn="section-appendix.c.6-3.4.1">body is kur or kup;</t>
          </li>
          <li pn="section-appendix.c.6-3.5">
            <t indent="0" pn="section-appendix.c.6-3.5.1">body may contain one or two CertReqMsg structures, but either
  CertReqMsg may be used to request certification of a locally generated
  public key or a centrally generated public key (i.e.,the
  position-dependence requirement of <xref target="sect-c.4" format="default" sectionFormat="of" derivedContent="Appendix C.4"/> is removed);</t>
          </li>
          <li pn="section-appendix.c.6-3.6">
            <t indent="0" pn="section-appendix.c.6-3.6.1">protection bits are calculated according to the protectionAlg
  field; and</t>
          </li>
          <li pn="section-appendix.c.6-3.7">
            <t indent="0" pn="section-appendix.c.6-3.7.1">regCtrl OldCertId <bcp14>SHOULD</bcp14> be used (unless it is clear to both the
  sender and receiver -- by means not specified in this document --
  that it is not needed).</t>
          </li>
        </ul>
      </section>
    </section>
    <section anchor="sect-d" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d">
      <name slugifiedName="name-pki-management-message-profi">PKI Management Message Profiles (<bcp14>OPTIONAL</bcp14>)</name>
      <t indent="0" pn="section-appendix.d-1">This appendix contains detailed profiles for those PKIMessages that
<bcp14>MAY</bcp14> be supported by implementations.</t>
      <t indent="0" pn="section-appendix.d-2">Profiles for the PKIMessages used in the following PKI management
operations are provided:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.d-3">
        <li pn="section-appendix.d-3.1">
          <t indent="0" pn="section-appendix.d-3.1.1">root CA key update</t>
        </li>
        <li pn="section-appendix.d-3.2">
          <t indent="0" pn="section-appendix.d-3.2.1">information request/response</t>
        </li>
        <li pn="section-appendix.d-3.3">
          <t indent="0" pn="section-appendix.d-3.3.1">cross-certification request/response (1-way)</t>
        </li>
        <li pn="section-appendix.d-3.4">
          <t indent="0" pn="section-appendix.d-3.4.1">in-band initialization using external identity certificate</t>
        </li>
      </ul>
      <t indent="0" pn="section-appendix.d-4">Future versions of this document may extend the above to include
profiles for the operations listed below (along with other
operations, if desired).</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.d-5">
        <li pn="section-appendix.d-5.1">
          <t indent="0" pn="section-appendix.d-5.1.1">revocation request</t>
        </li>
        <li pn="section-appendix.d-5.2">
          <t indent="0" pn="section-appendix.d-5.2.1">certificate publication</t>
        </li>
        <li pn="section-appendix.d-5.3">
          <t indent="0" pn="section-appendix.d-5.3.1">CRL publication</t>
        </li>
      </ul>
      <section anchor="sect-d.1" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d.1">
        <name slugifiedName="name-general-rules-for-interpreta">General Rules for Interpretation of These Profiles</name>
        <t indent="0" pn="section-appendix.d.1-1">Identical to <xref target="sect-c.1" format="default" sectionFormat="of" derivedContent="Appendix C.1"/>.</t>
      </section>
      <section anchor="sect-d.2" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d.2">
        <name slugifiedName="name-algorithm-use-profile-2">Algorithm Use Profile</name>
        <t indent="0" pn="section-appendix.d.2-1">Identical to <xref target="sect-c.2" format="default" sectionFormat="of" derivedContent="Appendix C.2"/>.</t>
      </section>
      <section anchor="sect-d.3" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d.3">
        <name slugifiedName="name-self-signed-certificates">Self-Signed Certificates</name>
        <t indent="0" pn="section-appendix.d.3-1"> The table below is a profile of how a certificate structure may be
 "self-signed".  These
structures are used for distribution of new root CA public keys.  This can
occur in one of three ways (see <xref target="sect-4.4" format="default" sectionFormat="of" derivedContent="Section 4.4"/> above for a description
of the use of these structures):</t>
        <table align="center" pn="table-3">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Type</th>
              <th align="left" colspan="1" rowspan="1">Function</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">newWithNew</td>
              <td align="left" colspan="1" rowspan="1">a "self-signed" certificate; the contained public key <bcp14>MUST</bcp14> be usable to verify the signature (though this provides only integrity and no authentication whatsoever)</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">oldWithNew</td>
              <td align="left" colspan="1" rowspan="1">previous root CA public key signed with new private key</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">newWithOld</td>
              <td align="left" colspan="1" rowspan="1">new root CA public key signed with previous private key</td>
            </tr>
          </tbody>
        </table>
        <t indent="0" pn="section-appendix.d.3-3">A newWithNew certificate (including relevant extensions) must contain
"sensible" values for all fields.  For example, when present,
subjectAltName <bcp14>MUST</bcp14> be identical to issuerAltName, and, when present,
keyIdentifiers must contain appropriate values, et cetera.</t>
      </section>
      <section anchor="sect-d.4" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d.4">
        <name slugifiedName="name-root-ca-key-update-3">Root CA Key Update</name>
        <t indent="0" pn="section-appendix.d.4-1">A root CA updates its key pair.  It then produces a CA key update
announcement message that can be made available (via some transport
mechanism) to the relevant entities.  A confirmation message is
not required from the end entities.</t>
        <t indent="0" pn="section-appendix.d.4-2">ckuann message:</t>
        <table align="center" pn="table-4">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Field</th>
              <th align="left" colspan="1" rowspan="1">Value</th>
              <th align="left" colspan="1" rowspan="1">Comment</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">sender</td>
              <td align="left" colspan="1" rowspan="1">CA name CA name</td>
              <td align="left" colspan="1" rowspan="1"> </td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">body</td>
              <td align="left" colspan="1" rowspan="1">ckuann(RootCaKeyUpdateContent)</td>
              <td align="left" colspan="1" rowspan="1"> </td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">newWithNew</td>
              <td align="left" colspan="1" rowspan="1">optionally present</td>
              <td align="left" colspan="1" rowspan="1">see <xref target="sect-d.3" format="default" sectionFormat="of" derivedContent="Appendix D.3"/> above</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">newWithOld</td>
              <td align="left" colspan="1" rowspan="1">optionally present</td>
              <td align="left" colspan="1" rowspan="1">see <xref target="sect-d.3" format="default" sectionFormat="of" derivedContent="Appendix D.3"/> above</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">oldWithNew</td>
              <td align="left" colspan="1" rowspan="1">optionally present</td>
              <td align="left" colspan="1" rowspan="1">see <xref target="sect-d.3" format="default" sectionFormat="of" derivedContent="Appendix D.3"/> above</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">extraCerts</td>
              <td align="left" colspan="1" rowspan="1">optionally present</td>
              <td align="left" colspan="1" rowspan="1">can be used to "publish" certificates (e.g., certificates signed using the new private key)</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sect-d.5" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d.5">
        <name slugifiedName="name-pki-information-request-res">PKI Information Request/Response</name>
        <t indent="0" pn="section-appendix.d.5-1">The end entity sends a general message to the PKI requesting details
that will be required for later PKI management operations.  The RA/CA
responds with a general response.  If an RA generates the response,
then it will simply forward the equivalent message that it previously
received from the CA, with the possible addition of certificates to
the extraCerts fields of the PKIMessage.  A confirmation message is
not required from the end entity.</t>
        <t indent="0" pn="section-appendix.d.5-2">Message Flows:</t>
        <artset pn="section-appendix.d.5-3">
          <artwork type="svg" align="left" pn="section-appendix.d.5-3.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="160" width="560" viewBox="0 0 560 160" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,48 L 552,48" fill="none" stroke="black"/>
              <path d="M 160,80 L 176,80" fill="none" stroke="black"/>
              <path d="M 264,80 L 280,80" fill="none" stroke="black"/>
              <path d="M 160,128 L 176,128" fill="none" stroke="black"/>
              <path d="M 264,128 L 280,128" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="288,80 276,74.4 276,85.6" fill="black" transform="rotate(0,280,80)"/>
              <polygon class="arrowhead" points="272,128 260,122.4 260,133.6" fill="black" transform="rotate(180,264,128)"/>
              <polygon class="arrowhead" points="184,80 172,74.4 172,85.6" fill="black" transform="rotate(0,176,80)"/>
              <polygon class="arrowhead" points="168,128 156,122.4 156,133.6" fill="black" transform="rotate(180,160,128)"/>
              <g class="text">
                <text x="24" y="36">Step#</text>
                <text x="64" y="36">End</text>
                <text x="108" y="36">entity</text>
                <text x="336" y="36">PKI</text>
                <text x="24" y="68">1</text>
                <text x="76" y="68">format</text>
                <text x="124" y="68">genm</text>
                <text x="24" y="84">2</text>
                <text x="220" y="84">genm</text>
                <text x="24" y="100">3</text>
                <text x="348" y="100">handle</text>
                <text x="396" y="100">genm</text>
                <text x="24" y="116">4</text>
                <text x="352" y="116">produce</text>
                <text x="404" y="116">genp</text>
                <text x="24" y="132">5</text>
                <text x="220" y="132">genp</text>
                <text x="24" y="148">6</text>
                <text x="76" y="148">handle</text>
                <text x="124" y="148">genp</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="left" pn="section-appendix.d.5-3.2">
Step# End entity                        PKI
---------------------------------------------------------------------
  1   format genm
  2                --&gt;   genm   --&gt;
  3                                     handle genm
  4                                     produce genp
  5                &lt;--   genp   &lt;--
  6   handle genp
</artwork>
        </artset>
        <t indent="0" pn="section-appendix.d.5-4">genM:</t>
        <artwork align="left" pn="section-appendix.d.5-5">
Field               Value

recipient           CA name
  -- the name of the CA as contained in issuerAltName
  -- extensions or issuer fields within certificates
protectionAlg       MSG_MAC_ALG or MSG_SIG_ALG
  -- any authenticated protection alg.
SenderKID           present if required
  -- must be present if required for verification of message
  -- protection
freeText            any valid value
body                genr (GenReqContent)
GenMsgContent       empty SEQUENCE
  -- all relevant information requested
protection          present
  -- bits calculated using MSG_MAC_ALG or MSG_SIG_ALG
</artwork>
        <t indent="0" pn="section-appendix.d.5-6">genP:</t>
        <artwork align="left" pn="section-appendix.d.5-7">
Field                Value

sender               CA name
  -- name of the CA that produced the message
protectionAlg        MSG_MAC_ALG or MSG_SIG_ALG
  -- any authenticated protection alg.
senderKID            present if required
  -- must be present if required for verification of message
  -- protection
body                 genp (GenRepContent)
CAProtEncCert        present (object identifier one
                     of PROT_ENC_ALG), with relevant
                     value
  -- to be used if end entity needs to encrypt information for
  -- the CA (e.g., private key for recovery purposes)

SignKeyPairTypes     present, with relevant value
  -- the set of signature algorithm identifiers that this CA will
  -- certify for subject public keys
EncKeyPairTypes      present, with relevant value
  -- the set of encryption / key agreement algorithm identifiers that
  -- this CA will certify for subject public keys
PreferredSymmAlg     present (object identifier one
                     of PROT_SYM_ALG) , with relevant
                     value
  -- the symmetric algorithm that this CA expects to be used
  -- in later PKI messages (for encryption)
RootCaKeyUpdate      optionally present, with
                     relevant value
  -- Use RootCaKeyUpdate; if backward compatibility with cmp2000 is
  -- required, use CAKeyUpdateInfo.
  -- The CA MAY provide information about a relevant root CA
  -- key pair using this field (note that this does not imply
  -- that the responding CA is the root CA in question)
CurrentCRL           optionally present, with relevant value
  -- the CA MAY provide a copy of a complete CRL (i.e.,
  -- fullest possible one)
protection           present
  -- bits calculated using MSG_MAC_ALG or MSG_SIG_ALG
extraCerts           optionally present
  -- can be used to send some certificates to the end
  -- entity. An RA MAY add its certificate here.
</artwork>
      </section>
      <section anchor="sect-d.6" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d.6">
        <name slugifiedName="name-cross-certification-request-">Cross-Certification Request/Response (1-way)</name>
        <t indent="0" pn="section-appendix.d.6-1"> This section describes the creation of a single cross-certificate (i.e.,
 not two at once). The
requesting CA <bcp14>MAY</bcp14> choose who is responsible for publication of the
cross-certificate created by the responding CA through use of the
PKIPublicationInfo control.</t>
        <t indent="0" pn="section-appendix.d.6-2">Preconditions:</t>
        <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-appendix.d.6-3"><li pn="section-appendix.d.6-3.1" derivedCounter="1.">
            <t indent="0" pn="section-appendix.d.6-3.1.1">Responding CA can verify the origin of the request (possibly
  requiring out-of-band means) before processing the request.</t>
          </li>
          <li pn="section-appendix.d.6-3.2" derivedCounter="2.">
            <t indent="0" pn="section-appendix.d.6-3.2.1">Requesting CA can authenticate the authenticity of the origin of
  the response (possibly requiring out-of-band means) before
  processing the response.</t>
          </li>
        </ol>
        <t indent="0" pn="section-appendix.d.6-4">The use of certificate confirmation and the corresponding server
confirmation is determined by the generalInfo field in the PKIHeader
(see <xref target="sect-5.1.1" format="default" sectionFormat="of" derivedContent="Section 5.1.1"/>).  The following profile does not mandate support
for either confirmation.</t>
        <t indent="0" pn="section-appendix.d.6-5">Message Flows:</t>
        <artset pn="section-appendix.d.6-6">
          <artwork type="svg" align="left" pn="section-appendix.d.6-6.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="160" width="560" viewBox="0 0 560 160" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,48 L 552,48" fill="none" stroke="black"/>
              <path d="M 176,80 L 192,80" fill="none" stroke="black"/>
              <path d="M 288,80 L 304,80" fill="none" stroke="black"/>
              <path d="M 176,128 L 192,128" fill="none" stroke="black"/>
              <path d="M 288,128 L 304,128" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="312,80 300,74.4 300,85.6" fill="black" transform="rotate(0,304,80)"/>
              <polygon class="arrowhead" points="296,128 284,122.4 284,133.6" fill="black" transform="rotate(180,288,128)"/>
              <polygon class="arrowhead" points="200,80 188,74.4 188,85.6" fill="black" transform="rotate(0,192,80)"/>
              <polygon class="arrowhead" points="184,128 172,122.4 172,133.6" fill="black" transform="rotate(180,176,128)"/>
              <g class="text">
                <text x="24" y="36">Step#</text>
                <text x="92" y="36">Requesting</text>
                <text x="148" y="36">CA</text>
                <text x="380" y="36">Responding</text>
                <text x="436" y="36">CA</text>
                <text x="24" y="68">1</text>
                <text x="76" y="68">format</text>
                <text x="120" y="68">ccr</text>
                <text x="24" y="84">2</text>
                <text x="240" y="84">ccr</text>
                <text x="24" y="100">3</text>
                <text x="364" y="100">handle</text>
                <text x="408" y="100">ccr</text>
                <text x="24" y="116">4</text>
                <text x="368" y="116">produce</text>
                <text x="416" y="116">ccp</text>
                <text x="24" y="132">5</text>
                <text x="240" y="132">ccp</text>
                <text x="24" y="148">6</text>
                <text x="76" y="148">handle</text>
                <text x="120" y="148">ccp</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="left" pn="section-appendix.d.6-6.2">
Step# Requesting CA                       Responding CA
---------------------------------------------------------------------
  1   format ccr
  2                  --&gt;    ccr    --&gt;
  3                                       handle ccr
  4                                       produce ccp
  5                  &lt;--    ccp    &lt;--
  6   handle ccp
</artwork>
        </artset>
        <t indent="0" pn="section-appendix.d.6-7">ccr:</t>
        <artwork align="left" pn="section-appendix.d.6-8">
Field                 Value

sender                Requesting CA name
  -- the name of the CA who produced the message
recipient             Responding CA name
  -- the name of the CA who is being asked to produce a certificate
messageTime           time of production of message
  -- current time at requesting CA
protectionAlg         MSG_SIG_ALG
  -- only signature protection is allowed for this request
senderKID             present if required
  -- must be present if required for verification of message
  -- protection
recipKID             present if required
  -- must be present if required for verification of message
  -- protection
transactionID         present
  -- implementation-specific value, meaningful to requesting CA.
  -- [If already in use at responding CA, then a rejection message
  -- MUST be produced by responding CA]
senderNonce           present
  -- 128 (pseudo-)random bits
freeText              any valid value
body                  ccr (CertReqMessages)
                      only one CertReqMsg
                      allowed
  -- if multiple cross-certificates are required, they MUST be
  -- packaged in separate PKIMessages
certTemplate          present
  -- details follow
version               v1 or v3
  -- v3 STRONGLY RECOMMENDED
signingAlg            present
  -- the requesting CA must know in advance with which algorithm it
  -- wishes the certificate to be signed

subject               present
  -- may be NULL-DN only if subjectAltNames extension value proposed
validity              present
  -- MUST be completely specified (i.e., both fields present)
issuer                present
  -- may be NULL-DN only if issuerAltNames extension value proposed
publicKey             present
  -- the key to be certified (which must be for a signing algorithm)
extensions            optionally present
  -- a requesting CA must propose values for all extensions
  -- that it requires to be in the cross-certificate
POPOSigningKey        present
  -- see Appendix C.3: POP Profile
protection            present
  -- bits calculated using MSG_SIG_ALG
extraCerts            optionally present
  -- MAY contain any additional certificates that requester wishes
  -- to include
</artwork>
        <t indent="0" pn="section-appendix.d.6-9">ccp:</t>
        <artwork align="left" pn="section-appendix.d.6-10">
Field                 Value

sender                Responding CA name
  -- the name of the CA who produced the message
recipient             Requesting CA name
  -- the name of the CA who asked for production of a certificate
messageTime           time of production of message
  -- current time at responding CA
protectionAlg         MSG_SIG_ALG
  -- only signature protection is allowed for this message
senderKID             present if required
  -- must be present if required for verification of message
  -- protection
recipKID              present if required
transactionID         present
  -- value from corresponding ccr message
senderNonce           present
  -- 128 (pseudo-)random bits
recipNonce            present
-- senderNonce from corresponding ccr message
freeText              any valid value
body                  ccp (CertRepMessage)
                      only one CertResponse allowed
  -- if multiple cross-certificates are required, they MUST be
  -- packaged in separate PKIMessages
response              present
status                present

PKIStatusInfo.status  present
  -- if PKIStatusInfo.status is one of:
  --   accepted, or
  --   grantedWithMods,
  -- then certifiedKeyPair MUST be present and failInfo MUST
  -- be absent

failInfo              present depending on
                      PKIStatusInfo.status
  -- if PKIStatusInfo.status is:
  --   rejection,
  -- then certifiedKeyPair MUST be absent and failInfo MUST be
  -- present and contain appropriate bit settings

certifiedKeyPair      present depending on
                      PKIStatusInfo.status
certificate           present depending on
                      certifiedKeyPair
  -- content of actual certificate must be examined by requesting CA
  -- before publication
protection            present
  -- bits calculated using MSG_SIG_ALG
extraCerts            optionally present
  -- MAY contain any additional certificates that responder wishes
  -- to include
</artwork>
      </section>
      <section anchor="sect-d.7" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d.7">
        <name slugifiedName="name-in-band-initialization-usin">In-Band Initialization Using External Identity Certificate</name>
        <t indent="0" pn="section-appendix.d.7-1">An (uninitialized) end entity wishes to initialize into the PKI with
a CA, CA-1.  It uses, for authentication purposes, a pre-existing
identity certificate issued by another (external) CA, CA-X.  A trust
relationship must already have been established between CA-1 and CA-X
so that CA-1 can validate the end entity identity certificate signed by CA-X.
Furthermore, some mechanism must already have been established within
the TEE, also known as
PSE, of the end entity that would allow it
to authenticate and verify PKIMessages signed by CA-1 (as one
example, the TEE may contain a certificate issued for the public key
of CA-1, signed by another CA that the end entity trusts on the basis of
out-of-band authentication techniques).</t>
        <t indent="0" pn="section-appendix.d.7-2">The end entity sends an initialization request to start the transaction.
When CA-1 responds with a message containing the new certificate, the
end entity replies with a certificate confirmation.  CA-1 replies
with a pkiconf message to close the transaction.  All messages are signed
(the end entity messages are signed using the private key that corresponds to
the public key in its external identity certificate; the CA-1
messages are signed using the private key that corresponds to the
public key in a certificate that can be chained to a trust anchor in the end entity's TEE).</t>
        <t indent="0" pn="section-appendix.d.7-3">The profile for this exchange is identical to that given in <xref target="sect-c.4" format="default" sectionFormat="of" derivedContent="Appendix C.4"/>,
with the following exceptions:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.d.7-4">
          <li pn="section-appendix.d.7-4.1">
            <t indent="0" pn="section-appendix.d.7-4.1.1">the end entity and CA-1 do not share a symmetric MACing key (i.e., there
is no out-of-band shared secret information between these
entities);</t>
          </li>
          <li pn="section-appendix.d.7-4.2">
            <t indent="0" pn="section-appendix.d.7-4.2.1">sender name in ir <bcp14>MUST</bcp14> be present (and identical to the subject
name present in the external identity certificate);</t>
          </li>
          <li pn="section-appendix.d.7-4.3">
            <t indent="0" pn="section-appendix.d.7-4.3.1">protectionAlg of MSG_SIG_ALG <bcp14>MUST</bcp14> be used in all messages;</t>
          </li>
          <li pn="section-appendix.d.7-4.4">
            <t indent="0" pn="section-appendix.d.7-4.4.1">external identity certificate <bcp14>MUST</bcp14> be carried in ir extraCerts field</t>
          </li>
          <li pn="section-appendix.d.7-4.5">
            <t indent="0" pn="section-appendix.d.7-4.5.1">senderKID and recipKID are not used;</t>
          </li>
          <li pn="section-appendix.d.7-4.6">
            <t indent="0" pn="section-appendix.d.7-4.6.1">body is ir or ip; and</t>
          </li>
          <li pn="section-appendix.d.7-4.7">
            <t indent="0" pn="section-appendix.d.7-4.7.1">protection bits are calculated according to the protectionAlg
field.</t>
          </li>
        </ul>
      </section>
    </section>
    <section anchor="sect-e" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.e">
      <name slugifiedName="name-variants-of-using-kem-keys-">Variants of Using KEM Keys for PKI Message Protection</name>
      <t indent="0" pn="section-appendix.e-1">As described in <xref target="sect-5.1.3.4" format="default" sectionFormat="of" derivedContent="Section 5.1.3.4"/>, any party in a PKI management operation may wish to use a KEM key pair for message protection. Possible cases are described below.</t>
      <t indent="0" pn="section-appendix.e-2">For any PKI management operation started by a PKI entity with any type of request message, the following message flows describe the use of a KEM key. There are two cases to distinguish, namely whether the PKI entity or the PKI management entity owns a KEM key pair. If both sides own KEM key pairs, the flows need to be combined such that for each direction a shared secret key is established.</t>
      <t indent="0" pn="section-appendix.e-3">In the following message flows, Alice indicates the PKI entity that uses a KEM key pair for message authentication and Bob provides the KEM ciphertext using Alice's public KEM key, as described in <xref target="sect-5.1.3.4" format="default" sectionFormat="of" derivedContent="Section 5.1.3.4"/>.</t>
      <figure anchor="KEM-Flow1" align="left" suppress-title="false" pn="figure-3">
        <name slugifiedName="name-message-flow-when-the-pki-e">Message Flow When the PKI Entity Has a KEM Key Pair and Certificate</name>
        <artset pn="section-appendix.e-4.1">
          <artwork type="svg" align="left" pn="section-appendix.e-4.1.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="688" width="560" viewBox="0 0 560 688" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,64 L 552,64" fill="none" stroke="black"/>
              <path d="M 200,176 L 216,176" fill="none" stroke="black"/>
              <path d="M 312,176 L 328,176" fill="none" stroke="black"/>
              <path d="M 200,288 L 216,288" fill="none" stroke="black"/>
              <path d="M 312,288 L 328,288" fill="none" stroke="black"/>
              <path d="M 200,384 L 216,384" fill="none" stroke="black"/>
              <path d="M 312,384 L 328,384" fill="none" stroke="black"/>
              <path d="M 8,480 L 64,480" fill="none" stroke="black"/>
              <path d="M 496,480 L 552,480" fill="none" stroke="black"/>
              <path d="M 200,560 L 216,560" fill="none" stroke="black"/>
              <path d="M 312,560 L 328,560" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="336,384 324,378.4 324,389.6" fill="black" transform="rotate(0,328,384)"/>
              <polygon class="arrowhead" points="336,176 324,170.4 324,181.6" fill="black" transform="rotate(0,328,176)"/>
              <polygon class="arrowhead" points="320,560 308,554.4 308,565.6" fill="black" transform="rotate(180,312,560)"/>
              <polygon class="arrowhead" points="320,288 308,282.4 308,293.6" fill="black" transform="rotate(180,312,288)"/>
              <polygon class="arrowhead" points="224,384 212,378.4 212,389.6" fill="black" transform="rotate(0,216,384)"/>
              <polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
              <polygon class="arrowhead" points="208,560 196,554.4 196,565.6" fill="black" transform="rotate(180,200,560)"/>
              <polygon class="arrowhead" points="208,288 196,282.4 196,293.6" fill="black" transform="rotate(180,200,288)"/>
              <g class="text">
                <text x="24" y="36">Step#</text>
                <text x="64" y="36">PKI</text>
                <text x="108" y="36">entity</text>
                <text x="360" y="36">PKI</text>
                <text x="420" y="36">management</text>
                <text x="492" y="36">entity</text>
                <text x="80" y="52">(Alice)</text>
                <text x="368" y="52">(Bob)</text>
                <text x="24" y="84">1</text>
                <text x="76" y="84">format</text>
                <text x="152" y="84">unprotected</text>
                <text x="220" y="84">genm</text>
                <text x="76" y="100">of</text>
                <text x="108" y="100">type</text>
                <text x="136" y="116">KemCiphertextInfo</text>
                <text x="96" y="132">without</text>
                <text x="156" y="132">value,</text>
                <text x="200" y="132">and</text>
                <text x="80" y="148">KEM</text>
                <text x="144" y="148">certificate</text>
                <text x="204" y="148">in</text>
                <text x="108" y="164">extraCerts</text>
                <text x="24" y="180">2</text>
                <text x="260" y="180">genm</text>
                <text x="24" y="196">3</text>
                <text x="380" y="196">validate</text>
                <text x="432" y="196">KEM</text>
                <text x="496" y="196">certificate</text>
                <text x="24" y="212">4</text>
                <text x="376" y="212">perform</text>
                <text x="424" y="212">KEM</text>
                <text x="488" y="212">Encapsulate</text>
                <text x="24" y="228">5</text>
                <text x="372" y="228">format</text>
                <text x="448" y="228">unprotected</text>
                <text x="516" y="228">genp</text>
                <text x="372" y="244">of</text>
                <text x="404" y="244">type</text>
                <text x="432" y="260">KemCiphertextInfo</text>
                <text x="400" y="276">providing</text>
                <text x="456" y="276">KEM</text>
                <text x="516" y="276">ciphertext</text>
                <text x="24" y="292">6</text>
                <text x="260" y="292">genp</text>
                <text x="24" y="308">7</text>
                <text x="80" y="308">perform</text>
                <text x="128" y="308">KEM</text>
                <text x="192" y="308">Decapsulate</text>
                <text x="24" y="324">8</text>
                <text x="80" y="324">perform</text>
                <text x="128" y="324">key</text>
                <text x="188" y="324">derivation</text>
                <text x="76" y="340">to</text>
                <text x="104" y="340">get</text>
                <text x="136" y="340">ssk</text>
                <text x="24" y="356">9</text>
                <text x="76" y="356">format</text>
                <text x="136" y="356">request</text>
                <text x="188" y="356">with</text>
                <text x="104" y="372">MAC-based</text>
                <text x="188" y="372">protection</text>
                <text x="20" y="388">10</text>
                <text x="264" y="388">request</text>
                <text x="20" y="404">11</text>
                <text x="376" y="404">perform</text>
                <text x="424" y="404">key</text>
                <text x="484" y="404">derivation</text>
                <text x="372" y="420">to</text>
                <text x="400" y="420">get</text>
                <text x="432" y="420">ssk</text>
                <text x="20" y="436">12</text>
                <text x="372" y="436">verify</text>
                <text x="440" y="436">MAC-based</text>
                <text x="404" y="452">protection</text>
                <text x="96" y="484">PKI</text>
                <text x="140" y="484">entity</text>
                <text x="224" y="484">authenticated</text>
                <text x="292" y="484">by</text>
                <text x="320" y="484">PKI</text>
                <text x="380" y="484">management</text>
                <text x="452" y="484">entity</text>
                <text x="20" y="516">13</text>
                <text x="372" y="516">format</text>
                <text x="436" y="516">response</text>
                <text x="492" y="516">with</text>
                <text x="404" y="532">protection</text>
                <text x="488" y="532">depending</text>
                <text x="540" y="532">on</text>
                <text x="400" y="548">available</text>
                <text x="456" y="548">key</text>
                <text x="508" y="548">material</text>
                <text x="20" y="564">14</text>
                <text x="260" y="564">response</text>
                <text x="20" y="580">15</text>
                <text x="76" y="580">verify</text>
                <text x="148" y="580">protection</text>
                <text x="100" y="596">provided</text>
                <text x="148" y="596">by</text>
                <text x="176" y="596">the</text>
                <text x="80" y="612">PKI</text>
                <text x="140" y="612">management</text>
                <text x="212" y="612">entity</text>
                <text x="20" y="644">16</text>
                <text x="112" y="644">Further</text>
                <text x="180" y="644">messages</text>
                <text x="228" y="644">of</text>
                <text x="260" y="644">this</text>
                <text x="296" y="644">PKI</text>
                <text x="356" y="644">management</text>
                <text x="440" y="644">operation</text>
                <text x="80" y="660">can</text>
                <text x="108" y="660">be</text>
                <text x="160" y="660">exchanged</text>
                <text x="220" y="660">with</text>
                <text x="280" y="660">MAC-based</text>
                <text x="364" y="660">protection</text>
                <text x="420" y="660">by</text>
                <text x="448" y="660">the</text>
                <text x="480" y="660">PKI</text>
                <text x="100" y="676">entity</text>
                <text x="152" y="676">using</text>
                <text x="192" y="676">the</text>
                <text x="256" y="676">established</text>
                <text x="332" y="676">shared</text>
                <text x="388" y="676">secret</text>
                <text x="432" y="676">key</text>
                <text x="472" y="676">(ssk)</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="left" pn="section-appendix.e-4.1.2">
Step# PKI entity                           PKI management entity
      (Alice)                              (Bob)
---------------------------------------------------------------------
  1   format unprotected genm
        of type
        KemCiphertextInfo
        without value, and
        KEM certificate in
        extraCerts
  2                     --&gt;   genm    --&gt;
  3                                        validate KEM certificate
  4                                        perform KEM Encapsulate
  5                                        format unprotected genp
                                             of type
                                             KemCiphertextInfo
                                             providing KEM ciphertext
  6                     &lt;--   genp    &lt;--
  7   perform KEM Decapsulate
  8   perform key derivation
        to get ssk
  9   format request with
        MAC-based protection
 10                     --&gt;  request  --&gt;
 11                                        perform key derivation
                                             to get ssk
 12                                        verify MAC-based
                                             protection

--------  PKI entity authenticated by PKI management entity  --------

 13                                        format response with
                                             protection depending on
                                             available key material
 14                     &lt;-- response  &lt;--
 15   verify protection
        provided by the
        PKI management entity

 16       Further messages of this PKI management operation
        can be exchanged with MAC-based protection by the PKI
         entity using the established shared secret key (ssk)
</artwork>
        </artset>
      </figure>
      <figure anchor="KEM-Flow2" align="left" suppress-title="false" pn="figure-4">
        <name slugifiedName="name-message-flow-when-the-pki-en">Message Flow When the PKI Entity Knows That the PKI Management Entity Uses a KEM Key Pair and Has the Authentic Public Key</name>
        <artset pn="section-appendix.e-5.1">
          <artwork type="svg" align="left" pn="section-appendix.e-5.1.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="560" viewBox="0 0 560 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,64 L 552,64" fill="none" stroke="black"/>
              <path d="M 200,208 L 216,208" fill="none" stroke="black"/>
              <path d="M 312,208 L 328,208" fill="none" stroke="black"/>
              <path d="M 200,304 L 216,304" fill="none" stroke="black"/>
              <path d="M 312,304 L 328,304" fill="none" stroke="black"/>
              <path d="M 8,400 L 64,400" fill="none" stroke="black"/>
              <path d="M 496,400 L 552,400" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="336,208 324,202.4 324,213.6" fill="black" transform="rotate(0,328,208)"/>
              <polygon class="arrowhead" points="320,304 308,298.4 308,309.6" fill="black" transform="rotate(180,312,304)"/>
              <polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
              <polygon class="arrowhead" points="208,304 196,298.4 196,309.6" fill="black" transform="rotate(180,200,304)"/>
              <g class="text">
                <text x="24" y="36">Step#</text>
                <text x="64" y="36">PKI</text>
                <text x="108" y="36">entity</text>
                <text x="360" y="36">PKI</text>
                <text x="420" y="36">management</text>
                <text x="492" y="36">entity</text>
                <text x="72" y="52">(Bob)</text>
                <text x="376" y="52">(Alice)</text>
                <text x="24" y="84">1</text>
                <text x="80" y="84">perform</text>
                <text x="128" y="84">KEM</text>
                <text x="192" y="84">Encapsulate</text>
                <text x="24" y="100">2</text>
                <text x="76" y="100">format</text>
                <text x="136" y="100">request</text>
                <text x="208" y="100">providing</text>
                <text x="80" y="116">KEM</text>
                <text x="140" y="116">ciphertext</text>
                <text x="196" y="116">in</text>
                <text x="112" y="132">generalInfo</text>
                <text x="172" y="132">of</text>
                <text x="204" y="132">type</text>
                <text x="140" y="148">KemCiphertextInfo,</text>
                <text x="80" y="164">and</text>
                <text x="116" y="164">with</text>
                <text x="180" y="164">protection</text>
                <text x="104" y="180">depending</text>
                <text x="156" y="180">on</text>
                <text x="208" y="180">available</text>
                <text x="80" y="196">key</text>
                <text x="132" y="196">material</text>
                <text x="24" y="212">3</text>
                <text x="264" y="212">request</text>
                <text x="24" y="228">4</text>
                <text x="376" y="228">perform</text>
                <text x="424" y="228">KEM</text>
                <text x="488" y="228">Decapsulate</text>
                <text x="24" y="244">5</text>
                <text x="376" y="244">perform</text>
                <text x="424" y="244">key</text>
                <text x="484" y="244">derivation</text>
                <text x="372" y="260">to</text>
                <text x="400" y="260">get</text>
                <text x="432" y="260">ssk</text>
                <text x="24" y="276">6</text>
                <text x="372" y="276">format</text>
                <text x="436" y="276">response</text>
                <text x="492" y="276">with</text>
                <text x="400" y="292">MAC-based</text>
                <text x="484" y="292">protection</text>
                <text x="24" y="308">7</text>
                <text x="260" y="308">response</text>
                <text x="24" y="324">8</text>
                <text x="80" y="324">perform</text>
                <text x="128" y="324">key</text>
                <text x="188" y="324">derivation</text>
                <text x="76" y="340">to</text>
                <text x="104" y="340">get</text>
                <text x="136" y="340">ssk</text>
                <text x="24" y="356">9</text>
                <text x="76" y="356">verify</text>
                <text x="144" y="356">MAC-based</text>
                <text x="108" y="372">protection</text>
                <text x="96" y="404">PKI</text>
                <text x="156" y="404">management</text>
                <text x="228" y="404">entity</text>
                <text x="312" y="404">authenticated</text>
                <text x="380" y="404">by</text>
                <text x="408" y="404">PKI</text>
                <text x="452" y="404">entity</text>
                <text x="20" y="436">10</text>
                <text x="112" y="436">Further</text>
                <text x="180" y="436">messages</text>
                <text x="228" y="436">of</text>
                <text x="260" y="436">this</text>
                <text x="296" y="436">PKI</text>
                <text x="356" y="436">management</text>
                <text x="440" y="436">operation</text>
                <text x="96" y="452">can</text>
                <text x="124" y="452">be</text>
                <text x="176" y="452">exchanged</text>
                <text x="236" y="452">with</text>
                <text x="296" y="452">MAC-based</text>
                <text x="380" y="452">protection</text>
                <text x="436" y="452">by</text>
                <text x="464" y="452">the</text>
                <text x="120" y="468">PKI</text>
                <text x="180" y="468">management</text>
                <text x="252" y="468">entity</text>
                <text x="304" y="468">using</text>
                <text x="344" y="468">the</text>
                <text x="408" y="468">established</text>
                <text x="220" y="484">shared</text>
                <text x="276" y="484">secret</text>
                <text x="320" y="484">key</text>
                <text x="360" y="484">(ssk)</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="left" pn="section-appendix.e-5.1.2">
Step# PKI entity                           PKI management entity
      (Bob)                                (Alice)
---------------------------------------------------------------------
  1   perform KEM Encapsulate
  2   format request providing
        KEM ciphertext in
        generalInfo of type
        KemCiphertextInfo,
        and with protection
        depending on available
        key material
  3                     --&gt;  request  --&gt;
  4                                        perform KEM Decapsulate
  5                                        perform key derivation
                                             to get ssk
  6                                        format response with
                                             MAC-based protection
  7                     &lt;-- response  &lt;--
  8   perform key derivation
        to get ssk
  9   verify MAC-based
        protection

--------  PKI management entity authenticated by PKI entity  --------

 10       Further messages of this PKI management operation
          can be exchanged with MAC-based protection by the
             PKI management entity using the established
                        shared secret key (ssk)
</artwork>
        </artset>
      </figure>
      <t indent="0" pn="section-appendix.e-6">Note: <xref target="KEM-Flow2" format="default" sectionFormat="of" derivedContent="Figure 4"/> describes the situation where KEM-based message protection may not require more than one message exchange.  In this case, the transactionID <bcp14>MUST</bcp14> also be used by the PKI entity (Bob) to ensure domain separation between different PKI management operations.</t>
      <figure anchor="KEM-Flow3" align="left" suppress-title="false" pn="figure-5">
        <name slugifiedName="name-message-flow-when-the-pki-ent">Message Flow When the PKI Entity Does Not Know That the PKI Management Entity Uses a KEM Key Pair</name>
        <artset pn="section-appendix.e-7.1">
          <artwork type="svg" align="left" pn="section-appendix.e-7.1.1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="560" viewBox="0 0 560 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,64 L 552,64" fill="none" stroke="black"/>
              <path d="M 200,144 L 216,144" fill="none" stroke="black"/>
              <path d="M 312,144 L 328,144" fill="none" stroke="black"/>
              <path d="M 200,256 L 216,256" fill="none" stroke="black"/>
              <path d="M 312,256 L 328,256" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="336,144 324,138.4 324,149.6" fill="black" transform="rotate(0,328,144)"/>
              <polygon class="arrowhead" points="320,256 308,250.4 308,261.6" fill="black" transform="rotate(180,312,256)"/>
              <polygon class="arrowhead" points="224,144 212,138.4 212,149.6" fill="black" transform="rotate(0,216,144)"/>
              <polygon class="arrowhead" points="208,256 196,250.4 196,261.6" fill="black" transform="rotate(180,200,256)"/>
              <g class="text">
                <text x="24" y="36">Step#</text>
                <text x="64" y="36">PKI</text>
                <text x="108" y="36">entity</text>
                <text x="360" y="36">PKI</text>
                <text x="420" y="36">management</text>
                <text x="492" y="36">entity</text>
                <text x="72" y="52">(Bob)</text>
                <text x="376" y="52">(Alice)</text>
                <text x="24" y="84">1</text>
                <text x="76" y="84">format</text>
                <text x="136" y="84">request</text>
                <text x="188" y="84">with</text>
                <text x="108" y="100">protection</text>
                <text x="192" y="100">depending</text>
                <text x="76" y="116">on</text>
                <text x="128" y="116">available</text>
                <text x="184" y="116">key</text>
                <text x="100" y="132">material</text>
                <text x="24" y="148">2</text>
                <text x="264" y="148">request</text>
                <text x="24" y="164">3</text>
                <text x="372" y="164">format</text>
                <text x="448" y="164">unprotected</text>
                <text x="520" y="164">error</text>
                <text x="380" y="180">with</text>
                <text x="428" y="180">status</text>
                <text x="504" y="180">"rejection"</text>
                <text x="376" y="196">and</text>
                <text x="428" y="196">failInfo</text>
                <text x="428" y="212">"wrongIntegrity"</text>
                <text x="512" y="212">and</text>
                <text x="544" y="212">KEM</text>
                <text x="408" y="228">certificate</text>
                <text x="468" y="228">in</text>
                <text x="404" y="244">extraCerts</text>
                <text x="24" y="260">4</text>
                <text x="264" y="260">error</text>
                <text x="24" y="276">5</text>
                <text x="84" y="276">validate</text>
                <text x="136" y="276">KEM</text>
                <text x="200" y="276">certificate</text>
                <text x="24" y="308">6</text>
                <text x="168" y="308">proceed</text>
                <text x="212" y="308">as</text>
                <text x="248" y="308">shown</text>
                <text x="284" y="308">in</text>
                <text x="312" y="308">the</text>
                <text x="356" y="308">figure</text>
                <text x="412" y="308">before</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="left" pn="section-appendix.e-7.1.2">
Step# PKI entity                           PKI management entity
      (Bob)                                (Alice)
---------------------------------------------------------------------
  1   format request with
        protection depending
        on available key
        material
  2                     --&gt;  request  --&gt;
  3                                        format unprotected error
                                             with status "rejection"
                                             and failInfo
                                             "wrongIntegrity" and KEM
                                             certificate in
                                             extraCerts
  4                     &lt;--   error   &lt;--
  5   validate KEM certificate

  6              proceed as shown in the figure before
</artwork>
        </artset>
      </figure>
    </section>
    <section anchor="sect-f" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.f">
      <name slugifiedName="name-compilable-asn1-definitions">Compilable ASN.1 Definitions</name>
      <t indent="0" pn="section-appendix.f-1">This section contains the updated 2002 ASN.1 module from <xref target="RFC5912" format="default" sectionFormat="of" derivedContent="RFC5912"/>, which
was updated in <xref target="RFC9480" format="default" sectionFormat="of" derivedContent="RFC9480"/>.
This module replaces the module in <xref section="9" target="RFC5912" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5912#section-9" derivedContent="RFC5912"/>.
The module contains those changes to the normative ASN.1 module from
<xref section="F" sectionFormat="of" target="RFC4210" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4210#appendix-F" derivedContent="RFC4210"/> that were specified in <xref target="RFC9480" format="default" sectionFormat="of" derivedContent="RFC9480"/>,
      as well as changes made in this document. This module makes reference to ASN.1 structures defined in <xref target="RFC6268" format="default" sectionFormat="of" derivedContent="RFC6268"/>,
  as well as the UTF-8 encoding defined in <xref target="RFC3629" format="default" sectionFormat="of" derivedContent="RFC3629"/>.</t>
      <sourcecode type="asn.1" markers="false" pn="section-appendix.f-2">
PKIXCMP-2023
    { iso(1) identified-organization(3) dod(6) internet(1)
    security(5) mechanisms(5) pkix(7) id-mod(0)
    id-mod-cmp2023-02(116) }
DEFINITIONS EXPLICIT TAGS ::=
BEGIN
IMPORTS

AttributeSet{}, SingleAttribute{}, Extensions{}, EXTENSION, ATTRIBUTE
FROM PKIX-CommonTypes-2009
    {iso(1) identified-organization(3) dod(6) internet(1) security(5)
    mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)}

AlgorithmIdentifier{}, SIGNATURE-ALGORITHM, ALGORITHM,
    DIGEST-ALGORITHM, MAC-ALGORITHM, KEY-DERIVATION
FROM AlgorithmInformation-2009
    {iso(1) identified-organization(3) dod(6) internet(1) security(5)
    mechanisms(5) pkix(7) id-mod(0)
    id-mod-algorithmInformation-02(58)}

Certificate, CertificateList, Time, id-kp
FROM PKIX1Explicit-2009
    {iso(1) identified-organization(3) dod(6) internet(1) security(5)
    mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)}

DistributionPointName, GeneralNames, GeneralName, KeyIdentifier
FROM PKIX1Implicit-2009
    {iso(1) identified-organization(3) dod(6) internet(1) security(5)
    mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}

CertTemplate, PKIPublicationInfo, EncryptedKey, CertId,
    CertReqMessages, Controls, RegControlSet, id-regCtrl
FROM PKIXCRMF-2009
    { iso(1) identified-organization(3) dod(6) internet(1)
    security(5) mechanisms(5) pkix(7) id-mod(0)
    id-mod-crmf2005-02(55) }
    -- The import of EncryptedKey is added due to the updates made
    -- in [RFC9480]. EncryptedValue does not need to be imported
    -- anymore and is therefore removed here.

CertificationRequest
FROM PKCS-10
    {iso(1) identified-organization(3) dod(6) internet(1) security(5)
    mechanisms(5) pkix(7) id-mod(0) id-mod-pkcs10-2009(69)}
-- (specified in [RFC2986] with 1993 ASN.1 syntax and IMPLICIT
-- tags).  Alternatively, implementers may directly include
-- the syntax of [RFC2986] in this module.

localKeyId
FROM PKCS-9
    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)
    modules(0) pkcs-9(1)}
    -- The import of localKeyId is added due to the updates made in
    -- [RFC9480]

EnvelopedData, SignedData
FROM CryptographicMessageSyntax-2010
    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)
    smime(16) modules(0) id-mod-cms-2009(58)}
    -- The import of EnvelopedData and SignedData from [RFC6268] is
    -- added due to the updates made in CMP Updates [RFC9480]

KEM-ALGORITHM
FROM KEMAlgorithmInformation-2023  -- [RFC9629]
    { iso(1) identified-organization(3) dod(6) internet(1)
    security(5) mechanisms(5) pkix(7) id-mod(0)
    id-mod-kemAlgorithmInformation-2023(109) }
    -- The import of KEM-ALGORITHM was added due to the updates made
    -- in [RFC9810]
;

-- History of the PKIXCMP ASN.1 modules
-- [RFC2510]
--    1988 Syntax, PKIXCMP, 1.3.6.1.5.5.7.0.9 (id-mod-cmp)
--    Obsoleted by RFC 4210 PKIXCMP, 1.3.6.1.5.5.7.0.16
--                                   (id-mod-cmp2000)
-- [RFC4210]
--    1988 Syntax, PKIXCMP, 1.3.6.1.5.5.7.0.16 (id-mod-cmp2000)
--    Replaced by RFC 9480 PKIXCMP, 1.3.6.1.5.5.7.0.99
--                                  (id-mod-cmp2021-88)
-- [RFC5912]
--    2002 Syntax, PKIXCMP-2009, 1.3.6.1.5.5.7.0.50
--                               (id-mod-cmp2000-02)
--    Replaced by RFC 9480 PKIXCMP-2021, 1.3.6.1.5.5.7.0.100
--                                       (id-mod-cmp2021-02)
-- [RFC9480]
--    1988 Syntax, PKIXCMP, 1.3.6.1.5.5.7.0.99 (id-mod-cmp2021-88)
--    2002 Syntax, PKIXCMP-2021, 1.3.6.1.5.5.7.0.100
--                               (id-mod-cmp2021-02)
--    Obsoleted by [RFC9810] PKIXCMP-2023, 1.3.6.1.5.5.7.0.116
--                                         (id-mod-cmp2023-02)
-- [RFC9810]
--    2002 Syntax, PKIXCMP-2023, 1.3.6.1.5.5.7.0.116
--                               (id-mod-cmp2023-02)


-- The rest of the module contains locally defined OIDs and
-- constructs:

CMPCertificate ::= CHOICE { x509v3PKCert Certificate, ... }
-- This syntax, while bits-on-the-wire compatible with the
-- standard X.509 definition of "Certificate", allows the
-- possibility of future certificate types (such as X.509
-- attribute certificates, card-verifiable certificates, or other
-- kinds of certificates) within this Certificate Management
-- Protocol, should a need ever arise to support such generality.
-- Those implementations that do not foresee a need to ever support
-- other certificate types MAY, if they wish, comment out the
-- above structure and "uncomment" the following one prior to
-- compiling this ASN.1 module.  (Note that interoperability
-- with implementations that don't do this will be unaffected by
-- this change.)

-- CMPCertificate ::= Certificate

PKIMessage ::= SEQUENCE {
    header           PKIHeader,
    body             PKIBody,
    protection   [0] PKIProtection OPTIONAL,
    extraCerts   [1] SEQUENCE SIZE (1..MAX) OF CMPCertificate
                  OPTIONAL }

PKIMessages ::= SEQUENCE SIZE (1..MAX) OF PKIMessage

PKIHeader ::= SEQUENCE {
    pvno                INTEGER     { cmp1999(1), cmp2000(2),
                                      cmp2021(3) },
    sender              GeneralName,
    -- identifies the sender
    recipient           GeneralName,
    -- identifies the intended recipient
    messageTime     [0] GeneralizedTime         OPTIONAL,
    -- time of production of this message (used when sender
    -- believes that the transport will be "suitable", i.e.,
    -- that the time will still be meaningful upon receipt)
    protectionAlg   [1] AlgorithmIdentifier{ALGORITHM, {...}}
                            OPTIONAL,
    -- algorithm used for calculation of protection bits
    senderKID       [2] KeyIdentifier           OPTIONAL,
    recipKID        [3] KeyIdentifier           OPTIONAL,
    -- to identify specific keys used for protection
    transactionID   [4] OCTET STRING            OPTIONAL,
    -- identifies the transaction, i.e., this will be the same in
    -- corresponding request, response, certConf, and pkiconf
    -- messages
    senderNonce     [5] OCTET STRING            OPTIONAL,
    recipNonce      [6] OCTET STRING            OPTIONAL,
    -- nonces used to provide replay protection, senderNonce
    -- is inserted by the creator of this message; recipNonce
    -- is a nonce previously inserted in a related message by
    -- the intended recipient of this message.
    freeText        [7] PKIFreeText             OPTIONAL,
    -- this may be used to indicate context-specific instructions
    -- (this field is intended for human consumption)
    generalInfo     [8] SEQUENCE SIZE (1..MAX) OF
                        InfoTypeAndValue     OPTIONAL
    -- this may be used to convey context-specific information
    -- (this field is not primarily intended for human consumption)
}

PKIFreeText ::= SEQUENCE SIZE (1..MAX) OF UTF8String
    -- text encoded as UTF-8 string [RFC3629]

PKIBody ::= CHOICE {       -- message-specific body elements
    ir       [0]  CertReqMessages,        --Initialization Request
    ip       [1]  CertRepMessage,         --Initialization Response
    cr       [2]  CertReqMessages,        --Certification Request
    cp       [3]  CertRepMessage,         --Certification Response
    p10cr    [4]  CertificationRequest,   --imported from [RFC2986]
    popdecc  [5]  POPODecKeyChallContent, --pop Challenge
    popdecr  [6]  POPODecKeyRespContent,  --pop Response
    kur      [7]  CertReqMessages,        --Key Update Request
    kup      [8]  CertRepMessage,         --Key Update Response
    krr      [9]  CertReqMessages,        --Key Recovery Request
    krp      [10] KeyRecRepContent,       --Key Recovery Response
    rr       [11] RevReqContent,          --Revocation Request
    rp       [12] RevRepContent,          --Revocation Response
    ccr      [13] CertReqMessages,        --Cross-Cert. Request
    ccp      [14] CertRepMessage,         --Cross-Cert. Response
    ckuann   [15] CAKeyUpdContent,        --CA Key Update Ann.
    cann     [16] CertAnnContent,         --Certificate Ann.
    rann     [17] RevAnnContent,          --Revocation Ann.
    crlann   [18] CRLAnnContent,          --CRL Announcement
    pkiconf  [19] PKIConfirmContent,      --Confirmation
    nested   [20] NestedMessageContent,   --Nested Message
    genm     [21] GenMsgContent,          --General Message
    genp     [22] GenRepContent,          --General Response
    error    [23] ErrorMsgContent,        --Error Message
    certConf [24] CertConfirmContent,     --Certificate Confirm
    pollReq  [25] PollReqContent,         --Polling Request
    pollRep  [26] PollRepContent          --Polling Response
}

PKIProtection ::= BIT STRING

ProtectedPart ::= SEQUENCE {
    header    PKIHeader,
    body      PKIBody }

id-PasswordBasedMac OBJECT IDENTIFIER ::= { iso(1) member-body(2)
    usa(840) nt(113533) nsn(7) algorithms(66) 13 }
PBMParameter ::= SEQUENCE {
    salt                OCTET STRING,
    -- Note:  Implementations MAY wish to limit acceptable sizes
    -- of this string to values appropriate for their environment
    -- in order to reduce the risk of denial-of-service attacks.
    owf                 AlgorithmIdentifier{DIGEST-ALGORITHM, {...}},
    -- AlgId for the OWF
    iterationCount      INTEGER,
    -- number of times the OWF is applied
    -- Note:  Implementations MAY wish to limit acceptable sizes
    -- of this integer to values appropriate for their environment
    -- in order to reduce the risk of denial-of-service attacks.
    mac                 AlgorithmIdentifier{MAC-ALGORITHM, {...}}
    -- AlgId of the MAC algorithm
}

id-DHBasedMac OBJECT IDENTIFIER ::= { iso(1) member-body(2)
    usa(840) nt(113533) nsn(7) algorithms(66) 30 }
DHBMParameter ::= SEQUENCE {
    owf                 AlgorithmIdentifier{DIGEST-ALGORITHM, {...}},
    -- AlgId for an OWF
    mac                 AlgorithmIdentifier{MAC-ALGORITHM, {...}}
    -- AlgId of the MAC algorithm
}

-- id-KemBasedMac and KemBMParameter were added in [RFC9810]

id-KemBasedMac OBJECT IDENTIFIER ::= { iso(1) member-body(2)
    usa(840) nt(113533) nsn(7) algorithms(66) 16 }
KemBMParameter ::= SEQUENCE {
    kdf              AlgorithmIdentifier{KEY-DERIVATION, {...}},
    -- AlgId of the Key Derivation Function algorithm
    kemContext   [0] OCTET STRING OPTIONAL,
    -- MAY contain additional algorithm-specific context information
    len              INTEGER (1..MAX),
    -- Defines the length of the keying material output of the KDF
    -- SHOULD be the maximum key length of the MAC function
    mac              AlgorithmIdentifier{MAC-ALGORITHM, {...}}
    -- AlgId of the MAC algorithm
}

PKIStatus ::= INTEGER {
    accepted               (0),
    -- you got exactly what you asked for
    grantedWithMods        (1),
    -- you got something like what you asked for; the
    -- requester is responsible for ascertaining the differences
    rejection              (2),
    -- you don't get it, more information elsewhere in the message
    waiting                (3),
    -- the request body part has not yet been processed; expect to
    -- hear more later (note: proper handling of this status
    -- response MAY use the polling req/rep PKIMessages specified
    -- in Section 5.3.22; alternatively, polling in the underlying
    -- transport layer MAY have some utility in this regard)
    revocationWarning      (4),
    -- this message contains a warning that a revocation is
    -- imminent
    revocationNotification (5),
    -- notification that a revocation has occurred
    keyUpdateWarning       (6)
    -- update already done for the oldCertId specified in
    -- CertReqMsg
}

PKIFailureInfo ::= BIT STRING {
-- since we can fail in more than one way!
-- More codes may be added in the future if/when required.
    badAlg              (0),
    -- unrecognized or unsupported algorithm identifier
    badMessageCheck     (1),
    -- integrity check failed (e.g., signature did not verify)
    badRequest          (2),
    -- transaction not permitted or supported
    badTime             (3),
    -- messageTime was not sufficiently close to the system time,
    -- as defined by local policy
    badCertId           (4),
    -- no certificate could be found matching the provided criteria
    badDataFormat       (5),
    -- the data submitted has the wrong format
    wrongAuthority      (6),
    -- the authority indicated in the request is different from the
    -- one creating the response token
    incorrectData       (7),
    -- the requester's data is incorrect (for notary services)
    missingTimeStamp    (8),
    -- when the timestamp is missing but should be there
    -- (by policy)
    badPOP              (9),
    -- the POP failed
    certRevoked         (10),
    -- the certificate has already been revoked
    certConfirmed       (11),
    -- the certificate has already been confirmed
    wrongIntegrity      (12),
    -- KEM ciphertext missing for MAC-based protection of response,
    -- or not valid integrity of message received (password based
    -- instead of signature or vice versa)
    badRecipientNonce   (13),
    -- not valid recipient nonce, either missing or wrong value
    timeNotAvailable    (14),
    -- the TSA's time source is not available
    unacceptedPolicy    (15),
    -- the requested TSA policy is not supported by the TSA
    unacceptedExtension (16),
    -- the requested extension is not supported by the TSA
    addInfoNotAvailable (17),
    -- the additional information requested could not be
    -- understood or is not available
    badSenderNonce      (18),
    -- not valid sender nonce, either missing or wrong size
    badCertTemplate     (19),
    -- not valid cert. template or missing mandatory information
    signerNotTrusted    (20),
    -- signer of the message unknown or not trusted
    transactionIdInUse  (21),
    -- the transaction identifier is already in use
    unsupportedVersion  (22),
    -- the version of the message is not supported
    notAuthorized       (23),
    -- the sender was not authorized to make the preceding
    -- request or perform the preceding action
    systemUnavail       (24),
    -- the request cannot be handled due to system unavailability
    systemFailure       (25),
    -- the request cannot be handled due to system failure
    duplicateCertReq    (26)
    -- certificate cannot be issued because a duplicate
    -- certificate already exists
}

PKIStatusInfo ::= SEQUENCE {
    status        PKIStatus,
    statusString  PKIFreeText     OPTIONAL,
    failInfo      PKIFailureInfo  OPTIONAL }

OOBCert ::= CMPCertificate

OOBCertHash ::= SEQUENCE {
    hashAlg     [0] AlgorithmIdentifier{DIGEST-ALGORITHM, {...}}
                        OPTIONAL,
    certId      [1] CertId                  OPTIONAL,
    hashVal         BIT STRING
    -- hashVal is calculated over the DER encoding of the
    -- self-signed certificate with the identifier certID.
}

POPODecKeyChallContent ::= SEQUENCE OF Challenge
-- One Challenge per encryption or key agreement key certification
-- request (in the same order as these requests appear in
-- CertReqMessages).

-- encryptedRand was added in [RFC9810]

Challenge ::= SEQUENCE {
   owf                 AlgorithmIdentifier{DIGEST-ALGORITHM, {...}}
                            OPTIONAL,
   -- MUST be present in the first Challenge; MAY be omitted in
   -- any subsequent Challenge in POPODecKeyChallContent (if
   -- omitted, then the owf used in the immediately preceding
   -- Challenge is to be used).
   witness             OCTET STRING,
   -- the result of applying the OWF to a
   -- randomly generated INTEGER, A. (Note that a different
   -- INTEGER MUST be used for each Challenge.)
   challenge           OCTET STRING,
   -- MUST be used for cmp2000(2) popdecc messages and MUST be
   -- the encryption of Rand (using a mechanism depending on the
   -- private key type).
   -- MUST be an empty OCTET STRING for cmp2021(3) popdecc messages.
   -- Note: Using challenge omitting the optional encryptedRand is
   -- bit-compatible to the syntax without adding this optional
   -- field.
   encryptedRand   [0] EnvelopedData OPTIONAL
   -- MUST be omitted for cmp2000(2) popdecc messages.
   -- MUST be used for cmp2021(3) popdecc messages and MUST contain
   -- the encrypted value of Rand using CMS EnvelopedData using the
   -- key management technique depending on the private key type as
   -- defined in Section 5.2.2.
}

-- Rand was added in [RFC9480]

Rand ::= SEQUENCE {
-- Rand is encrypted involving the public key to form the content of
-- challenge or encryptedRand in POPODecKeyChallContent
   int                  INTEGER,
   -- the randomly generated INTEGER A (above)
   sender               GeneralName
   -- the sender's name (as included in PKIHeader)
}

POPODecKeyRespContent ::= SEQUENCE OF INTEGER
-- One INTEGER per encryption or key agreement key certification
-- request (in the same order as these requests appear in
-- CertReqMessages). The retrieved INTEGER A (above) is returned to
-- the sender of the corresponding Challenge.

CertRepMessage ::= SEQUENCE {
    caPubs       [1] SEQUENCE SIZE (1..MAX) OF CMPCertificate
                  OPTIONAL,
    response         SEQUENCE OF CertResponse }

CertResponse ::= SEQUENCE {
    certReqId           INTEGER,
    -- to match this response with the corresponding request (a value
    -- of -1 is to be used if certReqId is not specified in the
    -- corresponding request, which can only be a p10cr)
    status              PKIStatusInfo,
    certifiedKeyPair    CertifiedKeyPair    OPTIONAL,
    rspInfo             OCTET STRING        OPTIONAL
    -- analogous to the id-regInfo-utf8Pairs string defined
    -- for regInfo in CertReqMsg [RFC4211]
}

CertifiedKeyPair ::= SEQUENCE {
    certOrEncCert       CertOrEncCert,
    privateKey      [0] EncryptedKey      OPTIONAL,
    -- See [RFC4211] for comments on encoding.
    -- Changed from EncryptedValue to EncryptedKey as a CHOICE of
    -- EncryptedValue and EnvelopedData due to the changes made in
    -- [RFC9480].
    -- Using the choice EncryptedValue is bit-compatible to the
    -- syntax without this change.
    publicationInfo [1] PKIPublicationInfo  OPTIONAL }

CertOrEncCert ::= CHOICE {
    certificate     [0] CMPCertificate,
    encryptedCert   [1] EncryptedKey
    -- Changed from Encrypted Value to EncryptedKey as a CHOICE of
    -- EncryptedValue and EnvelopedData due to the changes made in
    -- [RFC9480].
    -- Using the choice EncryptedValue is bit-compatible to the
    -- syntax without this change.
}

KeyRecRepContent ::= SEQUENCE {
    status                  PKIStatusInfo,
    newSigCert          [0] CMPCertificate OPTIONAL,
    caCerts             [1] SEQUENCE SIZE (1..MAX) OF
                                     CMPCertificate OPTIONAL,
    keyPairHist         [2] SEQUENCE SIZE (1..MAX) OF
                                     CertifiedKeyPair OPTIONAL }

RevReqContent ::= SEQUENCE OF RevDetails

RevDetails ::= SEQUENCE {
    certDetails         CertTemplate,
    -- allows requester to specify as much as they can about
    -- the cert. for which revocation is requested
    -- (e.g., for cases in which serialNumber is not available)
    crlEntryDetails     Extensions{{...}}    OPTIONAL
    -- requested crlEntryExtensions
}

RevRepContent ::= SEQUENCE {
    status       SEQUENCE SIZE (1..MAX) OF PKIStatusInfo,
    -- in same order as was sent in RevReqContent
    revCerts [0] SEQUENCE SIZE (1..MAX) OF CertId OPTIONAL,
    -- IDs for which revocation was requested
    -- (same order as status)
    crls     [1] SEQUENCE SIZE (1..MAX) OF CertificateList OPTIONAL
    -- the resulting CRLs (there may be more than one)
}

CAKeyUpdAnnContent ::= SEQUENCE {
    oldWithNew   CMPCertificate, -- old pub signed with new priv
    newWithOld   CMPCertificate, -- new pub signed with old priv
    newWithNew   CMPCertificate  -- new pub signed with new priv
}

-- CAKeyUpdContent was added in [RFC9810]
CAKeyUpdContent ::= CHOICE {
    cAKeyUpdAnnV2      CAKeyUpdAnnContent, -- deprecated
    cAKeyUpdAnnV3  [0] RootCaKeyUpdateContent
}
-- With cmp2021, the use of CAKeyUpdAnnContent is deprecated, use
-- RootCaKeyUpdateContent instead.

CertAnnContent ::= CMPCertificate

RevAnnContent ::= SEQUENCE {
    status              PKIStatus,
    certId              CertId,
    willBeRevokedAt     GeneralizedTime,
    badSinceDate        GeneralizedTime,
    crlDetails          Extensions{{...}}  OPTIONAL
    -- extra CRL details (e.g., crl number, reason, location, etc.)
}

CRLAnnContent ::= SEQUENCE OF CertificateList

PKIConfirmContent ::= NULL

NestedMessageContent ::= PKIMessages

-- CertReqTemplateContent, AttributeTypeAndValue,
-- ExpandedRegControlSet, id-regCtrl-altCertTemplate,
-- AltCertTemplate, regCtrl-algId, id-regCtrl-algId, AlgIdCtrl,
-- regCtrl-rsaKeyLen, id-regCtrl-rsaKeyLen, and RsaKeyLenCtrl
-- were added in [RFC9480]

CertReqTemplateContent ::= SEQUENCE {
   certTemplate           CertTemplate,
   -- prefilled certTemplate structure elements
   -- The SubjectPublicKeyInfo field in the certTemplate MUST NOT
   -- be used.
   keySpec                Controls OPTIONAL
   -- MAY be used to specify supported algorithms
   -- Controls  ::= SEQUENCE SIZE (1..MAX) OF AttributeTypeAndValue
   -- as specified in CRMF [RFC4211]
   }

AttributeTypeAndValue ::= SingleAttribute{{ ... }}

ExpandedRegControlSet ATTRIBUTE ::= { RegControlSet |
   regCtrl-altCertTemplate | regCtrl-algId | regCtrl-rsaKeyLen, ... }

regCtrl-altCertTemplate ATTRIBUTE ::=
   { TYPE AltCertTemplate IDENTIFIED BY id-regCtrl-altCertTemplate }

id-regCtrl-altCertTemplate OBJECT IDENTIFIER ::= { id-regCtrl 7 }

AltCertTemplate ::= AttributeTypeAndValue
   -- specifies a template for a certificate other than an X.509v3
   -- public key certificate

regCtrl-algId ATTRIBUTE ::=
   { TYPE AlgIdCtrl IDENTIFIED BY id-regCtrl-algId }

id-regCtrl-algId OBJECT IDENTIFIER ::= { id-regCtrl 11 }

AlgIdCtrl ::= AlgorithmIdentifier{ALGORITHM, {...}}
   -- SHALL be used to specify supported algorithms other than RSA

regCtrl-rsaKeyLen ATTRIBUTE ::=
   { TYPE RsaKeyLenCtrl IDENTIFIED BY id-regCtrl-rsaKeyLen }

id-regCtrl-rsaKeyLen OBJECT IDENTIFIER ::= { id-regCtrl 12 }

RsaKeyLenCtrl ::= INTEGER (1..MAX)
   -- SHALL be used to specify supported RSA key lengths

-- RootCaKeyUpdateContent, CRLSource, and CRLStatus were added in
-- [RFC9480]

RootCaKeyUpdateContent ::= SEQUENCE {
   newWithNew       CMPCertificate,
   -- new root CA certificate
   newWithOld   [0] CMPCertificate OPTIONAL,
   -- X.509 certificate containing the new public root CA key
   -- signed with the old private root CA key
   oldWithNew   [1] CMPCertificate OPTIONAL
   -- X.509 certificate containing the old public root CA key
   -- signed with the new private root CA key
   }

CRLSource ::= CHOICE {
   dpn          [0] DistributionPointName,
   issuer       [1] GeneralNames }

CRLStatus ::= SEQUENCE {
   source       CRLSource,
   thisUpdate   Time OPTIONAL }

-- KemCiphertextInfo and KemOtherInfo were added in [RFC9810]

KemCiphertextInfo ::= SEQUENCE {
   kem              AlgorithmIdentifier{KEM-ALGORITHM, {...}},
   -- AlgId of the KEM algorithm
   ct               OCTET STRING
   -- Ciphertext output from the Encapsulate function
   }

KemOtherInfo ::= SEQUENCE {
   staticString     PKIFreeText,
   -- MUST be "CMP-KEM"
   transactionID    OCTET STRING,
   -- MUST contain the values from the message previously received
   -- containing the ciphertext (ct) in KemCiphertextInfo
   kemContext   [0] OCTET STRING OPTIONAL
   -- MAY contain additional algorithm-specific context information
  }

INFO-TYPE-AND-VALUE ::= TYPE-IDENTIFIER

InfoTypeAndValue ::= SEQUENCE {
    infoType    INFO-TYPE-AND-VALUE.
                    &amp;id({SupportedInfoSet}),
    infoValue   INFO-TYPE-AND-VALUE.
                    &amp;Type({SupportedInfoSet}{@infoType}) }

SupportedInfoSet INFO-TYPE-AND-VALUE ::= { ... }

-- Example InfoTypeAndValue contents include, but are not limited
-- to, the following (uncomment in this ASN.1 module and use as
-- appropriate for a given environment):
--
--   id-it-caProtEncCert    OBJECT IDENTIFIER ::= {id-it 1}
--      CAProtEncCertValue      ::= CMPCertificate
--   id-it-signKeyPairTypes OBJECT IDENTIFIER ::= {id-it 2}
--      SignKeyPairTypesValue   ::= SEQUENCE SIZE (1..MAX) OF
--                                      AlgorithmIdentifier{{...}}
--   id-it-encKeyPairTypes  OBJECT IDENTIFIER ::= {id-it 3}
--      EncKeyPairTypesValue    ::= SEQUENCE SIZE (1..MAX) OF
--                                      AlgorithmIdentifier{{...}}
--   id-it-preferredSymmAlg OBJECT IDENTIFIER ::= {id-it 4}
--      PreferredSymmAlgValue   ::= AlgorithmIdentifier{{...}}
--   id-it-caKeyUpdateInfo  OBJECT IDENTIFIER ::= {id-it 5}
--      CAKeyUpdateInfoValue    ::= CAKeyUpdAnnContent
--      - id-it-caKeyUpdateInfo was deprecated with cmp2021
--   id-it-currentCRL       OBJECT IDENTIFIER ::= {id-it 6}
--      CurrentCRLValue         ::= CertificateList
--   id-it-unsupportedOIDs  OBJECT IDENTIFIER ::= {id-it 7}
--      UnsupportedOIDsValue    ::= SEQUENCE SIZE (1..MAX) OF
--                                          OBJECT IDENTIFIER
--   id-it-keyPairParamReq  OBJECT IDENTIFIER ::= {id-it 10}
--      KeyPairParamReqValue    ::= OBJECT IDENTIFIER
--   id-it-keyPairParamRep  OBJECT IDENTIFIER ::= {id-it 11}
--      KeyPairParamRepValue    ::= AlgorithmIdentifier{{...}}
--   id-it-revPassphrase    OBJECT IDENTIFIER ::= {id-it 12}
--      RevPassphraseValue      ::= EncryptedKey
--      - Changed from Encrypted Value to EncryptedKey as a CHOICE
--      - of EncryptedValue and EnvelopedData due to the changes
--      - made in [RFC9480]
--      - Using the choice EncryptedValue is bit-compatible to
--      - the syntax without this change
--   id-it-implicitConfirm  OBJECT IDENTIFIER ::= {id-it 13}
--      ImplicitConfirmValue    ::= NULL
--   id-it-confirmWaitTime  OBJECT IDENTIFIER ::= {id-it 14}
--      ConfirmWaitTimeValue    ::= GeneralizedTime
--   id-it-origPKIMessage   OBJECT IDENTIFIER ::= {id-it 15}
--      OrigPKIMessageValue     ::= PKIMessages
--   id-it-suppLangTags     OBJECT IDENTIFIER ::= {id-it 16}
--      SuppLangTagsValue       ::= SEQUENCE OF UTF8String
--   id-it-caCerts          OBJECT IDENTIFIER ::= {id-it 17}
--      CaCertsValue            ::= SEQUENCE SIZE (1..MAX) OF
--                                             CMPCertificate
--      - id-it-caCerts added in [RFC9480]
--   id-it-rootCaKeyUpdate  OBJECT IDENTIFIER ::= {id-it 18}
--      RootCaKeyUpdateValue    ::= RootCaKeyUpdateContent
--      - id-it-rootCaKeyUpdate added in [RFC9480]
--   id-it-certReqTemplate  OBJECT IDENTIFIER ::= {id-it 19}
--      CertReqTemplateValue    ::= CertReqTemplateContent
--      - id-it-certReqTemplate added in [RFC9480]
--   id-it-rootCaCert       OBJECT IDENTIFIER ::= {id-it 20}
--      RootCaCertValue         ::= CMPCertificate
--      - id-it-rootCaCert added in [RFC9480]
--   id-it-certProfile      OBJECT IDENTIFIER ::= {id-it 21}
--      CertProfileValue        ::= SEQUENCE SIZE (1..MAX) OF
--                                                 UTF8String
--      - id-it-certProfile added in [RFC9480]
--   id-it-crlStatusList    OBJECT IDENTIFIER ::= {id-it 22}
--      CRLStatusListValue      ::= SEQUENCE SIZE (1..MAX) OF
--                                                  CRLStatus
--      - id-it-crlStatusList added in [RFC9480]
--   id-it-crls             OBJECT IDENTIFIER ::= {id-it 23}
--      CRLsValue               ::= SEQUENCE SIZE (1..MAX) OF
--                                            CertificateList
--      - id-it-crls added in [RFC9480]
--   id-it-KemCiphertextInfo    OBJECT IDENTIFIER ::= {id-it 24}
--      KemCiphertextInfoValue  ::= KemCiphertextInfo
--      - id-it-KemCiphertextInfo was added in [RFC9810]
--
-- where
--
--   id-pkix OBJECT IDENTIFIER ::= {
--      iso(1) identified-organization(3)
--      dod(6) internet(1) security(5) mechanisms(5) pkix(7)}
-- and
--   id-it   OBJECT IDENTIFIER ::= {id-pkix 4}
--
--
-- This construct MAY also be used to define new PKIX Certificate
-- Management Protocol request and response messages or
-- general-purpose (e.g., announcement) messages for future needs
-- or for specific environments.

GenMsgContent ::= SEQUENCE OF InfoTypeAndValue

-- May be sent by end entity, RA, or CA (depending on message
-- content).  The OPTIONAL infoValue parameter of InfoTypeAndValue
-- will typically be omitted for some of the examples given above.
-- The receiver is free to ignore any contained OIDs that it
-- does not recognize.  If sent from end entity to CA, the empty set
-- indicates that the CA may send
-- any/all information that it wishes.

GenRepContent ::= SEQUENCE OF InfoTypeAndValue
-- The receiver MAY ignore any contained OIDs that it does not
-- recognize.

ErrorMsgContent ::= SEQUENCE {
    pKIStatusInfo          PKIStatusInfo,
    errorCode              INTEGER           OPTIONAL,
    -- implementation-specific error codes
    errorDetails           PKIFreeText       OPTIONAL
    -- implementation-specific error details
}

CertConfirmContent ::= SEQUENCE OF CertStatus

CertStatus ::= SEQUENCE {
    certHash    OCTET STRING,
    -- the hash of the certificate, using the same hash algorithm
    -- as is used to create and verify the certificate signature
    certReqId   INTEGER,
    -- to match this confirmation with the corresponding req/rep
    statusInfo  PKIStatusInfo OPTIONAL,
    hashAlg [0] AlgorithmIdentifier{DIGEST-ALGORITHM, {...}} OPTIONAL
    -- the hash algorithm to use for calculating certHash
    -- SHOULD NOT be used in all cases where the AlgorithmIdentifier
    -- of the certificate signature specifies a hash algorithm
   }

PollReqContent ::= SEQUENCE OF SEQUENCE {
    certReqId              INTEGER }

PollRepContent ::= SEQUENCE OF SEQUENCE {
    certReqId              INTEGER,
    checkAfter             INTEGER,  -- time in seconds
    reason                 PKIFreeText OPTIONAL }

--
-- EKU extension for PKI entities used in CMP
-- operations, added due to the changes made in [RFC9480]
-- The EKUs for the CA and RA are reused from CMC, as defined in
-- [RFC6402]
--

-- id-kp-cmcCA OBJECT IDENTIFIER ::= { id-kp 27 }
-- id-kp-cmcRA OBJECT IDENTIFIER ::= { id-kp 28 }
id-kp-cmKGA OBJECT IDENTIFIER ::= { id-kp 32 }

END
</sourcecode>
    </section>
    <section anchor="Acknowledgements" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.g">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t indent="0" pn="section-appendix.g-1">The authors of this document wish to thank <contact fullname="Carlisle Adams"/>, <contact fullname="Stephen Farrell"/>,
      <contact fullname="Tomi Kause"/>, and <contact fullname="Tero       Mononen"/>, the original authors of <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210"/>, for their
      work.</t>
      <t indent="0" pn="section-appendix.g-2">We also thank all reviewers of this document for their valuable
      feedback.</t>
      <t indent="0" pn="section-appendix.g-3">Adding KEM support to this document was partly funded by the German
      Federal Ministry of Education and Research in the project Quoryptan
      through grant number 16KIS2033.</t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.h">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author initials="H." surname="Brockhaus" fullname="Hendrik Brockhaus">
        <organization abbrev="Siemens" showOnFrontPage="true">Siemens</organization>
        <address>
          <postal>
            <street>Werner-von-Siemens-Strasse 1</street>
            <city>Munich</city>
            <code>80333</code>
            <country>Germany</country>
          </postal>
          <email>hendrik.brockhaus@siemens.com</email>
          <uri>https://www.siemens.com</uri>
        </address>
      </author>
      <author initials="D." surname="von Oheimb" fullname="David von Oheimb">
        <organization abbrev="Siemens" showOnFrontPage="true">Siemens</organization>
        <address>
          <postal>
            <street>Werner-von-Siemens-Strasse 1</street>
            <city>Munich</city>
            <code>80333</code>
            <country>Germany</country>
          </postal>
          <email>david.von.oheimb@siemens.com</email>
          <uri>https://www.siemens.com</uri>
        </address>
      </author>
      <author initials="M." surname="Ounsworth" fullname="Mike Ounsworth">
        <organization abbrev="Entrust" showOnFrontPage="true">Entrust</organization>
        <address>
          <postal>
            <street>1187 Park Place</street>
            <city>Minneapolis</city>
            <region>MN</region>
            <code>55379</code>
            <country>United States of America</country>
          </postal>
          <email>mike.ounsworth@entrust.com</email>
          <uri>https://www.entrust.com</uri>
        </address>
      </author>
      <author initials="J." surname="Gray" fullname="John Gray">
        <organization abbrev="Entrust" showOnFrontPage="true">Entrust</organization>
        <address>
          <postal>
            <street>1187 Park Place</street>
            <city>Minneapolis</city>
            <region>MN</region>
            <code>55379</code>
            <country>United States of America</country>
          </postal>
          <email>john.gray@entrust.com</email>
          <uri>https://www.entrust.com</uri>
        </address>
      </author>
    </section>
  </back>
</rfc>
